int isFull() {
return top == MAX - 1;}

int isEmpty() {
return top == -1;
}

void PUSH(int value) {
if (isFull()) {
printf("Stack Overflow! Cannot push %d\n", value);
}
else {
top++;
stack[top] = value;
printf("%d pushed into stack\n", value);
}
}

int POP() {
if (isEmpty()) {
printf("Stack Underflow! No elements to pop\n");
return -1; // Indicating stack underflow
}
else {
int value = stack[top];
top--;
return value;
}
}

void Display() {
if (isEmpty()) {
printf("Stack is empty!\n");
}
else {
printf("Stack elements are:\n");
for (int i = top; i >= 0; i--) {
printf("%d ", stack[i]);
}
printf("\n");
}
}

int main()
{
int choice, value;
while (1) {
printf("\nMenu:\n");
printf("1. PUSH\n");
printf("2. POP\n");
printf("3. Display\n");
printf("4. Exit\n");
printf("Enter your choice: ");
scanf("%d", &choice);
switch (choice) {
case 1:
printf("Enter value to PUSH: ");
scanf("%d", &value);
PUSH(value);
break;
case 2:
value = POP();
if (value != -1) {
printf("%d popped from stack\n", value);
}
break;
case 3:
Display();
break;
case 4:
printf("Exiting the program.\n");
exit(0);
default:
printf("Invalid choice! Please try again.\n");
}
}
return 0;
}