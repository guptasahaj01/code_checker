vector<int> boundaryTraversal(vector<vector<int>>& matrix) {
vector<int> res;
int i = 0, j = 0, n = matrix.size(), m = matrix[0].size();
while (j < m) res.push_back(matrix[0][j++]);
i = 1; j = m - 1;
while (i < n) res.push_back(matrix[i++][j]);
i = n - 1; j = m - 2;
if (n > 1)
while (j >= 0) res.push_back(matrix[i][j--]);
i = n - 2; j = 0;
if (m > 1)
while (i > 0) res.push_back(matrix[i--][j]);
return res;
}

int main() {
vector<vector<int>> matrix = {
{1, 2, 3, 4},
{5, 6, 7, 8},
{9, 10, 11, 12}
};
vector<int> result = boundaryTraversal(matrix);
for (int val : result) cout << val << " ";
cout << endl;
return 0;
}