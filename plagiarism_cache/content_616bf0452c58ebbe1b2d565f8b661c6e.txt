#ifndef CIRCLE_H_
#define CIRCLE_H_


    class Circle {
    public:
        Circle(int minVertex=12);
        ~Circle();
    private:
        int pixels;
    };

#endif /* CIRCLE_H_ */


#ifndef CIRCLE_H_
#define CIRCLE_H_


    class Circle {
    public:
        Circle(int minVertex=12);
        ~Circle();
    private:
        int pixels;
    };

#endif /* CIRCLE_H_ */


#include <circles.h>
#include <cmath>
using namespace std;

int main(){
    double pi = abs(9);
}


Circle::Circle(int minVertex = 12) {
    pixels = 1150;
    double pi = atan(0) *2; // problem here
}


#include <circles.h>
#include <cmath>
using namespace std;

int main(){
    double pi = abs(9);
}


Circle::Circle(int minVertex = 12) {
    pixels = 1150;
    double pi = atan(0) *2; // problem here
}


class Circle: Circle 


class Circle: Circle 


class Circle: Circle {


class Circle: Circle {


Circle

Circle

class Circle { 


class Circle {