class Student
{
int rollno, mark1, mark2, mark3; public:
void setRno(int x)
{
rollno=x;
}
void setMark1(int x)
{
mark1=x;
}
void setMark2(int x)
{
mark2=x;
}
void setMark3(int x)
{
mark3=x;
}
int totalMarks()
{
return mark1+mark2+mark3;
}
static void findMaxMarks(Student s[], int n){
int m1, m2, m3, r1, r2, r3, i; m1=m2=m3=0;
for(i=0;i<n;i++)
{
if(m1<s[i].mark1)
{
m1=s[i].mark1; r1=s[i].rollno;
}
if(m2<s[i].mark2)
{
m2=s[i].mark2; r2=s[i].rollno;
}
if(m3<s[i].mark3)
{
m3=s[i].mark3; r3=s[i].rollno;
}
}
cout<<r1<<" "<<m1<<endl; cout<<r2<<" "<<m2<<endl; cout<<r3<<" "<<m3<<endl;
}
static void findMaxTotalMarks(Student s[], int n)
{
int i, max, sum, r; max=0; for(i=0;i<n;i++)
{
sum=s[i].mark1+s[i].mark2+s[i].mark3; if(sum>max)
{
r=s[i].rollno; max=sum;
}
}
cout<<r<<" "<<max;
}
}

int main() { int n;
cin >> n;
Student s[n];
for (int i = 0; i < n; i++) { int t;
cin >> t; s[i].setRno(t); cin >> t; s[i].setMark1(t); cin >> t; s[i].setMark2(t); cin >> t; s[i].setMark3(t);
}
for (int i = 0; i < n; i++) {
cout << s[i].totalMarks() << endl;
}
Student::findMaxMarks(s, n); Student::findMaxTotalMarks(s, n);
return 0;
}