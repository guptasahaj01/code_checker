void enqueue(Queue *q, int value) {
if (isFull(q)) {
printf("Queue is full\n");
return;
}
if (q->front == -1)
q->front = 0;
q->rear++;
q->items[q->rear] = value;
printf("%d added to the queue.\n", value);
}

int dequeue(Queue *q) {
int item;
if (isEmpty(q)) {
printf("Queue is empty\n");
return -1;
}
item = q->items[q->front];
q->front++;
printf("%d removed from the queue\n", item);
return item;
}

void display(Queue *q) {
int i;
if (isEmpty(q)) {
printf("Queue is empty\n");
return;
}
printf("Queue elements: ");
for (i = q->front; i <= q->rear; i++) {
printf("%d ", q->items[i]);
}
printf("\n");
}

int main() {
Queue q;
int choice, value;
initQueue(&q);
while (1) {
printf("\nQueue Operations Menu:\n");
printf("1. Enqueue\n");
printf("2. Dequeue\n");
printf("3. Display\n");
printf("4. Exit\n");
printf("Enter your choice: ");
scanf("%d", &choice);
switch (choice) {
case 1:
printf("Enter value to enqueue: ");
scanf("%d", &value);
enqueue(&q, value);
break;
case 2:
dequeue(&q);
break;
case 3:
display(&q);
break;
case 4:
printf("Exiting program\n");
exit(0);
default:
printf("Invalid choice\n");
}
}
return 0;
}