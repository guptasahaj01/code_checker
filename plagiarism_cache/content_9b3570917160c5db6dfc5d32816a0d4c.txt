1234
double Circle::calculateArea()
{
    return PI*radius*radius;
}

1234

1234

double Circle::calculateArea()
{
    return PI*radius*radius;
}

double Circle::calculateArea()
{
    return PI*radius*radius;
}

cout << "Radius of the Circle is " << Circle::radius << endl;

1234567891011121314
int main() 
{
   double r1; //This is radius of circle1
   double r2; //This is radius of circle2
   cout<<"Please enter r:"<<endl;
   cin>>r1; 
   cin>>r2;
   Circle circle1;  //If you intend to let r=0 be the radius of circle 1.
   Circle circle2(r2);
   circle1.display(); //similarly you can alter display function for the desired output format
   circle2.display();
   system("PAUSE");
   return 1;
}

1234567891011121314

1234567891011121314

int main() 
{
   double r1; //This is radius of circle1
   double r2; //This is radius of circle2
   cout<<"Please enter r:"<<endl;
   cin>>r1; 
   cin>>r2;
   Circle circle1;  //If you intend to let r=0 be the radius of circle 1.
   Circle circle2(r2);
   circle1.display(); //similarly you can alter display function for the desired output format
   circle2.display();
   system("PAUSE");
   return 1;
}

int main() 
{
   double r1; //This is radius of circle1
   double r2; //This is radius of circle2
   cout<<"Please enter r:"<<endl;
   cin>>r1; 
   cin>>r2;
   Circle circle1;  //If you intend to let r=0 be the radius of circle 1.
   Circle circle2(r2);
   circle1.display(); //similarly you can alter display function for the desired output format
   circle2.display();
   system("PAUSE");
   return 1;
}

return 0;

12345678910111213141516171819202122232425262728293031323334353637383940
#include <iostream> //No .h extension for this header!
#define PI 3.14

using namespace std;


class Circle
{
   double radius; //declare the radius as private

 public:
   // Circle();
   Circle(double = 0.); //save yourself some trouble...

   //if you already know everything about the circle, you don't need extra info. to calculate the area or circumference
   double getArea() { return PI * radius * radius; } //I just changed the names here,
   double getCircumference() { return 2 * PI * radius; } //and here
   void display();

   //let's make an accessor method for the private member "radius"
   double getRadius() { return radius; } //notice how methods from this class can still access private members
};

//define the display method to output the information in the correct format
void Circle::display() {
   cout << "Radius of the Circle = " << getRadius() << endl
        << "Area of the Circle = " << getArea() << endl
        << "Circumference of the Circle is = " << getCircumference() << endl;
}


int main() {
   Circle circle1,
          circle2(3.5);
   circle1.display();
   circle2.display();
   //...
   return 0; //notice "int main()", we must return an int.
             //"return 0" means the program ran successfully
}

12345678910111213141516171819202122232425262728293031323334353637383940

12345678910111213141516171819202122232425262728293031323334353637383940

#include <iostream> //No .h extension for this header!
#define PI 3.14

using namespace std;


class Circle
{
   double radius; //declare the radius as private

 public:
   // Circle();
   Circle(double = 0.); //save yourself some trouble...

   //if you already know everything about the circle, you don't need extra info. to calculate the area or circumference
   double getArea() { return PI * radius * radius; } //I just changed the names here,
   double getCircumference() { return 2 * PI * radius; } //and here
   void display();

   //let's make an accessor method for the private member "radius"
   double getRadius() { return radius; } //notice how methods from this class can still access private members
};

//define the display method to output the information in the correct format
void Circle::display() {
   cout << "Radius of the Circle = " << getRadius() << endl
        << "Area of the Circle = " << getArea() << endl
        << "Circumference of the Circle is = " << getCircumference() << endl;
}


int main() {
   Circle circle1,
          circle2(3.5);
   circle1.display();
   circle2.display();
   //...
   return 0; //notice "int main()", we must return an int.
             //"return 0" means the program ran successfully
}

#include <iostream> //No .h extension for this header!
#define PI 3.14

using namespace std;


class Circle
{
   double radius; //declare the radius as private

 public:
   // Circle();
   Circle(double = 0.); //save yourself some trouble...

   //if you already know everything about the circle, you don't need extra info. to calculate the area or circumference
   double getArea() { return PI * radius * radius; } //I just changed the names here,
   double getCircumference() { return 2 * PI * radius; } //and here
   void display();

   //let's make an accessor method for the private member "radius"
   double getRadius() { return radius; } //notice how methods from this class can still access private members
};

//define the display method to output the information in the correct format
void Circle::display() {
   cout << "Radius of the Circle = " << getRadius() << endl
        << "Area of the Circle = " << getArea() << endl
        << "Circumference of the Circle is = " << getCircumference() << endl;
}


int main() {
   Circle circle1,
          circle2(3.5);
   circle1.display();
   circle2.display();
   //...
   return 0; //notice "int main()", we must return an int.
             //"return 0" means the program ran successfully
}

   Circle(double = 0.); //save yourself some trouble... 

##. 

static const double PI = 3.14;