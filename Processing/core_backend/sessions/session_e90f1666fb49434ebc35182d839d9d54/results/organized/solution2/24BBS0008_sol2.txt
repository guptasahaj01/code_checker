vector<int> boundaryTraversal(vector<vector<int>>& matrix) {
vector<int> res;
int n = matrix.size(), m = matrix[0].size();
auto push = [&](int i, int j) {
res.push_back(matrix[i][j]);
};
for (int j = 0; j < m; ++j) push(0, j);
for (int i = 1; i < n; ++i) push(i, m - 1);
if (n > 1)
for (int j = m - 2; j >= 0; --j) push(n - 1, j);
if (m > 1)
for (int i = n - 2; i > 0; --i) push(i, 0);
return res;
}

int main() {
vector<vector<int>> matrix = {
{1, 2, 3, 4},
{5, 6, 7, 8},
{9, 10, 11, 12}
};
vector<int> result = boundaryTraversal(matrix);
for (int val : result) cout << val << " ";
cout << endl;
return 0;
}