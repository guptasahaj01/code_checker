vector<int> boundaryTraversal(vector<vector<int>>& matrix) {
int n = matrix.size(), m = matrix[0].size();
vector<int> result;
for (int i = 0; i < m; ++i) result.push_back(matrix[0][i]);
for (int i = 1; i < n - 1; ++i) result.push_back(matrix[i][m - 1]);
if (n > 1)
for (int i = m - 1; i >= 0; --i) result.push_back(matrix[n - 1][i]);
if (m > 1)
for (int i = n - 2; i > 0; --i) result.push_back(matrix[i][0]);
return result;
}

int main() {
vector<vector<int>> matrix = {
{1, 2, 3, 4},
{5, 6, 7, 8},
{9, 10, 11, 12}
};
vector<int> result = boundaryTraversal(matrix);
for (int val : result) cout << val << " ";
cout << endl;
return 0;
}