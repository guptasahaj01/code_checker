int isFull()
{
return (rear == MAX - 1);
}

int isEmpty()
{
return (front == -1);
}

void Enqueue(int value)
{
if (isFull())
{
printf("Queue Overflow! Cannot enqueue %d\n", value);
}
else
{
if (front == -1)
{
front = 0;
}
rear++;
queue[rear] = value;
printf("%d enqueued to queue\n", value);
}
}

void Dequeue()
{
if (isEmpty())
{
printf("Queue Underflow! Nothing to dequeue\n");
}
else
{
printf("%d dequeued from queue\n", queue[front]);
if (front == rear)
{
front = rear = -1;
}
else
{
front++;
}
}
}

void Display()
{
if (isEmpty())
{
printf("Queue is empty!\n");
}
else
{
printf("Queue elements are: \n");
for (int i = front; i <= rear; i++)
{
printf("%d ", queue[i]);
}
printf("\n");
}
}

int main()
{
int choice, value;
while (1)
{
printf("\nQueue Operations Menu:\n");
printf("1. Enqueue\n");
printf("2. Dequeue\n");
printf("3. Display\n");
printf("4. Exit\n");
printf("Enter your choice: ");
scanf("%d", &choice);
switch (choice)
{
case 1:
printf("Enter the value to enqueue: ");
scanf("%d", &value);
Enqueue(value);
break;
case 2:
Dequeue();
break;
case 3:
Display();
break;
case 4:
printf("Exiting program.\n");
exit(0);
default:
printf("Invalid choice. Please try again.\n");
}
}
return 0;
}