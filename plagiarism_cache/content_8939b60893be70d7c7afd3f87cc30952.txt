class Shape { // pure interface
    public:
        virtual void draw() = 0;
    };
    class Circle : public Shape { // pure interface
    public:
        virtual int radius() = 0;
    };

    class Shape_Impl : public Shape {
    public:
        void draw() override {}
    };
    class Circle_Impl : public Shape_Impl, public Circle {
    public:
        int radius() override { return 42; }
    };

    int main()
    {
        Circle_Impl* ic = new Circle_Impl();
        return 0;
    }


    class Shape { // pure interface
    public:
        virtual void draw() = 0;
    };
    class Circle : public Shape { // pure interface
    public:
        virtual int radius() = 0;
    };

    class Shape_Impl : public Shape {
    public:
        void draw() override {}
    };
    class Circle_Impl : public Shape_Impl, public Circle {
    public:
        int radius() override { return 42; }
    };

    int main()
    {
        Circle_Impl* ic = new Circle_Impl();
        return 0;
    }


Circle_Impl

draw

Shape_Impl

Shape

Circle_Impl

draw()

Shape_Impl

virtual

Shape

draw

class Circle : public virtual Shape { ...
class Shape_Impl : public virtual Shape { ...


class Circle : public virtual Shape { ...
class Shape_Impl : public virtual Shape { ...


virtual

virtual

virtual

virtual

virtual

Shape       Shape  <-- Two Shape instances, each requiring its own draw() implementation
  |           |
  |         Circle
  |           |
Shape_Impl    |
  |           |    <-- draw() not implemented in the right-hand branch
   \         /
   Circle_Impl


Shape       Shape  <-- Two Shape instances, each requiring its own draw() implementation
  |           |
  |         Circle
  |           |
Shape_Impl    |
  |           |    <-- draw() not implemented in the right-hand branch
   \         /
   Circle_Impl


     Shape     <- Single Shape instance, requiring only a single implementation of draw()
   /       \
  |         |
  |       Circle
  |         |
Shape_Impl  |
  |         |
   \       /
  Circle_Impl


     Shape     <- Single Shape instance, requiring only a single implementation of draw()
   /       \
  |         |
  |       Circle
  |         |
Shape_Impl  |
  |         |
   \       /
  Circle_Impl


virtual

class Circle : public virtual Shape
class Shape_Impl : public virtual Shape


class Circle : public virtual Shape
class Shape_Impl : public virtual Shape


draw

Shape_Impl

Circle

class Circle_Impl : public Shape_Impl, public Circle {
public:
    void draw() override { Shape_Impl::draw(); }
    int radius() override { return 42; }
};


class Circle_Impl : public Shape_Impl, public Circle {
public:
    void draw() override { Shape_Impl::draw(); }
    int radius() override { return 42; }
};


draw()

Circle_impl

Shape_Impl

Circle_impl