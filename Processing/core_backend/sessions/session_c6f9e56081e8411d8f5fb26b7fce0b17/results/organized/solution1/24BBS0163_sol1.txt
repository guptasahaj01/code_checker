struct Node {
int data;
struct Node* next;
}

struct Node {
int data;
struct Node* prev;
struct Node* next;
}

void insertAtBeginning(int val){
struct Node* newNode = (struct Node*) malloc(sizeof(struct Node));
newNode->data = val;
newNode->next = head;
head = newNode;
}

void insertAtEnd(int val){
struct Node* newNode = (struct Node*) malloc(sizeof(struct Node));
newNode->data = val;
newNode->next = NULL;
if(head == NULL){
head = newNode;
} else {
struct Node* temp = head;
while(temp->next != NULL) temp = temp->next;
temp->next = newNode;
}
}

void deleteFromBeginning(){
if(head == NULL){
printf("List is empty\n");
return;
}
struct Node* temp = head;
head = head->next;
free(temp);
}

void insertAtPosition(int val, int pos){
struct Node* newNode = (struct Node*) malloc(sizeof(struct Node));
newNode->data = val;
if(pos == 1){
newNode->next = head;
head = newNode;
return;
}
struct Node* temp = head;
for(int i = 1; i < pos-1 && temp != NULL; i++) temp = temp->next;
if(temp == NULL){
printf("Position out of range\n");
return;
}
newNode->next = temp->next;
temp->next = newNode;
}

void display(){
struct Node* temp = head;
while(temp != NULL){
printf("%d -> ", temp->data);
temp = temp->next;
}
printf("NULL\n");
}

void deleteFromEnd(){
if(head == NULL){
printf("List is empty\n");
return;
}
if(head->next == NULL){
free(head);
head = NULL;
return;
}
struct Node* temp = head;
while(temp->next->next != NULL) temp = temp->next;
free(temp->next);
temp->next = NULL;
}

void deleteFromPosition(int pos){
if(head == NULL){
printf("List is empty\n");
return;
}
struct Node* temp = head;
if(pos == 1){
head = head->next;
free(temp);
return;
}
struct Node* prev = NULL;
for(int i = 1; i < pos && temp != NULL; i++){
prev = temp;
temp = temp->next;
}
if(temp == NULL){
printf("Position out of range\n");
return;
}
prev->next = temp->next;
free(temp);
}

void search(int val){
struct Node* temp = head;
int pos = 1;
while(temp != NULL){
if(temp->data == val){
printf("Element found at position %d\n", pos);
return;
}
temp = temp->next;
pos++;
}
printf("Element not found\n");
}

int main(){
int choice, val, pos;
do{
printf("\nMenu:\n");
printf("1. Insert at Beginning\n2. Insert at End\n3. Insert at Position\n4. Delete
from Beginning\n5. Delete from End\n6. Delete from Position\n7. Search\n8. Display\n0.
Exit\nEnter your choice: ");
scanf("%d", &choice);
switch(choice){
case 1:
printf("Enter value to insert at beginning: ");
scanf("%d", &val);
insertAtBeginning(val);
break;
case 2:
printf("Enter value to insert at end: ");
scanf("%d", &val);
insertAtEnd(val);
break;
case 3:
printf("Enter value to insert: ");
scanf("%d", &val);
printf("Enter position to insert: ");
scanf("%d", &pos);
insertAtPosition(val, pos);
break;
case 4:
deleteFromBeginning();
break;
case 5:
deleteFromEnd();
break;
case 6:
printf("Enter position to delete from: ");
scanf("%d", &pos);
deleteFromPosition(pos);
break;
case 7:
printf("Enter value to search: ");
scanf("%d", &val);
search(val);
break;
case 8:
display();
break;
case 0:
printf("Exiting...\n");
break;
default:
printf("Invalid choice, try again.\n");
}
}while(choice != 0);
return 0;
}