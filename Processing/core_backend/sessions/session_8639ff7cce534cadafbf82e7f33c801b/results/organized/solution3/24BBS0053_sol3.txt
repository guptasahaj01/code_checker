void enqueue(int element) {
if ((rear + 1) % MAX == front) {
printf("Queue is full\n");
return;
}
if (front == -1) {
front = 0;
}
rear = (rear + 1) % MAX;
queue[rear] = element;
printf("Element inserted: %d\n", element);
}

void dequeue() {
if (front == -1) {
printf("Queue is empty\n");
return;
}
int element = queue[front];
if (front == rear) {
front = rear = -1;
} else {
front = (front + 1) % MAX;
}
printf("Element dequeued: %d\n", element);
}

void display() {
if (front == -1) {
printf("Queue is empty\n");
return;
}
printf("Queue elements: ");
int i = front;
while (1) {
printf("%d ", queue[i]);
if (i == rear) {
break;
}
i = (i + 1) % MAX;
}
printf("\n");
}

int main() {
int choice, element;
do {
printf("1. Enqueue 2. Dequeue 3. Display 4. Exit\n");
printf("Enter your choice: ");
scanf("%d", &choice);
switch (choice) {
case 1:
printf("Enter element to insert: ");
scanf("%d", &element);
enqueue(element);
break;
case 2:
dequeue();
break;
case 3:
display();
break;
case 4:
printf("Exiting...\n");
break;
default:
printf("Invalid choice\n");
}
} while (choice != 4);
return 0;
}