void enqueue(int val){
if((front == 0 && rear == MAX-1) || (rear == (front-1)%(MAX-1))){
printf("Queue Overflow\n");
}else if(front == -1){
front = rear = 0;
queue[rear] = val;
}else if(rear == MAX-1 && front != 0){
rear = 0;
queue[rear] = val;
}else{
queue[++rear] = val;
}
}

void dequeue(){
if(front == -1){
printf("Queue Underflow\n");
}else{
printf("Dequeued: %d\n", queue[front]);
if(front == rear){
front = rear = -1;
}else if(front == MAX-1){
front = 0;
}else{
front++;
}
}
}

void display(){
if(front == -1){
printf("Queue is empty\n");
}else{
if(rear >= front){
for(int i = front; i <= rear; i++){
printf("%d ", queue[i]);
}
}else{
for(int i = front; i < MAX; i++){
printf("%d ", queue[i]);
}
for(int i = 0; i <= rear; i++){
printf("%d ", queue[i]);
}
}
printf("\n");
}
}

int main(){
int choice, val;
do{
printf("\nMenu:\n");
printf("1. Enqueue\n2. Dequeue\n3. Display\n0. Exit\nEnter your choice: ");
scanf("%d", &choice);
switch(choice){
case 1:
printf("Enter value to enqueue: ");
scanf("%d", &val);
enqueue(val);
break;
case 2:
dequeue();
break;
case 3:
display();
break;
case 0:
printf("Exiting...\n");
break;
default:
printf("Invalid choice, try again.\n");
}
}while(choice != 0);
return 0;
}