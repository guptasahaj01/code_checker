vector<int> boundaryTraversal(vector<vector<int>>& matrix) {
int rows = matrix.size();
int cols = matrix[0].size();
vector<int> boundary;
for (int col = 0; col < cols; col++)
boundary.push_back(matrix[0][col]);
for (int row = 1; row < rows; row++)
boundary.push_back(matrix[row][cols - 1]);
if (rows > 1)
for (int col = cols - 2; col >= 0; col--)
boundary.push_back(matrix[rows - 1][col]);
if (cols > 1)
for (int row = rows - 2; row > 0; row--)
boundary.push_back(matrix[row][0]);
return boundary;
}

int main() {
vector<vector<int>> matrix = {
{1, 2, 3, 4},
{5, 6, 7, 8},
{9,10,11,12}
};
vector<int> result = boundaryTraversal(matrix);
for (int val : result) cout << val << " ";
cout << endl;
return 0;
}