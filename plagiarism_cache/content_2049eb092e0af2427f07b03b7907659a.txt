class Program
{
    static void Main(string[] args)
    {
        double side = 0;
        double length = 0;
        double width = 0;
        double height = 0;
        double baseoftriangle = 0;
        double radius = 0;

        UserChoice:
        Console.WriteLine("For what shape you want to calculate the Area:\n1. Sqaure\n2. Rectangle\n3. Triangle\n4. Circle");
        Console.Write("Please Select the number from above options: ");
        int choice = int.Parse(Console.ReadLine());



        switch (choice)
        {
            case 1:
                Console.Write("Please enter the side of square: ");
                side = double.Parse(Console.ReadLine());
                break;
            case 2:
                Console.Write("Please enter the length of rectangle: ");
                length = double.Parse(Console.ReadLine());
                Console.Write("Please enter the width of rectangle: ");
                width = double.Parse(Console.ReadLine());
                break;
            case 3:
                Console.Write("Please enter the height of triangle: ");
                height = double.Parse(Console.ReadLine());
                Console.Write("Please enter the base of triangle: ");
                baseoftriangle = double.Parse(Console.ReadLine());
                break;
            case 4:
                Console.Write("Please enter the radius of circle: ");
                radius = double.Parse(Console.ReadLine());
                break;
            default:
                Console.WriteLine("Incorrect Choice, please try again!");
                goto UserChoice;
        }

        CalculateArea Sqa = new Square();
        Sqa = new Rectangle();
        Sqa = new Triangle();
        Sqa = new Circle();
        if (choice == 1)
        {
            Sqa.Area(side);
            Sqa.ShowResult();
        }
        else if(choice==2)
        {
            Sqa.Area(length,width);
            Sqa.ShowResult();
        }
        else if(choice==3)
        {
            Sqa.Area(height, baseoftriangle);
            Sqa.ShowResult();
        }
        else
        {
            Sqa.Area(radius);
            Sqa.ShowResult();
        }


        ChoiceOfAnotherCalculation:
        Console.Write("\nDo you want to calculate area of any other shape? Give input in Yes or NO: ");
        string choice1 = Console.ReadLine();

        switch (choice1.ToUpper())
        {
            case "YES":
                goto UserChoice;
            case "NO":
                break;
            default:
                Console.WriteLine("Incorrect Choice, please try again!");
                goto ChoiceOfAnotherCalculation;
        }
    }
}
class CalculateArea
{
    public double result;
    public virtual void Area(double side)
    {
    }
    public virtual void Area(double length, double width)
    {
    }
    public void ShowResult()
    {
        Console.WriteLine($"Your Result is {result}");
    }
}
class Square: CalculateArea
{

    public override void Area(double side)
    {
        result = side * side;
    }

}
class Rectangle:CalculateArea
{
    public override void Area(double length, double width)
    {
        result = length * width;
    }
}
class Triangle:CalculateArea
{
    public override void Area(double height, double baseoftriangle)
    {
        result = (height * baseoftriangle)/2;
    }
}
class Circle:CalculateArea
{
    public override void Area(double radius)
    {
        result = 3.14159 * radius * radius;
    }
}


class Program
{
    static void Main(string[] args)
    {
        double side = 0;
        double length = 0;
        double width = 0;
        double height = 0;
        double baseoftriangle = 0;
        double radius = 0;

        UserChoice:
        Console.WriteLine("For what shape you want to calculate the Area:\n1. Sqaure\n2. Rectangle\n3. Triangle\n4. Circle");
        Console.Write("Please Select the number from above options: ");
        int choice = int.Parse(Console.ReadLine());



        switch (choice)
        {
            case 1:
                Console.Write("Please enter the side of square: ");
                side = double.Parse(Console.ReadLine());
                break;
            case 2:
                Console.Write("Please enter the length of rectangle: ");
                length = double.Parse(Console.ReadLine());
                Console.Write("Please enter the width of rectangle: ");
                width = double.Parse(Console.ReadLine());
                break;
            case 3:
                Console.Write("Please enter the height of triangle: ");
                height = double.Parse(Console.ReadLine());
                Console.Write("Please enter the base of triangle: ");
                baseoftriangle = double.Parse(Console.ReadLine());
                break;
            case 4:
                Console.Write("Please enter the radius of circle: ");
                radius = double.Parse(Console.ReadLine());
                break;
            default:
                Console.WriteLine("Incorrect Choice, please try again!");
                goto UserChoice;
        }

        CalculateArea Sqa = new Square();
        Sqa = new Rectangle();
        Sqa = new Triangle();
        Sqa = new Circle();
        if (choice == 1)
        {
            Sqa.Area(side);
            Sqa.ShowResult();
        }
        else if(choice==2)
        {
            Sqa.Area(length,width);
            Sqa.ShowResult();
        }
        else if(choice==3)
        {
            Sqa.Area(height, baseoftriangle);
            Sqa.ShowResult();
        }
        else
        {
            Sqa.Area(radius);
            Sqa.ShowResult();
        }


        ChoiceOfAnotherCalculation:
        Console.Write("\nDo you want to calculate area of any other shape? Give input in Yes or NO: ");
        string choice1 = Console.ReadLine();

        switch (choice1.ToUpper())
        {
            case "YES":
                goto UserChoice;
            case "NO":
                break;
            default:
                Console.WriteLine("Incorrect Choice, please try again!");
                goto ChoiceOfAnotherCalculation;
        }
    }
}
class CalculateArea
{
    public double result;
    public virtual void Area(double side)
    {
    }
    public virtual void Area(double length, double width)
    {
    }
    public void ShowResult()
    {
        Console.WriteLine($"Your Result is {result}");
    }
}
class Square: CalculateArea
{

    public override void Area(double side)
    {
        result = side * side;
    }

}
class Rectangle:CalculateArea
{
    public override void Area(double length, double width)
    {
        result = length * width;
    }
}
class Triangle:CalculateArea
{
    public override void Area(double height, double baseoftriangle)
    {
        result = (height * baseoftriangle)/2;
    }
}
class Circle:CalculateArea
{
    public override void Area(double radius)
    {
        result = 3.14159 * radius * radius;
    }
}


CalculateArea Sqa

if

Sqa

Shape

CalculateArea

switch

return;

break;

case 1:
    Console.Write("Please enter the side of square: ");
    side = int.Parse(Console.ReadLine());
    break;


case 1:
    Console.Write("Please enter the side of square: ");
    side = int.Parse(Console.ReadLine());
    break;


public abstract class Shape
{
    // must implement by inheriting classes
    public abstract double CalculateArea();
}


public abstract class Shape
{
    // must implement by inheriting classes
    public abstract double CalculateArea();
}


public class Square : Shape
{
    // properties differ based on the shape.. 
    // eg: triangle needs height and base
    // edit CalculateArea method based on the shape
    public double Length { get; set; }

    public override double CalculateArea()
    {
        return Length * Length;
    }
}


public class Square : Shape
{
    // properties differ based on the shape.. 
    // eg: triangle needs height and base
    // edit CalculateArea method based on the shape
    public double Length { get; set; }

    public override double CalculateArea()
    {
        return Length * Length;
    }
}


CalculateArea()

double

double length;
Console.WriteLine("Enter length of one side: ");
if (!double.TryParse(Console.ReadLine(), out length))
    Console.WriteLine("Invalid value, must be a number or decimal value.");

Square sq = new Square();
sq.Length = length;
Console.WriteLine(sq.CalculateArea().ToString("F"));


double length;
Console.WriteLine("Enter length of one side: ");
if (!double.TryParse(Console.ReadLine(), out length))
    Console.WriteLine("Invalid value, must be a number or decimal value.");

Square sq = new Square();
sq.Length = length;
Console.WriteLine(sq.CalculateArea().ToString("F"));


result

Square

abstract class Shape
{
    public abstract double Area {get;}
}

class Square: Shape
{
    public double Side {get;}
    public override double Area => Side * Side;
    public Square (double side)
    {
       this.Side = side;
    }
}

class Rectangle:Shape
{
    public double Width {get;}
    public double Length {get;}
    public override double Area => Width * Length;
    public Rectangle (double width, double length)
    {   
       this.Width = width;
       this.Length = length;
    }
}


abstract class Shape
{
    public abstract double Area {get;}
}

class Square: Shape
{
    public double Side {get;}
    public override double Area => Side * Side;
    public Square (double side)
    {
       this.Side = side;
    }
}

class Rectangle:Shape
{
    public double Width {get;}
    public double Length {get;}
    public override double Area => Width * Length;
    public Rectangle (double width, double length)
    {   
       this.Width = width;
       this.Length = length;
    }
}


.Area