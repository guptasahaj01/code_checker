{
  "similarity_analysis": {
    "solution1": {
      "high_confidence_pairs": [],
      "needs_review_pairs": [
        {
          "pair": [
            "DOC6SAM_sol1.txt",
            "DOC4SAM_sol1.txt"
          ],
          "similarity": 0.6370794602719876,
          "tfidf_similarity": 0.43317712442162515,
          "ast_similarity": 0.9429329640475312,
          "detection_method": "Combined"
        },
        {
          "pair": [
            "DOC7SAM_sol1.txt",
            "DOC8SAM_sol1.txt"
          ],
          "similarity": 0.5165028430349571,
          "tfidf_similarity": 0.37425072151667255,
          "ast_similarity": 0.729881025312384,
          "detection_method": "Combined"
        },
        {
          "pair": [
            "DOC3SAM_sol1.txt",
            "DOC1SAM_sol1.txt"
          ],
          "similarity": 0.5585630525265192,
          "tfidf_similarity": 0.3655314568976581,
          "ast_similarity": 0.8481104459698108,
          "detection_method": "Combined"
        },
        {
          "pair": [
            "DOC2SAM_sol1.txt",
            "DOC1SAM_sol1.txt"
          ],
          "similarity": 0.5248411324402329,
          "tfidf_similarity": 0.34066844203815155,
          "ast_similarity": 0.801100168043355,
          "detection_method": "Combined"
        },
        {
          "pair": [
            "DOC4SAM_sol1.txt",
            "DOC8SAM_sol1.txt"
          ],
          "similarity": 0.5094848986966973,
          "tfidf_similarity": 0.33446881195733086,
          "ast_similarity": 0.7720090288057471,
          "detection_method": "Combined"
        },
        {
          "pair": [
            "DOC6SAM_sol1.txt",
            "DOC8SAM_sol1.txt"
          ],
          "similarity": 0.4965429918378206,
          "tfidf_similarity": 0.33338209648900036,
          "ast_similarity": 0.7412843348610509,
          "detection_method": "Combined"
        },
        {
          "pair": [
            "DOC2SAM_sol1.txt",
            "DOC7SAM_sol1.txt"
          ],
          "similarity": 0.5147171186451123,
          "tfidf_similarity": 0.3232588064677366,
          "ast_similarity": 0.8019045869111758,
          "detection_method": "Combined"
        },
        {
          "pair": [
            "DOC3SAM_sol1.txt",
            "DOC2SAM_sol1.txt"
          ],
          "similarity": 0.5303524853830863,
          "tfidf_similarity": 0.3227169142353588,
          "ast_similarity": 0.8418058421046777,
          "detection_method": "Combined"
        },
        {
          "pair": [
            "DOC7SAM_sol1.txt",
            "DOC4SAM_sol1.txt"
          ],
          "similarity": 0.4983012388301125,
          "tfidf_similarity": 0.2898427546957345,
          "ast_similarity": 0.8109889650316795,
          "detection_method": "Combined"
        },
        {
          "pair": [
            "DOC6SAM_sol1.txt",
            "DOC7SAM_sol1.txt"
          ],
          "similarity": 0.504303635134459,
          "tfidf_similarity": 0.2837759561571225,
          "ast_similarity": 0.8350951536004637,
          "detection_method": "Combined"
        },
        {
          "pair": [
            "DOC7SAM_sol1.txt",
            "DOC1SAM_sol1.txt"
          ],
          "similarity": 0.43958090180954845,
          "tfidf_similarity": 0.21938031405900316,
          "ast_similarity": 0.7698817834353664,
          "detection_method": "Combined"
        },
        {
          "pair": [
            "DOC2SAM_sol1.txt",
            "DOC8SAM_sol1.txt"
          ],
          "similarity": 0.4127061042271552,
          "tfidf_similarity": 0.18197776580572442,
          "ast_similarity": 0.7587986118593013,
          "detection_method": "Combined"
        },
        {
          "pair": [
            "DOC6SAM_sol1.txt",
            "DOC2SAM_sol1.txt"
          ],
          "similarity": 0.449916394998961,
          "tfidf_similarity": 0.1675170146749852,
          "ast_similarity": 0.8735154654849246,
          "detection_method": "Combined"
        },
        {
          "pair": [
            "DOC6SAM_sol1.txt",
            "DOC1SAM_sol1.txt"
          ],
          "similarity": 0.43746627288434314,
          "tfidf_similarity": 0.15964509927430987,
          "ast_similarity": 0.8541980332993929,
          "detection_method": "Combined"
        },
        {
          "pair": [
            "DOC3SAM_sol1.txt",
            "DOC7SAM_sol1.txt"
          ],
          "similarity": 0.38928684034743266,
          "tfidf_similarity": 0.15916788702175372,
          "ast_similarity": 0.7344652703359511,
          "detection_method": "Combined"
        },
        {
          "pair": [
            "DOC8SAM_sol1.txt",
            "DOC1SAM_sol1.txt"
          ],
          "similarity": 0.3764273684711633,
          "tfidf_similarity": 0.1573104741705901,
          "ast_similarity": 0.7051027099220231,
          "detection_method": "Combined"
        },
        {
          "pair": [
            "DOC5SAM_sol1.txt",
            "DOC8SAM_sol1.txt"
          ],
          "similarity": 0.38808856344630066,
          "tfidf_similarity": 0.1480918221205375,
          "ast_similarity": 0.7480836754349454,
          "detection_method": "Combined"
        },
        {
          "pair": [
            "DOC2SAM_sol1.txt",
            "DOC4SAM_sol1.txt"
          ],
          "similarity": 0.4359227226333736,
          "tfidf_similarity": 0.144076750949354,
          "ast_similarity": 0.873691680159403,
          "detection_method": "Combined"
        },
        {
          "pair": [
            "DOC6SAM_sol1.txt",
            "DOC3SAM_sol1.txt"
          ],
          "similarity": 0.41004575910595076,
          "tfidf_similarity": 0.11733397170495362,
          "ast_similarity": 0.8491134402074464,
          "detection_method": "Combined"
        },
        {
          "pair": [
            "DOC3SAM_sol1.txt",
            "DOC8SAM_sol1.txt"
          ],
          "similarity": 0.3488828092729479,
          "tfidf_similarity": 0.11107714393852695,
          "ast_similarity": 0.7055913072745794,
          "detection_method": "Combined"
        },
        {
          "pair": [
            "DOC3SAM_sol1.txt",
            "DOC5SAM_sol1.txt"
          ],
          "similarity": 0.34070592083394313,
          "tfidf_similarity": 0.0956531928898527,
          "ast_similarity": 0.7082850127500788,
          "detection_method": "Combined"
        },
        {
          "pair": [
            "DOC3SAM_sol1.txt",
            "DOC4SAM_sol1.txt"
          ],
          "similarity": 0.38252199979265,
          "tfidf_similarity": 0.0894480375841834,
          "ast_similarity": 0.8221329431053499,
          "detection_method": "Combined"
        },
        {
          "pair": [
            "DOC4SAM_sol1.txt",
            "DOC1SAM_sol1.txt"
          ],
          "similarity": 0.3811873468767268,
          "tfidf_similarity": 0.08507084037733112,
          "ast_similarity": 0.8253621066258202,
          "detection_method": "Combined"
        }
      ],
      "all_suspicious_pairs": [
        [
          "DOC6SAM_sol1.txt",
          "DOC4SAM_sol1.txt"
        ],
        [
          "DOC7SAM_sol1.txt",
          "DOC8SAM_sol1.txt"
        ],
        [
          "DOC3SAM_sol1.txt",
          "DOC1SAM_sol1.txt"
        ],
        [
          "DOC2SAM_sol1.txt",
          "DOC1SAM_sol1.txt"
        ],
        [
          "DOC4SAM_sol1.txt",
          "DOC8SAM_sol1.txt"
        ],
        [
          "DOC6SAM_sol1.txt",
          "DOC8SAM_sol1.txt"
        ],
        [
          "DOC2SAM_sol1.txt",
          "DOC7SAM_sol1.txt"
        ],
        [
          "DOC3SAM_sol1.txt",
          "DOC2SAM_sol1.txt"
        ],
        [
          "DOC6SAM_sol1.txt",
          "DOC5SAM_sol1.txt"
        ],
        [
          "DOC7SAM_sol1.txt",
          "DOC4SAM_sol1.txt"
        ],
        [
          "DOC6SAM_sol1.txt",
          "DOC7SAM_sol1.txt"
        ],
        [
          "DOC5SAM_sol1.txt",
          "DOC7SAM_sol1.txt"
        ],
        [
          "DOC7SAM_sol1.txt",
          "DOC1SAM_sol1.txt"
        ],
        [
          "DOC2SAM_sol1.txt",
          "DOC8SAM_sol1.txt"
        ],
        [
          "DOC6SAM_sol1.txt",
          "DOC2SAM_sol1.txt"
        ],
        [
          "DOC5SAM_sol1.txt",
          "DOC4SAM_sol1.txt"
        ],
        [
          "DOC6SAM_sol1.txt",
          "DOC1SAM_sol1.txt"
        ],
        [
          "DOC3SAM_sol1.txt",
          "DOC7SAM_sol1.txt"
        ],
        [
          "DOC8SAM_sol1.txt",
          "DOC1SAM_sol1.txt"
        ],
        [
          "DOC5SAM_sol1.txt",
          "DOC8SAM_sol1.txt"
        ],
        [
          "DOC5SAM_sol1.txt",
          "DOC2SAM_sol1.txt"
        ],
        [
          "DOC2SAM_sol1.txt",
          "DOC4SAM_sol1.txt"
        ],
        [
          "DOC5SAM_sol1.txt",
          "DOC1SAM_sol1.txt"
        ],
        [
          "DOC6SAM_sol1.txt",
          "DOC3SAM_sol1.txt"
        ],
        [
          "DOC3SAM_sol1.txt",
          "DOC8SAM_sol1.txt"
        ],
        [
          "DOC3SAM_sol1.txt",
          "DOC5SAM_sol1.txt"
        ],
        [
          "DOC3SAM_sol1.txt",
          "DOC4SAM_sol1.txt"
        ],
        [
          "DOC4SAM_sol1.txt",
          "DOC1SAM_sol1.txt"
        ]
      ],
      "detection_methods": [
        "TF-IDF",
        "AST"
      ],
      "tfidf_similarity_matrix": [
        [
          0.9999999999999996,
          0.11733397170495362,
          0.2970759181468502,
          0.1675170146749852,
          0.2837759561571225,
          0.43317712442162515,
          0.33338209648900036,
          0.15964509927430987
        ],
        [
          0.11733397170495362,
          0.9999999999999999,
          0.0956531928898527,
          0.3227169142353588,
          0.15916788702175372,
          0.0894480375841834,
          0.11107714393852695,
          0.3655314568976581
        ],
        [
          0.2970759181468502,
          0.0956531928898527,
          1.0000000000000064,
          0.1452710353660889,
          0.24985573858349935,
          0.16405026406293763,
          0.1480918221205375,
          0.13321235922230423
        ],
        [
          0.1675170146749852,
          0.3227169142353588,
          0.1452710353660889,
          1.0000000000000033,
          0.3232588064677366,
          0.144076750949354,
          0.18197776580572442,
          0.34066844203815155
        ],
        [
          0.2837759561571225,
          0.15916788702175372,
          0.24985573858349935,
          0.3232588064677366,
          1.0,
          0.2898427546957345,
          0.37425072151667255,
          0.21938031405900316
        ],
        [
          0.43317712442162515,
          0.0894480375841834,
          0.16405026406293763,
          0.144076750949354,
          0.2898427546957345,
          1.0000000000000002,
          0.33446881195733086,
          0.08507084037733112
        ],
        [
          0.33338209648900036,
          0.11107714393852695,
          0.1480918221205375,
          0.18197776580572442,
          0.37425072151667255,
          0.33446881195733086,
          0.9999999999999937,
          0.1573104741705901
        ],
        [
          0.15964509927430987,
          0.3655314568976581,
          0.13321235922230423,
          0.34066844203815155,
          0.21938031405900316,
          0.08507084037733112,
          0.1573104741705901,
          0.9999999999999996
        ]
      ],
      "tfidf_average_similarity": 0.22236745410104203,
      "tfidf_max_similarity": 0.43317712442162515,
      "ast_similarity_matrix": [
        [
          1.0,
          0.8491134402074464,
          0.6837047593241832,
          0.8735154654849246,
          0.8350951536004637,
          0.9429329640475312,
          0.7412843348610509,
          0.8541980332993929
        ],
        [
          0.8491134402074463,
          1.0,
          0.7082850127500788,
          0.8418058421046777,
          0.7344652703359511,
          0.8221329431053499,
          0.7055913072745794,
          0.8481104459698108
        ],
        [
          0.6837047593241832,
          0.7082850127500788,
          1.0,
          0.6665966964872903,
          0.606637697011658,
          0.6977885399972645,
          0.7480836754349454,
          0.6931960662900349
        ],
        [
          0.8735154654849246,
          0.8418058421046777,
          0.6665966964872903,
          1.0,
          0.8019045869111758,
          0.873691680159403,
          0.7587986118593013,
          0.801100168043355
        ],
        [
          0.8350951536004637,
          0.7344652703359511,
          0.606637697011658,
          0.8019045869111758,
          1.0,
          0.8109889650316795,
          0.729881025312384,
          0.7698817834353664
        ],
        [
          0.9429329640475312,
          0.8221329431053497,
          0.6977885399972645,
          0.873691680159403,
          0.8109889650316795,
          1.0,
          0.7720090288057471,
          0.8253621066258202
        ],
        [
          0.7412843348610509,
          0.7055913072745794,
          0.7480836754349454,
          0.7587986118593013,
          0.729881025312384,
          0.7720090288057471,
          1.0,
          0.7051027099220231
        ],
        [
          0.854198033299393,
          0.8481104459698108,
          0.6931960662900349,
          0.801100168043355,
          0.7698817834353664,
          0.8253621066258202,
          0.7051027099220231,
          1.0
        ]
      ],
      "ast_average_similarity": 0.7750449397747462,
      "ast_max_similarity": 0.9429329640475312,
      "average_similarity": 0.4434384483705237,
      "max_similarity": 0.9429329640475312,
      "summary": {
        "total_submissions": 0,
        "high_confidence_count": 0,
        "needs_review_count": 23,
        "total_suspicious_pairs": 28,
        "detection_methods": [
          "TF-IDF",
          "AST"
        ],
        "suspicious_submissions_count": 8,
        "tfidf_avg_similarity": 0.22236745410104203,
        "tfidf_max_similarity": 0.43317712442162515,
        "ast_avg_similarity": 0.7750449397747462,
        "ast_max_similarity": 0.9429329640475312,
        "combined_avg_similarity": 0.4434384483705237,
        "combined_max_similarity": 0.9429329640475312
      }
    },
    "solution2": {
      "high_confidence_pairs": [
        {
          "pair": [
            "DOC3SAM_sol2.txt",
            "DOC4SAM_sol2.txt"
          ],
          "similarity": 0.8917907025569287,
          "tfidf_similarity": 0.9517214690379101,
          "ast_similarity": 0.8018945528354566,
          "detection_method": "Combined"
        }
      ],
      "needs_review_pairs": [
        {
          "pair": [
            "DOC5SAM_sol2.txt",
            "DOC1SAM_sol2.txt"
          ],
          "similarity": 0.7670527275587956,
          "tfidf_similarity": 0.7131789549311157,
          "ast_similarity": 0.8478633865003155,
          "detection_method": "Combined"
        },
        {
          "pair": [
            "DOC7SAM_sol2.txt",
            "DOC1SAM_sol2.txt"
          ],
          "similarity": 0.7205411553897785,
          "tfidf_similarity": 0.6637439145799733,
          "ast_similarity": 0.8057370166044864,
          "detection_method": "Combined"
        },
        {
          "pair": [
            "DOC5SAM_sol2.txt",
            "DOC7SAM_sol2.txt"
          ],
          "similarity": 0.6552677748939346,
          "tfidf_similarity": 0.6101110119912536,
          "ast_similarity": 0.7230029192479563,
          "detection_method": "Combined"
        },
        {
          "pair": [
            "DOC4SAM_sol2.txt",
            "DOC1SAM_sol2.txt"
          ],
          "similarity": 0.7506716187072879,
          "tfidf_similarity": 0.5895513277859434,
          "ast_similarity": 0.9923520550893048,
          "detection_method": "Combined"
        },
        {
          "pair": [
            "DOC6SAM_sol2.txt",
            "DOC1SAM_sol2.txt"
          ],
          "similarity": 0.7131442539178738,
          "tfidf_similarity": 0.5729137666264066,
          "ast_similarity": 0.9234899848550748,
          "detection_method": "Combined"
        },
        {
          "pair": [
            "DOC3SAM_sol2.txt",
            "DOC1SAM_sol2.txt"
          ],
          "similarity": 0.6615093735508709,
          "tfidf_similarity": 0.5682777198862871,
          "ast_similarity": 0.8013568540477467,
          "detection_method": "Combined"
        },
        {
          "pair": [
            "DOC1SAM_sol2.txt",
            "DOC8SAM_sol2.txt"
          ],
          "similarity": 0.6897719626311315,
          "tfidf_similarity": 0.5468941331460442,
          "ast_similarity": 0.9040887068587624,
          "detection_method": "Combined"
        },
        {
          "pair": [
            "DOC5SAM_sol2.txt",
            "DOC4SAM_sol2.txt"
          ],
          "similarity": 0.6555781764845756,
          "tfidf_similarity": 0.5226014705862065,
          "ast_similarity": 0.8550432353321291,
          "detection_method": "Combined"
        },
        {
          "pair": [
            "DOC3SAM_sol2.txt",
            "DOC5SAM_sol2.txt"
          ],
          "similarity": 0.5999875574079271,
          "tfidf_similarity": 0.5204745270920546,
          "ast_similarity": 0.7192571028817358,
          "detection_method": "Combined"
        },
        {
          "pair": [
            "DOC5SAM_sol2.txt",
            "DOC8SAM_sol2.txt"
          ],
          "similarity": 0.6287542064835558,
          "tfidf_similarity": 0.5117944267554765,
          "ast_similarity": 0.804193876075675,
          "detection_method": "Combined"
        },
        {
          "pair": [
            "DOC6SAM_sol2.txt",
            "DOC5SAM_sol2.txt"
          ],
          "similarity": 0.6265551939418816,
          "tfidf_similarity": 0.5060285416947901,
          "ast_similarity": 0.8073451723125191,
          "detection_method": "Combined"
        },
        {
          "pair": [
            "DOC7SAM_sol2.txt",
            "DOC4SAM_sol2.txt"
          ],
          "similarity": 0.6072629691713709,
          "tfidf_similarity": 0.4816726384335416,
          "ast_similarity": 0.7956484652781151,
          "detection_method": "Combined"
        },
        {
          "pair": [
            "DOC3SAM_sol2.txt",
            "DOC8SAM_sol2.txt"
          ],
          "similarity": 0.5959788575937506,
          "tfidf_similarity": 0.46736015120380986,
          "ast_similarity": 0.7889069171786618,
          "detection_method": "Combined"
        },
        {
          "pair": [
            "DOC4SAM_sol2.txt",
            "DOC8SAM_sol2.txt"
          ],
          "similarity": 0.6455138840253365,
          "tfidf_similarity": 0.4649692774387269,
          "ast_similarity": 0.9163307939052509,
          "detection_method": "Combined"
        },
        {
          "pair": [
            "DOC3SAM_sol2.txt",
            "DOC7SAM_sol2.txt"
          ],
          "similarity": 0.6371624975979251,
          "tfidf_similarity": 0.4637446067937901,
          "ast_similarity": 0.8972893338041277,
          "detection_method": "Combined"
        },
        {
          "pair": [
            "DOC6SAM_sol2.txt",
            "DOC7SAM_sol2.txt"
          ],
          "similarity": 0.5921795075422529,
          "tfidf_similarity": 0.46342755500783867,
          "ast_similarity": 0.7853074363438741,
          "detection_method": "Combined"
        },
        {
          "pair": [
            "DOC7SAM_sol2.txt",
            "DOC8SAM_sol2.txt"
          ],
          "similarity": 0.5821983760888505,
          "tfidf_similarity": 0.4581558830702199,
          "ast_similarity": 0.7682621156167964,
          "detection_method": "Combined"
        },
        {
          "pair": [
            "DOC6SAM_sol2.txt",
            "DOC8SAM_sol2.txt"
          ],
          "similarity": 0.598525439269638,
          "tfidf_similarity": 0.43050035437865963,
          "ast_similarity": 0.8505630666061053,
          "detection_method": "Combined"
        },
        {
          "pair": [
            "DOC6SAM_sol2.txt",
            "DOC3SAM_sol2.txt"
          ],
          "similarity": 0.5492785448126913,
          "tfidf_similarity": 0.3917075970488786,
          "ast_similarity": 0.7856349664584106,
          "detection_method": "Combined"
        },
        {
          "pair": [
            "DOC6SAM_sol2.txt",
            "DOC4SAM_sol2.txt"
          ],
          "similarity": 0.6006346250221444,
          "tfidf_similarity": 0.39134448994941784,
          "ast_similarity": 0.914569827631234,
          "detection_method": "Combined"
        },
        {
          "pair": [
            "DOC3SAM_sol2.txt",
            "DOC2SAM_sol2.txt"
          ],
          "similarity": 0.5127496596874612,
          "tfidf_similarity": 0.30777219554524987,
          "ast_similarity": 0.8202158559007784,
          "detection_method": "Combined"
        },
        {
          "pair": [
            "DOC2SAM_sol2.txt",
            "DOC4SAM_sol2.txt"
          ],
          "similarity": 0.5590441095055118,
          "tfidf_similarity": 0.3059092112399994,
          "ast_similarity": 0.9387464569037802,
          "detection_method": "Combined"
        },
        {
          "pair": [
            "DOC2SAM_sol2.txt",
            "DOC1SAM_sol2.txt"
          ],
          "similarity": 0.55081608951733,
          "tfidf_similarity": 0.2852451279671365,
          "ast_similarity": 0.9491725318426201,
          "detection_method": "Combined"
        },
        {
          "pair": [
            "DOC5SAM_sol2.txt",
            "DOC2SAM_sol2.txt"
          ],
          "similarity": 0.49864623393976404,
          "tfidf_similarity": 0.2754578268417101,
          "ast_similarity": 0.8334288445868447,
          "detection_method": "Combined"
        },
        {
          "pair": [
            "DOC2SAM_sol2.txt",
            "DOC7SAM_sol2.txt"
          ],
          "similarity": 0.482146513245184,
          "tfidf_similarity": 0.2512163156344612,
          "ast_similarity": 0.8285418096612681,
          "detection_method": "Combined"
        },
        {
          "pair": [
            "DOC2SAM_sol2.txt",
            "DOC8SAM_sol2.txt"
          ],
          "similarity": 0.5154634907730835,
          "tfidf_similarity": 0.24660015618195189,
          "ast_similarity": 0.9187584926597809,
          "detection_method": "Combined"
        },
        {
          "pair": [
            "DOC6SAM_sol2.txt",
            "DOC2SAM_sol2.txt"
          ],
          "similarity": 0.4906170970399467,
          "tfidf_similarity": 0.2142340922252704,
          "ast_similarity": 0.9051916042619611,
          "detection_method": "Combined"
        }
      ],
      "all_suspicious_pairs": [
        [
          "DOC3SAM_sol2.txt",
          "DOC4SAM_sol2.txt"
        ],
        [
          "DOC5SAM_sol2.txt",
          "DOC1SAM_sol2.txt"
        ],
        [
          "DOC7SAM_sol2.txt",
          "DOC1SAM_sol2.txt"
        ],
        [
          "DOC5SAM_sol2.txt",
          "DOC7SAM_sol2.txt"
        ],
        [
          "DOC4SAM_sol2.txt",
          "DOC1SAM_sol2.txt"
        ],
        [
          "DOC6SAM_sol2.txt",
          "DOC1SAM_sol2.txt"
        ],
        [
          "DOC3SAM_sol2.txt",
          "DOC1SAM_sol2.txt"
        ],
        [
          "DOC1SAM_sol2.txt",
          "DOC8SAM_sol2.txt"
        ],
        [
          "DOC5SAM_sol2.txt",
          "DOC4SAM_sol2.txt"
        ],
        [
          "DOC3SAM_sol2.txt",
          "DOC5SAM_sol2.txt"
        ],
        [
          "DOC5SAM_sol2.txt",
          "DOC8SAM_sol2.txt"
        ],
        [
          "DOC6SAM_sol2.txt",
          "DOC5SAM_sol2.txt"
        ],
        [
          "DOC7SAM_sol2.txt",
          "DOC4SAM_sol2.txt"
        ],
        [
          "DOC3SAM_sol2.txt",
          "DOC8SAM_sol2.txt"
        ],
        [
          "DOC4SAM_sol2.txt",
          "DOC8SAM_sol2.txt"
        ],
        [
          "DOC3SAM_sol2.txt",
          "DOC7SAM_sol2.txt"
        ],
        [
          "DOC6SAM_sol2.txt",
          "DOC7SAM_sol2.txt"
        ],
        [
          "DOC7SAM_sol2.txt",
          "DOC8SAM_sol2.txt"
        ],
        [
          "DOC6SAM_sol2.txt",
          "DOC8SAM_sol2.txt"
        ],
        [
          "DOC6SAM_sol2.txt",
          "DOC3SAM_sol2.txt"
        ],
        [
          "DOC6SAM_sol2.txt",
          "DOC4SAM_sol2.txt"
        ],
        [
          "DOC3SAM_sol2.txt",
          "DOC2SAM_sol2.txt"
        ],
        [
          "DOC2SAM_sol2.txt",
          "DOC4SAM_sol2.txt"
        ],
        [
          "DOC2SAM_sol2.txt",
          "DOC1SAM_sol2.txt"
        ],
        [
          "DOC5SAM_sol2.txt",
          "DOC2SAM_sol2.txt"
        ],
        [
          "DOC2SAM_sol2.txt",
          "DOC7SAM_sol2.txt"
        ],
        [
          "DOC2SAM_sol2.txt",
          "DOC8SAM_sol2.txt"
        ],
        [
          "DOC6SAM_sol2.txt",
          "DOC2SAM_sol2.txt"
        ]
      ],
      "detection_methods": [
        "TF-IDF",
        "AST"
      ],
      "tfidf_similarity_matrix": [
        [
          0.9999999999999999,
          0.3917075970488786,
          0.5060285416947901,
          0.2142340922252704,
          0.46342755500783867,
          0.39134448994941784,
          0.5729137666264066,
          0.43050035437865963
        ],
        [
          0.3917075970488786,
          1.0000000000000004,
          0.5204745270920546,
          0.30777219554524987,
          0.4637446067937901,
          0.9517214690379101,
          0.5682777198862871,
          0.46736015120380986
        ],
        [
          0.5060285416947901,
          0.5204745270920546,
          1.0,
          0.2754578268417101,
          0.6101110119912536,
          0.5226014705862065,
          0.7131789549311157,
          0.5117944267554765
        ],
        [
          0.2142340922252704,
          0.30777219554524987,
          0.2754578268417101,
          0.9999999999999989,
          0.2512163156344612,
          0.3059092112399994,
          0.2852451279671365,
          0.24660015618195189
        ],
        [
          0.46342755500783867,
          0.4637446067937901,
          0.6101110119912536,
          0.2512163156344612,
          1.0,
          0.4816726384335416,
          0.6637439145799733,
          0.4581558830702199
        ],
        [
          0.39134448994941784,
          0.9517214690379101,
          0.5226014705862065,
          0.3059092112399994,
          0.4816726384335416,
          0.9999999999999999,
          0.5895513277859434,
          0.4649692774387269
        ],
        [
          0.5729137666264066,
          0.5682777198862871,
          0.7131789549311157,
          0.2852451279671365,
          0.6637439145799733,
          0.5895513277859434,
          1.0000000000000002,
          0.5468941331460442
        ],
        [
          0.43050035437865963,
          0.46736015120380986,
          0.5117944267554765,
          0.24660015618195189,
          0.4581558830702199,
          0.4649692774387269,
          0.5468941331460442,
          1.000000000000002
        ]
      ],
      "tfidf_average_similarity": 0.4705931693955044,
      "tfidf_max_similarity": 0.9517214690379101,
      "ast_similarity_matrix": [
        [
          1.0,
          0.7856349664584106,
          0.8073451723125191,
          0.9051916042619611,
          0.7853074363438741,
          0.914569827631234,
          0.9234899848550748,
          0.8505630666061053
        ],
        [
          0.7856349664584106,
          1.0,
          0.7192571028817358,
          0.8202158559007784,
          0.8972893338041277,
          0.8018945528354566,
          0.8013568540477467,
          0.7889069171786618
        ],
        [
          0.8073451723125191,
          0.7192571028817358,
          1.0,
          0.8334288445868447,
          0.7230029192479563,
          0.8550432353321291,
          0.8478633865003155,
          0.804193876075675
        ],
        [
          0.9051916042619611,
          0.8202158559007784,
          0.8334288445868447,
          1.0,
          0.8285418096612681,
          0.9387464569037802,
          0.9491725318426201,
          0.9187584926597809
        ],
        [
          0.7853074363438741,
          0.8972893338041277,
          0.7230029192479563,
          0.8285418096612681,
          1.0,
          0.7956484652781151,
          0.8057370166044864,
          0.7682621156167964
        ],
        [
          0.914569827631234,
          0.8018945528354566,
          0.8550432353321291,
          0.9387464569037802,
          0.7956484652781151,
          1.0,
          0.9923520550893048,
          0.9163307939052509
        ],
        [
          0.9234899848550748,
          0.8013568540477467,
          0.8478633865003155,
          0.9491725318426201,
          0.8057370166044864,
          0.9923520550893048,
          1.0,
          0.9040887068587624
        ],
        [
          0.8505630666061053,
          0.7889069171786618,
          0.804193876075675,
          0.9187584926597809,
          0.7682621156167964,
          0.9163307939052509,
          0.9040887068587624,
          1.0
        ]
      ],
      "ast_average_similarity": 0.8457926207600276,
      "ast_max_similarity": 0.9923520550893048,
      "average_similarity": 0.6206729499413137,
      "max_similarity": 0.9923520550893048,
      "summary": {
        "total_submissions": 0,
        "high_confidence_count": 1,
        "needs_review_count": 27,
        "total_suspicious_pairs": 28,
        "detection_methods": [
          "TF-IDF",
          "AST"
        ],
        "suspicious_submissions_count": 8,
        "tfidf_avg_similarity": 0.4705931693955044,
        "tfidf_max_similarity": 0.9517214690379101,
        "ast_avg_similarity": 0.8457926207600276,
        "ast_max_similarity": 0.9923520550893048,
        "combined_avg_similarity": 0.6206729499413137,
        "combined_max_similarity": 0.9923520550893048
      }
    },
    "solution3": {
      "high_confidence_pairs": [
        {
          "pair": [
            "DOC6SAM_sol3.txt",
            "DOC5SAM_sol3.txt"
          ],
          "similarity": 0.8300644289052039,
          "tfidf_similarity": 0.7734069044432004,
          "ast_similarity": 0.9150507155982094,
          "detection_method": "Combined"
        }
      ],
      "needs_review_pairs": [
        {
          "pair": [
            "DOC1SAM_sol3.txt",
            "DOC8SAM_sol3.txt"
          ],
          "similarity": 0.6686780212881,
          "tfidf_similarity": 0.516948523349527,
          "ast_similarity": 0.8962722681959594,
          "detection_method": "Combined"
        },
        {
          "pair": [
            "DOC3SAM_sol3.txt",
            "DOC7SAM_sol3.txt"
          ],
          "similarity": 0.6343853221927871,
          "tfidf_similarity": 0.47307936795389105,
          "ast_similarity": 0.876344253551131,
          "detection_method": "Combined"
        },
        {
          "pair": [
            "DOC4SAM_sol3.txt",
            "DOC1SAM_sol3.txt"
          ],
          "similarity": 0.48075489200538685,
          "tfidf_similarity": 0.20094155737203323,
          "ast_similarity": 0.9004748939554172,
          "detection_method": "Combined"
        },
        {
          "pair": [
            "DOC2SAM_sol3.txt",
            "DOC1SAM_sol3.txt"
          ],
          "similarity": 0.5046025860697521,
          "tfidf_similarity": 0.18373660066838407,
          "ast_similarity": 0.9859015641718041,
          "detection_method": "Combined"
        },
        {
          "pair": [
            "DOC5SAM_sol3.txt",
            "DOC7SAM_sol3.txt"
          ],
          "similarity": 0.4982250579717553,
          "tfidf_similarity": 0.17993536647247352,
          "ast_similarity": 0.9756595952206779,
          "detection_method": "Combined"
        },
        {
          "pair": [
            "DOC6SAM_sol3.txt",
            "DOC7SAM_sol3.txt"
          ],
          "similarity": 0.462533669384197,
          "tfidf_similarity": 0.16824819296775412,
          "ast_similarity": 0.9039618840088612,
          "detection_method": "Combined"
        },
        {
          "pair": [
            "DOC3SAM_sol3.txt",
            "DOC2SAM_sol3.txt"
          ],
          "similarity": 0.4352410595797323,
          "tfidf_similarity": 0.1622484207835888,
          "ast_similarity": 0.8447300177739474,
          "detection_method": "Combined"
        },
        {
          "pair": [
            "DOC6SAM_sol3.txt",
            "DOC2SAM_sol3.txt"
          ],
          "similarity": 0.4564261423826168,
          "tfidf_similarity": 0.1590662624919832,
          "ast_similarity": 0.9024659622185672,
          "detection_method": "Combined"
        },
        {
          "pair": [
            "DOC4SAM_sol3.txt",
            "DOC8SAM_sol3.txt"
          ],
          "similarity": 0.4663341946943796,
          "tfidf_similarity": 0.13675354232929665,
          "ast_similarity": 0.9607051732420039,
          "detection_method": "Combined"
        },
        {
          "pair": [
            "DOC5SAM_sol3.txt",
            "DOC1SAM_sol3.txt"
          ],
          "similarity": 0.4649241467661251,
          "tfidf_similarity": 0.13584564026664103,
          "ast_similarity": 0.9585419065153512,
          "detection_method": "Combined"
        },
        {
          "pair": [
            "DOC3SAM_sol3.txt",
            "DOC1SAM_sol3.txt"
          ],
          "similarity": 0.4100888806913881,
          "tfidf_similarity": 0.11989005963204825,
          "ast_similarity": 0.8453871122803978,
          "detection_method": "Combined"
        },
        {
          "pair": [
            "DOC6SAM_sol3.txt",
            "DOC1SAM_sol3.txt"
          ],
          "similarity": 0.4241575176286111,
          "tfidf_similarity": 0.1108348016406715,
          "ast_similarity": 0.8941415916105204,
          "detection_method": "Combined"
        },
        {
          "pair": [
            "DOC5SAM_sol3.txt",
            "DOC2SAM_sol3.txt"
          ],
          "similarity": 0.44980456763503157,
          "tfidf_similarity": 0.10305170349884513,
          "ast_similarity": 0.9699338638393111,
          "detection_method": "Combined"
        },
        {
          "pair": [
            "DOC5SAM_sol3.txt",
            "DOC4SAM_sol3.txt"
          ],
          "similarity": 0.4160619258913092,
          "tfidf_similarity": 0.10144465532181982,
          "ast_similarity": 0.8879878317455432,
          "detection_method": "Combined"
        },
        {
          "pair": [
            "DOC7SAM_sol3.txt",
            "DOC1SAM_sol3.txt"
          ],
          "similarity": 0.43688449500594795,
          "tfidf_similarity": 0.09712654912200366,
          "ast_similarity": 0.9465214138318643,
          "detection_method": "Combined"
        },
        {
          "pair": [
            "DOC6SAM_sol3.txt",
            "DOC4SAM_sol3.txt"
          ],
          "similarity": 0.4427440220274752,
          "tfidf_similarity": 0.09691272933777793,
          "ast_similarity": 0.961490961062021,
          "detection_method": "Combined"
        },
        {
          "pair": [
            "DOC3SAM_sol3.txt",
            "DOC5SAM_sol3.txt"
          ],
          "similarity": 0.40225317643639,
          "tfidf_similarity": 0.09600646789222618,
          "ast_similarity": 0.8616232392526357,
          "detection_method": "Combined"
        },
        {
          "pair": [
            "DOC5SAM_sol3.txt",
            "DOC8SAM_sol3.txt"
          ],
          "similarity": 0.42092544769139745,
          "tfidf_similarity": 0.09227866420176394,
          "ast_similarity": 0.9138956229258477,
          "detection_method": "Combined"
        },
        {
          "pair": [
            "DOC6SAM_sol3.txt",
            "DOC8SAM_sol3.txt"
          ],
          "similarity": 0.4458822875747213,
          "tfidf_similarity": 0.09133881243250143,
          "ast_similarity": 0.977697500288051,
          "detection_method": "Combined"
        },
        {
          "pair": [
            "DOC2SAM_sol3.txt",
            "DOC4SAM_sol3.txt"
          ],
          "similarity": 0.41262981803622656,
          "tfidf_similarity": 0.08992670014208222,
          "ast_similarity": 0.8966844948774431,
          "detection_method": "Combined"
        },
        {
          "pair": [
            "DOC2SAM_sol3.txt",
            "DOC8SAM_sol3.txt"
          ],
          "similarity": 0.41183960390309077,
          "tfidf_similarity": 0.08457256688732517,
          "ast_similarity": 0.902740159426739,
          "detection_method": "Combined"
        },
        {
          "pair": [
            "DOC6SAM_sol3.txt",
            "DOC3SAM_sol3.txt"
          ],
          "similarity": 0.40811126766366596,
          "tfidf_similarity": 0.07755906988893133,
          "ast_similarity": 0.9039395643257678,
          "detection_method": "Combined"
        },
        {
          "pair": [
            "DOC2SAM_sol3.txt",
            "DOC7SAM_sol3.txt"
          ],
          "similarity": 0.4229158371864279,
          "tfidf_similarity": 0.07292732938696098,
          "ast_similarity": 0.9478985988856282,
          "detection_method": "Combined"
        },
        {
          "pair": [
            "DOC7SAM_sol3.txt",
            "DOC4SAM_sol3.txt"
          ],
          "similarity": 0.39509212174769404,
          "tfidf_similarity": 0.07179005821368094,
          "ast_similarity": 0.8800452170487136,
          "detection_method": "Combined"
        },
        {
          "pair": [
            "DOC3SAM_sol3.txt",
            "DOC4SAM_sol3.txt"
          ],
          "similarity": 0.3960694671383666,
          "tfidf_similarity": 0.07034698085675418,
          "ast_similarity": 0.8846531965607852,
          "detection_method": "Combined"
        },
        {
          "pair": [
            "DOC7SAM_sol3.txt",
            "DOC8SAM_sol3.txt"
          ],
          "similarity": 0.4019034297345977,
          "tfidf_similarity": 0.06935997735499447,
          "ast_similarity": 0.9007186083040024,
          "detection_method": "Combined"
        },
        {
          "pair": [
            "DOC3SAM_sol3.txt",
            "DOC8SAM_sol3.txt"
          ],
          "similarity": 0.4009673160900131,
          "tfidf_similarity": 0.06820502032240419,
          "ast_similarity": 0.9001107597414264,
          "detection_method": "Combined"
        }
      ],
      "all_suspicious_pairs": [
        [
          "DOC6SAM_sol3.txt",
          "DOC5SAM_sol3.txt"
        ],
        [
          "DOC1SAM_sol3.txt",
          "DOC8SAM_sol3.txt"
        ],
        [
          "DOC3SAM_sol3.txt",
          "DOC7SAM_sol3.txt"
        ],
        [
          "DOC4SAM_sol3.txt",
          "DOC1SAM_sol3.txt"
        ],
        [
          "DOC2SAM_sol3.txt",
          "DOC1SAM_sol3.txt"
        ],
        [
          "DOC5SAM_sol3.txt",
          "DOC7SAM_sol3.txt"
        ],
        [
          "DOC6SAM_sol3.txt",
          "DOC7SAM_sol3.txt"
        ],
        [
          "DOC3SAM_sol3.txt",
          "DOC2SAM_sol3.txt"
        ],
        [
          "DOC6SAM_sol3.txt",
          "DOC2SAM_sol3.txt"
        ],
        [
          "DOC4SAM_sol3.txt",
          "DOC8SAM_sol3.txt"
        ],
        [
          "DOC5SAM_sol3.txt",
          "DOC1SAM_sol3.txt"
        ],
        [
          "DOC3SAM_sol3.txt",
          "DOC1SAM_sol3.txt"
        ],
        [
          "DOC6SAM_sol3.txt",
          "DOC1SAM_sol3.txt"
        ],
        [
          "DOC5SAM_sol3.txt",
          "DOC2SAM_sol3.txt"
        ],
        [
          "DOC5SAM_sol3.txt",
          "DOC4SAM_sol3.txt"
        ],
        [
          "DOC7SAM_sol3.txt",
          "DOC1SAM_sol3.txt"
        ],
        [
          "DOC6SAM_sol3.txt",
          "DOC4SAM_sol3.txt"
        ],
        [
          "DOC3SAM_sol3.txt",
          "DOC5SAM_sol3.txt"
        ],
        [
          "DOC5SAM_sol3.txt",
          "DOC8SAM_sol3.txt"
        ],
        [
          "DOC6SAM_sol3.txt",
          "DOC8SAM_sol3.txt"
        ],
        [
          "DOC2SAM_sol3.txt",
          "DOC4SAM_sol3.txt"
        ],
        [
          "DOC2SAM_sol3.txt",
          "DOC8SAM_sol3.txt"
        ],
        [
          "DOC6SAM_sol3.txt",
          "DOC3SAM_sol3.txt"
        ],
        [
          "DOC2SAM_sol3.txt",
          "DOC7SAM_sol3.txt"
        ],
        [
          "DOC7SAM_sol3.txt",
          "DOC4SAM_sol3.txt"
        ],
        [
          "DOC3SAM_sol3.txt",
          "DOC4SAM_sol3.txt"
        ],
        [
          "DOC7SAM_sol3.txt",
          "DOC8SAM_sol3.txt"
        ],
        [
          "DOC3SAM_sol3.txt",
          "DOC8SAM_sol3.txt"
        ]
      ],
      "detection_methods": [
        "TF-IDF",
        "AST"
      ],
      "tfidf_similarity_matrix": [
        [
          1.0,
          0.07755906988893133,
          0.7734069044432004,
          0.1590662624919832,
          0.16824819296775412,
          0.09691272933777793,
          0.1108348016406715,
          0.09133881243250143
        ],
        [
          0.07755906988893133,
          0.9999999999999991,
          0.09600646789222618,
          0.1622484207835888,
          0.47307936795389105,
          0.07034698085675418,
          0.11989005963204825,
          0.06820502032240419
        ],
        [
          0.7734069044432004,
          0.09600646789222618,
          1.0000000000000002,
          0.10305170349884513,
          0.17993536647247352,
          0.10144465532181982,
          0.13584564026664103,
          0.09227866420176394
        ],
        [
          0.1590662624919832,
          0.1622484207835888,
          0.10305170349884513,
          1.0,
          0.07292732938696098,
          0.08992670014208222,
          0.18373660066838407,
          0.08457256688732517
        ],
        [
          0.16824819296775412,
          0.47307936795389105,
          0.17993536647247352,
          0.07292732938696098,
          1.0000000000000042,
          0.07179005821368094,
          0.09712654912200366,
          0.06935997735499447
        ],
        [
          0.09691272933777793,
          0.07034698085675418,
          0.10144465532181982,
          0.08992670014208222,
          0.07179005821368094,
          1.0,
          0.20094155737203323,
          0.13675354232929665
        ],
        [
          0.1108348016406715,
          0.11989005963204825,
          0.13584564026664103,
          0.18373660066838407,
          0.09712654912200366,
          0.20094155737203323,
          0.9999999999999999,
          0.516948523349527
        ],
        [
          0.09133881243250143,
          0.06820502032240419,
          0.09227866420176394,
          0.08457256688732517,
          0.06935997735499447,
          0.13675354232929665,
          0.516948523349527,
          1.0000000000000007
        ]
      ],
      "tfidf_average_similarity": 0.16442080447255591,
      "tfidf_max_similarity": 0.7734069044432004,
      "ast_similarity_matrix": [
        [
          1.0,
          0.9039395643257678,
          0.9150507155982094,
          0.9024659622185672,
          0.9039618840088612,
          0.961490961062021,
          0.8941415916105204,
          0.977697500288051
        ],
        [
          0.9039395643257678,
          1.0,
          0.8616232392526357,
          0.8447300177739474,
          0.876344253551131,
          0.8846531965607852,
          0.8453871122803978,
          0.9001107597414264
        ],
        [
          0.9150507155982094,
          0.8616232392526357,
          1.0,
          0.9699338638393111,
          0.9756595952206779,
          0.8879878317455432,
          0.9585419065153512,
          0.9138956229258477
        ],
        [
          0.9024659622185672,
          0.8447300177739474,
          0.9699338638393111,
          1.0,
          0.9478985988856282,
          0.8966844948774431,
          0.9859015641718041,
          0.902740159426739
        ],
        [
          0.9039618840088612,
          0.876344253551131,
          0.9756595952206779,
          0.9478985988856282,
          1.0,
          0.8800452170487136,
          0.9465214138318643,
          0.9007186083040024
        ],
        [
          0.961490961062021,
          0.8846531965607852,
          0.8879878317455432,
          0.8966844948774431,
          0.8800452170487136,
          1.0,
          0.9004748939554172,
          0.9607051732420039
        ],
        [
          0.8941415916105204,
          0.8453871122803978,
          0.9585419065153512,
          0.9859015641718041,
          0.9465214138318643,
          0.9004748939554172,
          1.0,
          0.8962722681959594
        ],
        [
          0.977697500288051,
          0.9001107597414264,
          0.9138956229258477,
          0.902740159426739,
          0.9007186083040024,
          0.9607051732420039,
          0.8962722681959594,
          1.0
        ]
      ],
      "ast_average_similarity": 0.9141277846592367,
      "ast_max_similarity": 0.9859015641718041,
      "average_similarity": 0.46430359654722825,
      "max_similarity": 0.9859015641718041,
      "summary": {
        "total_submissions": 0,
        "high_confidence_count": 1,
        "needs_review_count": 27,
        "total_suspicious_pairs": 28,
        "detection_methods": [
          "TF-IDF",
          "AST"
        ],
        "suspicious_submissions_count": 8,
        "tfidf_avg_similarity": 0.16442080447255591,
        "tfidf_max_similarity": 0.7734069044432004,
        "ast_avg_similarity": 0.9141277846592367,
        "ast_max_similarity": 0.9859015641718041,
        "combined_avg_similarity": 0.46430359654722825,
        "combined_max_similarity": 0.9859015641718041
      }
    },
    "solution4": {
      "high_confidence_pairs": [
        {
          "pair": [
            "DOC6SAM_sol4.txt",
            "DOC5SAM_sol4.txt"
          ],
          "similarity": 1.0,
          "tfidf_similarity": 1.0000000000000002,
          "ast_similarity": 0.9999999999999998,
          "detection_method": "Combined"
        },
        {
          "pair": [
            "DOC6SAM_sol4.txt",
            "DOC7SAM_sol4.txt"
          ],
          "similarity": 1.0,
          "tfidf_similarity": 1.0000000000000002,
          "ast_similarity": 0.9999999999999998,
          "detection_method": "Combined"
        },
        {
          "pair": [
            "DOC6SAM_sol4.txt",
            "DOC8SAM_sol4.txt"
          ],
          "similarity": 0.9968283752860412,
          "tfidf_similarity": 1.0000000000000002,
          "ast_similarity": 0.9920709382151028,
          "detection_method": "Combined"
        },
        {
          "pair": [
            "DOC5SAM_sol4.txt",
            "DOC7SAM_sol4.txt"
          ],
          "similarity": 1.0,
          "tfidf_similarity": 1.0000000000000002,
          "ast_similarity": 0.9999999999999998,
          "detection_method": "Combined"
        },
        {
          "pair": [
            "DOC5SAM_sol4.txt",
            "DOC8SAM_sol4.txt"
          ],
          "similarity": 0.9968283752860412,
          "tfidf_similarity": 1.0000000000000002,
          "ast_similarity": 0.9920709382151028,
          "detection_method": "Combined"
        },
        {
          "pair": [
            "DOC7SAM_sol4.txt",
            "DOC8SAM_sol4.txt"
          ],
          "similarity": 0.9968283752860412,
          "tfidf_similarity": 1.0000000000000002,
          "ast_similarity": 0.9920709382151028,
          "detection_method": "Combined"
        }
      ],
      "needs_review_pairs": [
        {
          "pair": [
            "DOC6SAM_sol4.txt",
            "DOC1SAM_sol4.txt"
          ],
          "similarity": 0.7544837460481723,
          "tfidf_similarity": 0.7544837460481723,
          "ast_similarity": 0.0,
          "detection_method": "TF-IDF"
        },
        {
          "pair": [
            "DOC5SAM_sol4.txt",
            "DOC1SAM_sol4.txt"
          ],
          "similarity": 0.7544837460481723,
          "tfidf_similarity": 0.7544837460481723,
          "ast_similarity": 0.0,
          "detection_method": "TF-IDF"
        },
        {
          "pair": [
            "DOC7SAM_sol4.txt",
            "DOC1SAM_sol4.txt"
          ],
          "similarity": 0.7544837460481723,
          "tfidf_similarity": 0.7544837460481723,
          "ast_similarity": 0.0,
          "detection_method": "TF-IDF"
        },
        {
          "pair": [
            "DOC1SAM_sol4.txt",
            "DOC8SAM_sol4.txt"
          ],
          "similarity": 0.7544837460481723,
          "tfidf_similarity": 0.7544837460481723,
          "ast_similarity": 0.0,
          "detection_method": "TF-IDF"
        },
        {
          "pair": [
            "DOC6SAM_sol4.txt",
            "DOC4SAM_sol4.txt"
          ],
          "similarity": 0.749563544417992,
          "tfidf_similarity": 0.749563544417992,
          "ast_similarity": 0.0,
          "detection_method": "TF-IDF"
        },
        {
          "pair": [
            "DOC5SAM_sol4.txt",
            "DOC4SAM_sol4.txt"
          ],
          "similarity": 0.749563544417992,
          "tfidf_similarity": 0.749563544417992,
          "ast_similarity": 0.0,
          "detection_method": "TF-IDF"
        },
        {
          "pair": [
            "DOC7SAM_sol4.txt",
            "DOC4SAM_sol4.txt"
          ],
          "similarity": 0.749563544417992,
          "tfidf_similarity": 0.749563544417992,
          "ast_similarity": 0.0,
          "detection_method": "TF-IDF"
        },
        {
          "pair": [
            "DOC8SAM_sol4.txt",
            "DOC4SAM_sol4.txt"
          ],
          "similarity": 0.749563544417992,
          "tfidf_similarity": 0.749563544417992,
          "ast_similarity": 0.0,
          "detection_method": "TF-IDF"
        },
        {
          "pair": [
            "DOC6SAM_sol4.txt",
            "DOC2SAM_sol4.txt"
          ],
          "similarity": 0.6904884426862692,
          "tfidf_similarity": 0.6904884426862692,
          "ast_similarity": 0.0,
          "detection_method": "TF-IDF"
        },
        {
          "pair": [
            "DOC5SAM_sol4.txt",
            "DOC2SAM_sol4.txt"
          ],
          "similarity": 0.6904884426862692,
          "tfidf_similarity": 0.6904884426862692,
          "ast_similarity": 0.0,
          "detection_method": "TF-IDF"
        },
        {
          "pair": [
            "DOC7SAM_sol4.txt",
            "DOC2SAM_sol4.txt"
          ],
          "similarity": 0.6904884426862692,
          "tfidf_similarity": 0.6904884426862692,
          "ast_similarity": 0.0,
          "detection_method": "TF-IDF"
        },
        {
          "pair": [
            "DOC2SAM_sol4.txt",
            "DOC8SAM_sol4.txt"
          ],
          "similarity": 0.6904884426862692,
          "tfidf_similarity": 0.6904884426862692,
          "ast_similarity": 0.0,
          "detection_method": "TF-IDF"
        },
        {
          "pair": [
            "DOC1SAM_sol4.txt",
            "DOC4SAM_sol4.txt"
          ],
          "similarity": 0.6691365234346623,
          "tfidf_similarity": 0.6691365234346623,
          "ast_similarity": 0.0,
          "detection_method": "TF-IDF"
        },
        {
          "pair": [
            "DOC3SAM_sol4.txt",
            "DOC1SAM_sol4.txt"
          ],
          "similarity": 0.731792389081329,
          "tfidf_similarity": 0.6629825320955043,
          "ast_similarity": 0.8350071745600661,
          "detection_method": "Combined"
        },
        {
          "pair": [
            "DOC3SAM_sol4.txt",
            "DOC6SAM_sol4.txt"
          ],
          "similarity": 0.65391211892928,
          "tfidf_similarity": 0.65391211892928,
          "ast_similarity": 0.0,
          "detection_method": "TF-IDF"
        },
        {
          "pair": [
            "DOC3SAM_sol4.txt",
            "DOC5SAM_sol4.txt"
          ],
          "similarity": 0.65391211892928,
          "tfidf_similarity": 0.65391211892928,
          "ast_similarity": 0.0,
          "detection_method": "TF-IDF"
        },
        {
          "pair": [
            "DOC3SAM_sol4.txt",
            "DOC7SAM_sol4.txt"
          ],
          "similarity": 0.65391211892928,
          "tfidf_similarity": 0.65391211892928,
          "ast_similarity": 0.0,
          "detection_method": "TF-IDF"
        },
        {
          "pair": [
            "DOC3SAM_sol4.txt",
            "DOC8SAM_sol4.txt"
          ],
          "similarity": 0.65391211892928,
          "tfidf_similarity": 0.65391211892928,
          "ast_similarity": 0.0,
          "detection_method": "TF-IDF"
        },
        {
          "pair": [
            "DOC2SAM_sol4.txt",
            "DOC1SAM_sol4.txt"
          ],
          "similarity": 0.6826376077485306,
          "tfidf_similarity": 0.6251103691788525,
          "ast_similarity": 0.7689284656030477,
          "detection_method": "Combined"
        },
        {
          "pair": [
            "DOC2SAM_sol4.txt",
            "DOC4SAM_sol4.txt"
          ],
          "similarity": 0.5606080376654595,
          "tfidf_similarity": 0.5606080376654595,
          "ast_similarity": 0.0,
          "detection_method": "TF-IDF"
        },
        {
          "pair": [
            "DOC3SAM_sol4.txt",
            "DOC4SAM_sol4.txt"
          ],
          "similarity": 0.5050673301028956,
          "tfidf_similarity": 0.5050673301028956,
          "ast_similarity": 0.0,
          "detection_method": "TF-IDF"
        },
        {
          "pair": [
            "DOC3SAM_sol4.txt",
            "DOC2SAM_sol4.txt"
          ],
          "similarity": 0.5829940019410418,
          "tfidf_similarity": 0.5028296064868122,
          "ast_similarity": 0.7032405951223863,
          "detection_method": "Combined"
        }
      ],
      "all_suspicious_pairs": [
        [
          "DOC6SAM_sol4.txt",
          "DOC5SAM_sol4.txt"
        ],
        [
          "DOC6SAM_sol4.txt",
          "DOC7SAM_sol4.txt"
        ],
        [
          "DOC6SAM_sol4.txt",
          "DOC8SAM_sol4.txt"
        ],
        [
          "DOC5SAM_sol4.txt",
          "DOC7SAM_sol4.txt"
        ],
        [
          "DOC5SAM_sol4.txt",
          "DOC8SAM_sol4.txt"
        ],
        [
          "DOC7SAM_sol4.txt",
          "DOC8SAM_sol4.txt"
        ],
        [
          "DOC6SAM_sol4.txt",
          "DOC1SAM_sol4.txt"
        ],
        [
          "DOC5SAM_sol4.txt",
          "DOC1SAM_sol4.txt"
        ],
        [
          "DOC7SAM_sol4.txt",
          "DOC1SAM_sol4.txt"
        ],
        [
          "DOC1SAM_sol4.txt",
          "DOC8SAM_sol4.txt"
        ],
        [
          "DOC6SAM_sol4.txt",
          "DOC4SAM_sol4.txt"
        ],
        [
          "DOC5SAM_sol4.txt",
          "DOC4SAM_sol4.txt"
        ],
        [
          "DOC7SAM_sol4.txt",
          "DOC4SAM_sol4.txt"
        ],
        [
          "DOC8SAM_sol4.txt",
          "DOC4SAM_sol4.txt"
        ],
        [
          "DOC6SAM_sol4.txt",
          "DOC2SAM_sol4.txt"
        ],
        [
          "DOC5SAM_sol4.txt",
          "DOC2SAM_sol4.txt"
        ],
        [
          "DOC7SAM_sol4.txt",
          "DOC2SAM_sol4.txt"
        ],
        [
          "DOC2SAM_sol4.txt",
          "DOC8SAM_sol4.txt"
        ],
        [
          "DOC1SAM_sol4.txt",
          "DOC4SAM_sol4.txt"
        ],
        [
          "DOC3SAM_sol4.txt",
          "DOC1SAM_sol4.txt"
        ],
        [
          "DOC3SAM_sol4.txt",
          "DOC6SAM_sol4.txt"
        ],
        [
          "DOC3SAM_sol4.txt",
          "DOC5SAM_sol4.txt"
        ],
        [
          "DOC3SAM_sol4.txt",
          "DOC7SAM_sol4.txt"
        ],
        [
          "DOC3SAM_sol4.txt",
          "DOC8SAM_sol4.txt"
        ],
        [
          "DOC2SAM_sol4.txt",
          "DOC1SAM_sol4.txt"
        ],
        [
          "DOC2SAM_sol4.txt",
          "DOC4SAM_sol4.txt"
        ],
        [
          "DOC3SAM_sol4.txt",
          "DOC4SAM_sol4.txt"
        ],
        [
          "DOC3SAM_sol4.txt",
          "DOC2SAM_sol4.txt"
        ]
      ],
      "detection_methods": [
        "TF-IDF",
        "AST"
      ],
      "tfidf_similarity_matrix": [
        [
          1.0,
          0.65391211892928,
          0.65391211892928,
          0.65391211892928,
          0.5028296064868122,
          0.6629825320955043,
          0.65391211892928,
          0.5050673301028956
        ],
        [
          0.65391211892928,
          1.0000000000000002,
          1.0000000000000002,
          1.0000000000000002,
          0.6904884426862692,
          0.7544837460481723,
          1.0000000000000002,
          0.749563544417992
        ],
        [
          0.65391211892928,
          1.0000000000000002,
          1.0000000000000002,
          1.0000000000000002,
          0.6904884426862692,
          0.7544837460481723,
          1.0000000000000002,
          0.749563544417992
        ],
        [
          0.65391211892928,
          1.0000000000000002,
          1.0000000000000002,
          1.0000000000000002,
          0.6904884426862692,
          0.7544837460481723,
          1.0000000000000002,
          0.749563544417992
        ],
        [
          0.5028296064868122,
          0.6904884426862692,
          0.6904884426862692,
          0.6904884426862692,
          0.9999999999999991,
          0.6251103691788525,
          0.6904884426862692,
          0.5606080376654595
        ],
        [
          0.6629825320955043,
          0.7544837460481723,
          0.7544837460481723,
          0.7544837460481723,
          0.6251103691788525,
          1.0000000000000004,
          0.7544837460481723,
          0.6691365234346623
        ],
        [
          0.65391211892928,
          1.0000000000000002,
          1.0000000000000002,
          1.0000000000000002,
          0.6904884426862692,
          0.7544837460481723,
          1.0000000000000002,
          0.749563544417992
        ],
        [
          0.5050673301028956,
          0.749563544417992,
          0.749563544417992,
          0.749563544417992,
          0.5606080376654595,
          0.6691365234346623,
          0.749563544417992,
          1.0
        ]
      ],
      "tfidf_average_similarity": 0.7471259216889659,
      "tfidf_max_similarity": 1.0000000000000002,
      "ast_similarity_matrix": [
        [
          1.0,
          0.5787578308052213,
          0.5787578308052213,
          0.5787578308052213,
          0.7032405951223863,
          0.8350071745600661,
          0.5796049479508967,
          0.6513216452976385
        ],
        [
          0.5787578308052213,
          1.0,
          0.9999999999999998,
          0.9999999999999998,
          0.6034326923506321,
          0.5968674484461294,
          0.9920709382151028,
          0.6451788159243687
        ],
        [
          0.5787578308052213,
          0.9999999999999998,
          1.0,
          0.9999999999999998,
          0.6034326923506321,
          0.5968674484461294,
          0.9920709382151028,
          0.6451788159243687
        ],
        [
          0.5787578308052213,
          0.9999999999999998,
          0.9999999999999998,
          1.0,
          0.6034326923506321,
          0.5968674484461294,
          0.9920709382151028,
          0.6451788159243687
        ],
        [
          0.7032405951223863,
          0.6034326923506321,
          0.6034326923506321,
          0.6034326923506321,
          1.0,
          0.7689284656030477,
          0.6055132382378374,
          0.6713565019044472
        ],
        [
          0.8350071745600661,
          0.5968674484461294,
          0.5968674484461294,
          0.5968674484461294,
          0.7689284656030475,
          1.0,
          0.5976542878143845,
          0.6681675642736975
        ],
        [
          0.5796049479508967,
          0.9920709382151028,
          0.9920709382151028,
          0.9920709382151028,
          0.6055132382378374,
          0.5976542878143845,
          1.0,
          0.6460907313471298
        ],
        [
          0.6513216452976385,
          0.6451788159243687,
          0.6451788159243687,
          0.6451788159243687,
          0.6713565019044472,
          0.6681675642736975,
          0.6460907313471298,
          1.0
        ]
      ],
      "ast_average_similarity": 0.7134217260477106,
      "ast_max_similarity": 0.9999999999999998,
      "average_similarity": 0.7336442434324637,
      "max_similarity": 1.0000000000000002,
      "summary": {
        "total_submissions": 0,
        "high_confidence_count": 6,
        "needs_review_count": 22,
        "total_suspicious_pairs": 28,
        "detection_methods": [
          "TF-IDF",
          "AST"
        ],
        "suspicious_submissions_count": 8,
        "tfidf_avg_similarity": 0.7471259216889659,
        "tfidf_max_similarity": 1.0000000000000002,
        "ast_avg_similarity": 0.7134217260477106,
        "ast_max_similarity": 0.9999999999999998,
        "combined_avg_similarity": 0.7336442434324637,
        "combined_max_similarity": 1.0000000000000002
      }
    }
  },
  "ai_detection": {
    "solution1": {
      "DOC6SAM_sol1.txt": {
        "file": "DOC6SAM_sol1.txt",
        "is_ai_generated": false,
        "technical_score": 24.383218208694817,
        "ai_likelihood": "5%",
        "risk_level": "MINIMAL RISK",
        "detailed_results": {
          "educational_patterns_score": 0.0,
          "domain_patterns_score": 0.0,
          "code_structure_score": 0.22613065326633167,
          "formatting_consistency_score": 0.6733333333333335,
          "similarity_score": 0.30456292048499206,
          "ml_prediction_score": 0.16,
          "overall_score": 0.24383218208694818
        },
        "top_indicators": [
          {
            "name": "formatting_consistency_score",
            "value": 0.6733333333333335
          },
          {
            "name": "similarity_score",
            "value": 0.30456292048499206
          },
          {
            "name": "code_structure_score",
            "value": 0.22613065326633167
          },
          {
            "name": "ml_prediction_score",
            "value": 0.16
          }
        ]
      },
      "DOC3SAM_sol1.txt": {
        "file": "DOC3SAM_sol1.txt",
        "is_ai_generated": false,
        "technical_score": 23.285413959887407,
        "ai_likelihood": "5%",
        "risk_level": "MINIMAL RISK",
        "detailed_results": {
          "educational_patterns_score": 0.0,
          "domain_patterns_score": 0.0,
          "code_structure_score": 0.134070796460177,
          "formatting_consistency_score": 0.7553846153846155,
          "similarity_score": 0.28717913911077597,
          "ml_prediction_score": 0.14,
          "overall_score": 0.23285413959887408
        },
        "top_indicators": [
          {
            "name": "formatting_consistency_score",
            "value": 0.7553846153846155
          },
          {
            "name": "similarity_score",
            "value": 0.28717913911077597
          },
          {
            "name": "ml_prediction_score",
            "value": 0.14
          },
          {
            "name": "code_structure_score",
            "value": 0.134070796460177
          }
        ]
      },
      "DOC5SAM_sol1.txt": {
        "file": "DOC5SAM_sol1.txt",
        "is_ai_generated": false,
        "technical_score": 19.379435625477207,
        "ai_likelihood": "5%",
        "risk_level": "MINIMAL RISK",
        "detailed_results": {
          "educational_patterns_score": 0.0,
          "domain_patterns_score": 0.0,
          "code_structure_score": 0.028450966776093076,
          "formatting_consistency_score": 0.7367741935483872,
          "similarity_score": 0.24505291103050003,
          "ml_prediction_score": 0.1,
          "overall_score": 0.19379435625477207
        },
        "top_indicators": [
          {
            "name": "formatting_consistency_score",
            "value": 0.7367741935483872
          },
          {
            "name": "similarity_score",
            "value": 0.24505291103050003
          },
          {
            "name": "ml_prediction_score",
            "value": 0.1
          }
        ]
      },
      "DOC2SAM_sol1.txt": {
        "file": "DOC2SAM_sol1.txt",
        "is_ai_generated": false,
        "technical_score": 23.266262365382666,
        "ai_likelihood": "5%",
        "risk_level": "MINIMAL RISK",
        "detailed_results": {
          "educational_patterns_score": 0.0,
          "domain_patterns_score": 0.0,
          "code_structure_score": 0.15,
          "formatting_consistency_score": 0.7500000000000001,
          "similarity_score": 0.3383131182691331,
          "ml_prediction_score": 0.1,
          "overall_score": 0.23266262365382664
        },
        "top_indicators": [
          {
            "name": "formatting_consistency_score",
            "value": 0.7500000000000001
          },
          {
            "name": "similarity_score",
            "value": 0.3383131182691331
          },
          {
            "name": "code_structure_score",
            "value": 0.15
          },
          {
            "name": "ml_prediction_score",
            "value": 0.1
          }
        ]
      },
      "DOC7SAM_sol1.txt": {
        "file": "DOC7SAM_sol1.txt",
        "is_ai_generated": false,
        "technical_score": 22.881723849138552,
        "ai_likelihood": "5%",
        "risk_level": "MINIMAL RISK",
        "detailed_results": {
          "educational_patterns_score": 0.0,
          "domain_patterns_score": 0.0,
          "code_structure_score": 0.17413793103448275,
          "formatting_consistency_score": 0.7511111111111113,
          "similarity_score": 0.30014941084773206,
          "ml_prediction_score": 0.1,
          "overall_score": 0.22881723849138552
        },
        "top_indicators": [
          {
            "name": "formatting_consistency_score",
            "value": 0.7511111111111113
          },
          {
            "name": "similarity_score",
            "value": 0.30014941084773206
          },
          {
            "name": "code_structure_score",
            "value": 0.17413793103448275
          },
          {
            "name": "ml_prediction_score",
            "value": 0.1
          }
        ]
      },
      "DOC4SAM_sol1.txt": {
        "file": "DOC4SAM_sol1.txt",
        "is_ai_generated": false,
        "technical_score": 22.05734960025703,
        "ai_likelihood": "5%",
        "risk_level": "MINIMAL RISK",
        "detailed_results": {
          "educational_patterns_score": 0.0,
          "domain_patterns_score": 0.0,
          "code_structure_score": 0.13088552915766738,
          "formatting_consistency_score": 0.7650000000000001,
          "similarity_score": 0.2809533331446009,
          "ml_prediction_score": 0.1,
          "overall_score": 0.2205734960025703
        },
        "top_indicators": [
          {
            "name": "formatting_consistency_score",
            "value": 0.7650000000000001
          },
          {
            "name": "similarity_score",
            "value": 0.2809533331446009
          },
          {
            "name": "code_structure_score",
            "value": 0.13088552915766738
          },
          {
            "name": "ml_prediction_score",
            "value": 0.1
          }
        ]
      },
      "DOC8SAM_sol1.txt": {
        "file": "DOC8SAM_sol1.txt",
        "is_ai_generated": false,
        "technical_score": 21.304159110033872,
        "ai_likelihood": "5%",
        "risk_level": "MINIMAL RISK",
        "detailed_results": {
          "educational_patterns_score": 0.0,
          "domain_patterns_score": 0.0,
          "code_structure_score": 0.06411827548803543,
          "formatting_consistency_score": 0.7704347826086958,
          "similarity_score": 0.28929316192914517,
          "ml_prediction_score": 0.1,
          "overall_score": 0.2130415911003387
        },
        "top_indicators": [
          {
            "name": "formatting_consistency_score",
            "value": 0.7704347826086958
          },
          {
            "name": "similarity_score",
            "value": 0.28929316192914517
          },
          {
            "name": "ml_prediction_score",
            "value": 0.1
          },
          {
            "name": "code_structure_score",
            "value": 0.06411827548803543
          }
        ]
      },
      "DOC1SAM_sol1.txt": {
        "file": "DOC1SAM_sol1.txt",
        "is_ai_generated": false,
        "technical_score": 29.72851017770899,
        "ai_likelihood": "20%",
        "risk_level": "MEDIUM RISK",
        "detailed_results": {
          "educational_patterns_score": 0.0,
          "domain_patterns_score": 0.0,
          "code_structure_score": 0.21581986143187065,
          "formatting_consistency_score": 0.6854545454545455,
          "similarity_score": 0.2704697037206375,
          "ml_prediction_score": 0.36,
          "overall_score": 0.2972851017770899
        },
        "top_indicators": [
          {
            "name": "formatting_consistency_score",
            "value": 0.6854545454545455
          },
          {
            "name": "ml_prediction_score",
            "value": 0.36
          },
          {
            "name": "similarity_score",
            "value": 0.2704697037206375
          },
          {
            "name": "code_structure_score",
            "value": 0.21581986143187065
          }
        ]
      }
    },
    "solution2": {
      "DOC6SAM_sol2.txt": {
        "file": "DOC6SAM_sol2.txt",
        "is_ai_generated": false,
        "technical_score": 25.848450085400586,
        "ai_likelihood": "20%",
        "risk_level": "MEDIUM RISK",
        "detailed_results": {
          "educational_patterns_score": 0.0,
          "domain_patterns_score": 0.0,
          "code_structure_score": 0.25789473684210523,
          "formatting_consistency_score": 0.7400000000000001,
          "similarity_score": 0.3040014516384502,
          "ml_prediction_score": 0.16,
          "overall_score": 0.25848450085400587
        },
        "top_indicators": [
          {
            "name": "formatting_consistency_score",
            "value": 0.7400000000000001
          },
          {
            "name": "similarity_score",
            "value": 0.3040014516384502
          },
          {
            "name": "code_structure_score",
            "value": 0.25789473684210523
          },
          {
            "name": "ml_prediction_score",
            "value": 0.16
          }
        ]
      },
      "DOC3SAM_sol2.txt": {
        "file": "DOC3SAM_sol2.txt",
        "is_ai_generated": false,
        "technical_score": 30.92156457628443,
        "ai_likelihood": "40%",
        "risk_level": "MEDIUM RISK",
        "detailed_results": {
          "educational_patterns_score": 0.0,
          "domain_patterns_score": 0.0,
          "code_structure_score": 0.3,
          "formatting_consistency_score": 0.718787878787879,
          "similarity_score": 0.3019873197233121,
          "ml_prediction_score": 0.32,
          "overall_score": 0.30921564576284427
        },
        "top_indicators": [
          {
            "name": "formatting_consistency_score",
            "value": 0.718787878787879
          },
          {
            "name": "ml_prediction_score",
            "value": 0.32
          },
          {
            "name": "similarity_score",
            "value": 0.3019873197233121
          },
          {
            "name": "code_structure_score",
            "value": 0.3
          }
        ]
      },
      "DOC5SAM_sol2.txt": {
        "file": "DOC5SAM_sol2.txt",
        "is_ai_generated": false,
        "technical_score": 25.120945728789323,
        "ai_likelihood": "20%",
        "risk_level": "MEDIUM RISK",
        "detailed_results": {
          "educational_patterns_score": 0.0,
          "domain_patterns_score": 0.0,
          "code_structure_score": 0.3,
          "formatting_consistency_score": 0.7600000000000001,
          "similarity_score": 0.31104728643946594,
          "ml_prediction_score": 0.1,
          "overall_score": 0.25120945728789323
        },
        "top_indicators": [
          {
            "name": "formatting_consistency_score",
            "value": 0.7600000000000001
          },
          {
            "name": "similarity_score",
            "value": 0.31104728643946594
          },
          {
            "name": "code_structure_score",
            "value": 0.3
          },
          {
            "name": "ml_prediction_score",
            "value": 0.1
          }
        ]
      },
      "DOC2SAM_sol2.txt": {
        "file": "DOC2SAM_sol2.txt",
        "is_ai_generated": false,
        "technical_score": 29.38419083891069,
        "ai_likelihood": "20%",
        "risk_level": "MEDIUM RISK",
        "detailed_results": {
          "educational_patterns_score": 0.0,
          "domain_patterns_score": 0.0,
          "code_structure_score": 0.3,
          "formatting_consistency_score": 0.7362962962962964,
          "similarity_score": 0.3019873197233121,
          "ml_prediction_score": 0.26,
          "overall_score": 0.2938419083891069
        },
        "top_indicators": [
          {
            "name": "formatting_consistency_score",
            "value": 0.7362962962962964
          },
          {
            "name": "similarity_score",
            "value": 0.3019873197233121
          },
          {
            "name": "code_structure_score",
            "value": 0.3
          },
          {
            "name": "ml_prediction_score",
            "value": 0.26
          }
        ]
      },
      "DOC7SAM_sol2.txt": {
        "file": "DOC7SAM_sol2.txt",
        "is_ai_generated": false,
        "technical_score": 35.52633630142124,
        "ai_likelihood": "60%",
        "risk_level": "HIGH RISK",
        "detailed_results": {
          "educational_patterns_score": 0.0,
          "domain_patterns_score": 0.0,
          "code_structure_score": 0.6,
          "formatting_consistency_score": 0.7367741935483872,
          "similarity_score": 0.29373616990977114,
          "ml_prediction_score": 0.32,
          "overall_score": 0.35526336301421235
        },
        "top_indicators": [
          {
            "name": "formatting_consistency_score",
            "value": 0.7367741935483872
          },
          {
            "name": "code_structure_score",
            "value": 0.6
          },
          {
            "name": "ml_prediction_score",
            "value": 0.32
          },
          {
            "name": "similarity_score",
            "value": 0.29373616990977114
          }
        ]
      },
      "DOC4SAM_sol2.txt": {
        "file": "DOC4SAM_sol2.txt",
        "is_ai_generated": false,
        "technical_score": 26.534622757561475,
        "ai_likelihood": "20%",
        "risk_level": "MEDIUM RISK",
        "detailed_results": {
          "educational_patterns_score": 0.0,
          "domain_patterns_score": 0.0,
          "code_structure_score": 0.3,
          "formatting_consistency_score": 0.7490909090909093,
          "similarity_score": 0.29991295605989204,
          "ml_prediction_score": 0.16,
          "overall_score": 0.26534622757561477
        },
        "top_indicators": [
          {
            "name": "formatting_consistency_score",
            "value": 0.7490909090909093
          },
          {
            "name": "code_structure_score",
            "value": 0.3
          },
          {
            "name": "similarity_score",
            "value": 0.29991295605989204
          },
          {
            "name": "ml_prediction_score",
            "value": 0.16
          }
        ]
      },
      "DOC1SAM_sol2.txt": {
        "file": "DOC1SAM_sol2.txt",
        "is_ai_generated": false,
        "technical_score": 26.534622757561475,
        "ai_likelihood": "20%",
        "risk_level": "MEDIUM RISK",
        "detailed_results": {
          "educational_patterns_score": 0.0,
          "domain_patterns_score": 0.0,
          "code_structure_score": 0.3,
          "formatting_consistency_score": 0.7490909090909093,
          "similarity_score": 0.29991295605989204,
          "ml_prediction_score": 0.16,
          "overall_score": 0.26534622757561477
        },
        "top_indicators": [
          {
            "name": "formatting_consistency_score",
            "value": 0.7490909090909093
          },
          {
            "name": "code_structure_score",
            "value": 0.3
          },
          {
            "name": "similarity_score",
            "value": 0.29991295605989204
          },
          {
            "name": "ml_prediction_score",
            "value": 0.16
          }
        ]
      },
      "DOC8SAM_sol2.txt": {
        "file": "DOC8SAM_sol2.txt",
        "is_ai_generated": false,
        "technical_score": 26.652905373530505,
        "ai_likelihood": "20%",
        "risk_level": "MEDIUM RISK",
        "detailed_results": {
          "educational_patterns_score": 0.0,
          "domain_patterns_score": 0.0,
          "code_structure_score": 0.3,
          "formatting_consistency_score": 0.7520000000000001,
          "similarity_score": 0.3036452686765254,
          "ml_prediction_score": 0.16,
          "overall_score": 0.26652905373530505
        },
        "top_indicators": [
          {
            "name": "formatting_consistency_score",
            "value": 0.7520000000000001
          },
          {
            "name": "similarity_score",
            "value": 0.3036452686765254
          },
          {
            "name": "code_structure_score",
            "value": 0.3
          },
          {
            "name": "ml_prediction_score",
            "value": 0.16
          }
        ]
      }
    },
    "solution3": {
      "DOC6SAM_sol3.txt": {
        "file": "DOC6SAM_sol3.txt",
        "is_ai_generated": false,
        "technical_score": 33.12435079329178,
        "ai_likelihood": "40%",
        "risk_level": "MEDIUM RISK",
        "detailed_results": {
          "educational_patterns_score": 0.0,
          "domain_patterns_score": 0.0,
          "code_structure_score": 0.2022848034006376,
          "formatting_consistency_score": 0.7374358974358975,
          "similarity_score": 0.3214270140371875,
          "ml_prediction_score": 0.42,
          "overall_score": 0.3312435079329178
        },
        "top_indicators": [
          {
            "name": "formatting_consistency_score",
            "value": 0.7374358974358975
          },
          {
            "name": "ml_prediction_score",
            "value": 0.42
          },
          {
            "name": "similarity_score",
            "value": 0.3214270140371875
          },
          {
            "name": "code_structure_score",
            "value": 0.2022848034006376
          }
        ]
      },
      "DOC3SAM_sol3.txt": {
        "file": "DOC3SAM_sol3.txt",
        "is_ai_generated": false,
        "technical_score": 30.94810098399947,
        "ai_likelihood": "40%",
        "risk_level": "MEDIUM RISK",
        "detailed_results": {
          "educational_patterns_score": 0.0,
          "domain_patterns_score": 0.0,
          "code_structure_score": 0.047398843930635835,
          "formatting_consistency_score": 0.7377777777777779,
          "similarity_score": 0.2385225829186635,
          "ml_prediction_score": 0.48,
          "overall_score": 0.3094810098399947
        },
        "top_indicators": [
          {
            "name": "formatting_consistency_score",
            "value": 0.7377777777777779
          },
          {
            "name": "ml_prediction_score",
            "value": 0.48
          },
          {
            "name": "similarity_score",
            "value": 0.2385225829186635
          }
        ]
      },
      "DOC5SAM_sol3.txt": {
        "file": "DOC5SAM_sol3.txt",
        "is_ai_generated": false,
        "technical_score": 33.51346021284009,
        "ai_likelihood": "40%",
        "risk_level": "MEDIUM RISK",
        "detailed_results": {
          "educational_patterns_score": 0.0,
          "domain_patterns_score": 0.0,
          "code_structure_score": 0.20072164948453605,
          "formatting_consistency_score": 0.7476923076923079,
          "similarity_score": 0.3343625427593713,
          "ml_prediction_score": 0.42,
          "overall_score": 0.33513460212840085
        },
        "top_indicators": [
          {
            "name": "formatting_consistency_score",
            "value": 0.7476923076923079
          },
          {
            "name": "ml_prediction_score",
            "value": 0.42
          },
          {
            "name": "similarity_score",
            "value": 0.3343625427593713
          },
          {
            "name": "code_structure_score",
            "value": 0.20072164948453605
          }
        ]
      },
      "DOC2SAM_sol3.txt": {
        "file": "DOC2SAM_sol3.txt",
        "is_ai_generated": false,
        "technical_score": 27.35043496878442,
        "ai_likelihood": "20%",
        "risk_level": "MEDIUM RISK",
        "detailed_results": {
          "educational_patterns_score": 0.0,
          "domain_patterns_score": 0.0,
          "code_structure_score": 0.0631578947368421,
          "formatting_consistency_score": 0.7557894736842107,
          "similarity_score": 0.2733112221234316,
          "ml_prediction_score": 0.32,
          "overall_score": 0.2735043496878442
        },
        "top_indicators": [
          {
            "name": "formatting_consistency_score",
            "value": 0.7557894736842107
          },
          {
            "name": "ml_prediction_score",
            "value": 0.32
          },
          {
            "name": "similarity_score",
            "value": 0.2733112221234316
          },
          {
            "name": "code_structure_score",
            "value": 0.0631578947368421
          }
        ]
      },
      "DOC7SAM_sol3.txt": {
        "file": "DOC7SAM_sol3.txt",
        "is_ai_generated": false,
        "technical_score": 31.603440800942156,
        "ai_likelihood": "40%",
        "risk_level": "MEDIUM RISK",
        "detailed_results": {
          "educational_patterns_score": 0.0,
          "domain_patterns_score": 0.0,
          "code_structure_score": 0.19572490706319703,
          "formatting_consistency_score": 0.7500000000000001,
          "similarity_score": 0.24087835974970995,
          "ml_prediction_score": 0.42,
          "overall_score": 0.31603440800942156
        },
        "top_indicators": [
          {
            "name": "formatting_consistency_score",
            "value": 0.7500000000000001
          },
          {
            "name": "ml_prediction_score",
            "value": 0.42
          },
          {
            "name": "similarity_score",
            "value": 0.24087835974970995
          },
          {
            "name": "code_structure_score",
            "value": 0.19572490706319703
          }
        ]
      },
      "DOC4SAM_sol3.txt": {
        "file": "DOC4SAM_sol3.txt",
        "is_ai_generated": false,
        "technical_score": 26.530393840860512,
        "ai_likelihood": "20%",
        "risk_level": "MEDIUM RISK",
        "detailed_results": {
          "educational_patterns_score": 0.0,
          "domain_patterns_score": 0.0,
          "code_structure_score": 0.05934861278648976,
          "formatting_consistency_score": 0.752820512820513,
          "similarity_score": 0.3273928478377735,
          "ml_prediction_score": 0.26,
          "overall_score": 0.2653039384086051
        },
        "top_indicators": [
          {
            "name": "formatting_consistency_score",
            "value": 0.752820512820513
          },
          {
            "name": "similarity_score",
            "value": 0.3273928478377735
          },
          {
            "name": "ml_prediction_score",
            "value": 0.26
          },
          {
            "name": "code_structure_score",
            "value": 0.05934861278648976
          }
        ]
      },
      "DOC1SAM_sol3.txt": {
        "file": "DOC1SAM_sol3.txt",
        "is_ai_generated": false,
        "technical_score": 29.06557681349296,
        "ai_likelihood": "20%",
        "risk_level": "MEDIUM RISK",
        "detailed_results": {
          "educational_patterns_score": 0.0,
          "domain_patterns_score": 0.0,
          "code_structure_score": 0.21870838881491345,
          "formatting_consistency_score": 0.7505263157894738,
          "similarity_score": 0.3363528122213577,
          "ml_prediction_score": 0.26,
          "overall_score": 0.2906557681349296
        },
        "top_indicators": [
          {
            "name": "formatting_consistency_score",
            "value": 0.7505263157894738
          },
          {
            "name": "similarity_score",
            "value": 0.3363528122213577
          },
          {
            "name": "ml_prediction_score",
            "value": 0.26
          },
          {
            "name": "code_structure_score",
            "value": 0.21870838881491345
          }
        ]
      },
      "DOC8SAM_sol3.txt": {
        "file": "DOC8SAM_sol3.txt",
        "is_ai_generated": false,
        "technical_score": 28.081534349219105,
        "ai_likelihood": "20%",
        "risk_level": "MEDIUM RISK",
        "detailed_results": {
          "educational_patterns_score": 0.0,
          "domain_patterns_score": 0.0,
          "code_structure_score": 0.20871121718377086,
          "formatting_consistency_score": 0.7400000000000001,
          "similarity_score": 0.30254330457312695,
          "ml_prediction_score": 0.26,
          "overall_score": 0.28081534349219106
        },
        "top_indicators": [
          {
            "name": "formatting_consistency_score",
            "value": 0.7400000000000001
          },
          {
            "name": "similarity_score",
            "value": 0.30254330457312695
          },
          {
            "name": "ml_prediction_score",
            "value": 0.26
          },
          {
            "name": "code_structure_score",
            "value": 0.20871121718377086
          }
        ]
      }
    },
    "solution4": {
      "DOC3SAM_sol4.txt": {
        "file": "DOC3SAM_sol4.txt",
        "is_ai_generated": false,
        "technical_score": 31.594339225328678,
        "ai_likelihood": "40%",
        "risk_level": "MEDIUM RISK",
        "detailed_results": {
          "educational_patterns_score": 0.0,
          "domain_patterns_score": 0.0,
          "code_structure_score": 0.3913145539906103,
          "formatting_consistency_score": 0.7040000000000002,
          "similarity_score": 0.30823104577347604,
          "ml_prediction_score": 0.3,
          "overall_score": 0.31594339225328677
        },
        "top_indicators": [
          {
            "name": "formatting_consistency_score",
            "value": 0.7040000000000002
          },
          {
            "name": "code_structure_score",
            "value": 0.3913145539906103
          },
          {
            "name": "similarity_score",
            "value": 0.30823104577347604
          },
          {
            "name": "ml_prediction_score",
            "value": 0.3
          }
        ]
      },
      "DOC6SAM_sol4.txt": {
        "file": "DOC6SAM_sol4.txt",
        "is_ai_generated": false,
        "technical_score": 25.738473815600376,
        "ai_likelihood": "20%",
        "risk_level": "MEDIUM RISK",
        "detailed_results": {
          "educational_patterns_score": 0.0,
          "domain_patterns_score": 0.0,
          "code_structure_score": 0.3,
          "formatting_consistency_score": 0.6933333333333335,
          "similarity_score": 0.33192369078001877,
          "ml_prediction_score": 0.14,
          "overall_score": 0.25738473815600377
        },
        "top_indicators": [
          {
            "name": "formatting_consistency_score",
            "value": 0.6933333333333335
          },
          {
            "name": "similarity_score",
            "value": 0.33192369078001877
          },
          {
            "name": "code_structure_score",
            "value": 0.3
          },
          {
            "name": "ml_prediction_score",
            "value": 0.14
          }
        ]
      },
      "DOC5SAM_sol4.txt": {
        "file": "DOC5SAM_sol4.txt",
        "is_ai_generated": false,
        "technical_score": 25.902076058871426,
        "ai_likelihood": "20%",
        "risk_level": "MEDIUM RISK",
        "detailed_results": {
          "educational_patterns_score": 0.0,
          "domain_patterns_score": 0.0,
          "code_structure_score": 0.31340425531914895,
          "formatting_consistency_score": 0.6933333333333335,
          "similarity_score": 0.33005061145420955,
          "ml_prediction_score": 0.14,
          "overall_score": 0.25902076058871426
        },
        "top_indicators": [
          {
            "name": "formatting_consistency_score",
            "value": 0.6933333333333335
          },
          {
            "name": "similarity_score",
            "value": 0.33005061145420955
          },
          {
            "name": "code_structure_score",
            "value": 0.31340425531914895
          },
          {
            "name": "ml_prediction_score",
            "value": 0.14
          }
        ]
      },
      "DOC7SAM_sol4.txt": {
        "file": "DOC7SAM_sol4.txt",
        "is_ai_generated": false,
        "technical_score": 25.77496490848038,
        "ai_likelihood": "20%",
        "risk_level": "MEDIUM RISK",
        "detailed_results": {
          "educational_patterns_score": 0.0,
          "domain_patterns_score": 0.0,
          "code_structure_score": 0.2919642857142857,
          "formatting_consistency_score": 0.6933333333333335,
          "similarity_score": 0.33977503113830454,
          "ml_prediction_score": 0.14,
          "overall_score": 0.2577496490848038
        },
        "top_indicators": [
          {
            "name": "formatting_consistency_score",
            "value": 0.6933333333333335
          },
          {
            "name": "similarity_score",
            "value": 0.33977503113830454
          },
          {
            "name": "code_structure_score",
            "value": 0.2919642857142857
          },
          {
            "name": "ml_prediction_score",
            "value": 0.14
          }
        ]
      },
      "DOC2SAM_sol4.txt": {
        "file": "DOC2SAM_sol4.txt",
        "is_ai_generated": false,
        "technical_score": 30.587539101233368,
        "ai_likelihood": "40%",
        "risk_level": "MEDIUM RISK",
        "detailed_results": {
          "educational_patterns_score": 0.0,
          "domain_patterns_score": 0.0,
          "code_structure_score": 0.16520914011810894,
          "formatting_consistency_score": 0.7365517241379311,
          "similarity_score": 0.3130563068696385,
          "ml_prediction_score": 0.36,
          "overall_score": 0.3058753910123337
        },
        "top_indicators": [
          {
            "name": "formatting_consistency_score",
            "value": 0.7365517241379311
          },
          {
            "name": "ml_prediction_score",
            "value": 0.36
          },
          {
            "name": "similarity_score",
            "value": 0.3130563068696385
          },
          {
            "name": "code_structure_score",
            "value": 0.16520914011810894
          }
        ]
      },
      "DOC1SAM_sol4.txt": {
        "file": "DOC1SAM_sol4.txt",
        "is_ai_generated": false,
        "technical_score": 31.04555868668195,
        "ai_likelihood": "40%",
        "risk_level": "MEDIUM RISK",
        "detailed_results": {
          "educational_patterns_score": 0.0,
          "domain_patterns_score": 0.0,
          "code_structure_score": 0.3433199390345121,
          "formatting_consistency_score": 0.7089655172413795,
          "similarity_score": 0.3130638421271788,
          "ml_prediction_score": 0.3,
          "overall_score": 0.3104555868668195
        },
        "top_indicators": [
          {
            "name": "formatting_consistency_score",
            "value": 0.7089655172413795
          },
          {
            "name": "code_structure_score",
            "value": 0.3433199390345121
          },
          {
            "name": "similarity_score",
            "value": 0.3130638421271788
          },
          {
            "name": "ml_prediction_score",
            "value": 0.3
          }
        ]
      },
      "DOC8SAM_sol4.txt": {
        "file": "DOC8SAM_sol4.txt",
        "is_ai_generated": false,
        "technical_score": 25.348802796741953,
        "ai_likelihood": "20%",
        "risk_level": "MEDIUM RISK",
        "detailed_results": {
          "educational_patterns_score": 0.0,
          "domain_patterns_score": 0.0,
          "code_structure_score": 0.27389791183294665,
          "formatting_consistency_score": 0.6933333333333335,
          "similarity_score": 0.3320167059623876,
          "ml_prediction_score": 0.14,
          "overall_score": 0.25348802796741954
        },
        "top_indicators": [
          {
            "name": "formatting_consistency_score",
            "value": 0.6933333333333335
          },
          {
            "name": "similarity_score",
            "value": 0.3320167059623876
          },
          {
            "name": "code_structure_score",
            "value": 0.27389791183294665
          },
          {
            "name": "ml_prediction_score",
            "value": 0.14
          }
        ]
      },
      "DOC4SAM_sol4.txt": {
        "file": "DOC4SAM_sol4.txt",
        "is_ai_generated": false,
        "technical_score": 28.9132680506343,
        "ai_likelihood": "20%",
        "risk_level": "MEDIUM RISK",
        "detailed_results": {
          "educational_patterns_score": 0.0,
          "domain_patterns_score": 0.0,
          "code_structure_score": 0.44189189189189193,
          "formatting_consistency_score": 0.7066666666666668,
          "similarity_score": 0.37424448361279605,
          "ml_prediction_score": 0.14,
          "overall_score": 0.289132680506343
        },
        "top_indicators": [
          {
            "name": "formatting_consistency_score",
            "value": 0.7066666666666668
          },
          {
            "name": "code_structure_score",
            "value": 0.44189189189189193
          },
          {
            "name": "similarity_score",
            "value": 0.37424448361279605
          },
          {
            "name": "ml_prediction_score",
            "value": 0.14
          }
        ]
      }
    }
  },
  "web_plagiarism": {
    "solution1": {
      "DOC6SAM_sol1.txt": {
        "file": "/Users/guptasahaj01/Downloads/code_checker/Processing/core_backend/sessions/session_e9a631be802648d7a51a6b72d284ab5e/results/organized/solution1/DOC6SAM_sol1.txt",
        "language": "cpp",
        "timestamp": "2025-04-14T16:00:27.691559",
        "queries_used": [
          "\"longestSubstringWithKUnique\" function cpp example site:github.com OR site:stackoverflow.com OR site:geeksforgeeks.org OR site:tutorialspoint.com",
          "\"for (int end = 0; end < s.length(); ++end) {\nm[s[end]]++; // update count\nwindow.push_back(s[end]); // add to window\n// reduce size if too many unique chars\nwhile (m.size() > k) {\nm[window.front()]--; // reduce frequency\nif (m[window.front()] == 0) m.erase(window.front()); // remove if count zero\nwindow.pop_front(); // move left\nstart++; // increment start pointer\n}\" cpp example site:github.com OR site:stackoverflow.com OR site:geeksforgeeks.org OR site:tutorialspoint.com",
          "\"while (m.size() > k) {\nm[window.front()]--; // reduce frequency\nif (m[window.front()] == 0) m.erase(window.front()); // remove if count zero\nwindow.pop_front(); // move left\nstart++; // increment start pointer\n}\" cpp example site:github.com OR site:stackoverflow.com OR site:geeksforgeeks.org OR site:tutorialspoint.com"
        ],
        "results": [
          {
            "title": "cudaDeviceSynchronize() takes time - CUDA Programming ...",
            "link": "https://forums.developer.nvidia.com/t/cudadevicesynchronize-takes-time/260647",
            "snippet": "I've written a code in C++/Cuda. I think something is wrong with the cudaDeviceSynchronize(); that I'm using in my program.",
            "query": "\"for (int end = 0; end < s.length(); ++end) {\nm[s[end]]++; // update count\nwindow.push_back(s[end]); // add to window\n// reduce size if too many unique chars\nwhile (m.size() > k) {\nm[window.front()]--; // reduce frequency\nif (m[window.front()] == 0) m.erase(window.front()); // remove if count zero\nwindow.pop_front(); // move left\nstart++; // increment start pointer\n}\" cpp example  OR  OR  OR code example",
            "query_priority": 0.5,
            "initial_score": 0.0,
            "similarity_score": 0.3194484264406719,
            "is_plagiarism": true
          },
          {
            "title": "cv::Mat Class Reference",
            "link": "https://docs.opencv.org/4.x/d3/d63/classcv_1_1Mat.html",
            "snippet": "The Mat::clone() method can be used to get a full (deep) copy of the array when you need it. Construct a header for a part of another array. It can be a single ...",
            "query": "\"for (int end = 0; end < s.length(); ++end) {\nm[s[end]]++; // update count\nwindow.push_back(s[end]); // add to window\n// reduce size if too many unique chars\nwhile (m.size() > k) {\nm[window.front()]--; // reduce frequency\nif (m[window.front()] == 0) m.erase(window.front()); // remove if count zero\nwindow.pop_front(); // move left\nstart++; // increment start pointer\n}\" cpp example  OR  OR  OR code example",
            "query_priority": 0.5,
            "initial_score": 0.0,
            "similarity_score": 0.23645340122312872,
            "is_plagiarism": false
          },
          {
            "title": "In a \"i < vector.size()\" loop condition, is size() called each ...",
            "link": "https://stackoverflow.com/questions/3901630/in-a-i-vector-size-loop-condition-is-size-called-each-iteration",
            "snippet": "In theory, it is called each time, since a for loop: for(initialization; condition; increment) body;. is expanded to something like",
            "query": "\"for (int end = 0; end < s.length(); ++end) {\nm[s[end]]++; // update count\nwindow.push_back(s[end]); // add to window\n// reduce size if too many unique chars\nwhile (m.size() > k) {\nm[window.front()]--; // reduce frequency\nif (m[window.front()] == 0) m.erase(window.front()); // remove if count zero\nwindow.pop_front(); // move left\nstart++; // increment start pointer\n}\" cpp example  OR  OR  OR code example",
            "query_priority": 0.5,
            "initial_score": 0.0,
            "similarity_score": 0.07793873596410707,
            "is_plagiarism": false
          },
          {
            "title": "Sliding Window Algorithm Code Template",
            "link": "https://labuladong.online/algo/en/essential-technique/sliding-window-framework/",
            "snippet": "The sliding window technique is a fast-slow pointer technique where two pointers move in tandem, creating a window that contains the elements between them.",
            "query": "\"for (int end = 0; end < s.length(); ++end) {\nm[s[end]]++; // update count\nwindow.push_back(s[end]); // add to window\n// reduce size if too many unique chars\nwhile (m.size() > k) {\nm[window.front()]--; // reduce frequency\nif (m[window.front()] == 0) m.erase(window.front()); // remove if count zero\nwindow.pop_front(); // move left\nstart++; // increment start pointer\n}\" cpp example  OR  OR  OR code example",
            "query_priority": 0.5,
            "initial_score": 0.0,
            "similarity_score": 0.06178708310345056,
            "is_plagiarism": false
          },
          {
            "title": "C++ Core Guidelines",
            "link": "https://isocpp.github.io/CppCoreGuidelines/CppCoreGuidelines",
            "snippet": "The C++ Core Guidelines are a set of tried-and-true guidelines, rules, and best practices about coding in C++.",
            "query": "\"for (int end = 0; end < s.length(); ++end) {\nm[s[end]]++; // update count\nwindow.push_back(s[end]); // add to window\n// reduce size if too many unique chars\nwhile (m.size() > k) {\nm[window.front()]--; // reduce frequency\nif (m[window.front()] == 0) m.erase(window.front()); // remove if count zero\nwindow.pop_front(); // move left\nstart++; // increment start pointer\n}\" cpp example  OR  OR  OR code example",
            "query_priority": 0.5,
            "initial_score": 0.0,
            "similarity_score": 0.049999999999999996,
            "is_plagiarism": false
          },
          {
            "title": "Vec in std",
            "link": "https://doc.rust-lang.org/std/vec/struct.Vec.html",
            "snippet": "This method is allowed to allocate for more elements than capacity . If capacity is zero, the vector will not allocate. It is important to note that although ...",
            "query": "\"for (int end = 0; end < s.length(); ++end) {\nm[s[end]]++; // update count\nwindow.push_back(s[end]); // add to window\n// reduce size if too many unique chars\nwhile (m.size() > k) {\nm[window.front()]--; // reduce frequency\nif (m[window.front()] == 0) m.erase(window.front()); // remove if count zero\nwindow.pop_front(); // move left\nstart++; // increment start pointer\n}\" cpp example  OR  OR  OR code example",
            "query_priority": 0.5,
            "initial_score": 0.0,
            "similarity_score": 0.049999999999999996,
            "is_plagiarism": false
          },
          {
            "title": "25 Rewriting R code in C++ - Advanced R - Hadley Wickham",
            "link": "https://adv-r.hadley.nz/rcpp.html",
            "snippet": "In this chapter you'll learn how to improve performance by rewriting key functions in C++. This magic comes by way of the Rcpp package119 (with key ...",
            "query": "\"for (int end = 0; end < s.length(); ++end) {\nm[s[end]]++; // update count\nwindow.push_back(s[end]); // add to window\n// reduce size if too many unique chars\nwhile (m.size() > k) {\nm[window.front()]--; // reduce frequency\nif (m[window.front()] == 0) m.erase(window.front()); // remove if count zero\nwindow.pop_front(); // move left\nstart++; // increment start pointer\n}\" cpp example  OR  OR  OR code example",
            "query_priority": 0.5,
            "initial_score": 0.0,
            "similarity_score": 0.049999999999999996,
            "is_plagiarism": false
          },
          {
            "title": "paq6-emilcont-jackdamarioum.cpp",
            "link": "http://mattmahoney.net/dc///paq6-emilcont-jackdamarioum.cpp",
            "snippet": "The data is compressed as if all the files were concatenated into one long string. PAQ5 uses predictive arithmetic coding. The string, y, is compressed by ...",
            "query": "\"for (int end = 0; end < s.length(); ++end) {\nm[s[end]]++; // update count\nwindow.push_back(s[end]); // add to window\n// reduce size if too many unique chars\nwhile (m.size() > k) {\nm[window.front()]--; // reduce frequency\nif (m[window.front()] == 0) m.erase(window.front()); // remove if count zero\nwindow.pop_front(); // move left\nstart++; // increment start pointer\n}\" cpp example  OR  OR  OR code example",
            "query_priority": 0.5,
            "initial_score": 0.0,
            "similarity_score": 0.049999999999999996,
            "is_plagiarism": false
          },
          {
            "title": "c++ - How do I iterate over the words of a string?",
            "link": "https://stackoverflow.com/questions/3616605",
            "snippet": "I like to use the boost/regex methods for this task since they provide maximum flexibility for specifying the splitting criteria.",
            "query": "\"for (int end = 0; end < s.length(); ++end) {\nm[s[end]]++; // update count\nwindow.push_back(s[end]); // add to window\n// reduce size if too many unique chars\nwhile (m.size() > k) {\nm[window.front()]--; // reduce frequency\nif (m[window.front()] == 0) m.erase(window.front()); // remove if count zero\nwindow.pop_front(); // move left\nstart++; // increment start pointer\n}\" cpp example  OR  OR  OR code example",
            "query_priority": 0.5,
            "initial_score": 0.0,
            "similarity_score": 0.049999999999999996,
            "is_plagiarism": false
          },
          {
            "title": "Data Structures and Algorithms: 20 Problem-Solving ...",
            "link": "https://hackernoon.com/data-structures-and-algorithms-20-problem-solving-techniques-qz1q3z1o",
            "snippet": "This is the article I wish I had read when I started coding. I will dive deep into 20 problem-solving techniques that you must know to excel ...",
            "query": "\"for (int end = 0; end < s.length(); ++end) {\nm[s[end]]++; // update count\nwindow.push_back(s[end]); // add to window\n// reduce size if too many unique chars\nwhile (m.size() > k) {\nm[window.front()]--; // reduce frequency\nif (m[window.front()] == 0) m.erase(window.front()); // remove if count zero\nwindow.pop_front(); // move left\nstart++; // increment start pointer\n}\" cpp example  OR  OR  OR code example",
            "query_priority": 0.5,
            "initial_score": 0.0,
            "similarity_score": 0.049999999999999996,
            "is_plagiarism": false
          }
        ],
        "total_results": 10,
        "plagiarism_detected": true,
        "plagiarism_results": [
          {
            "title": "cudaDeviceSynchronize() takes time - CUDA Programming ...",
            "link": "https://forums.developer.nvidia.com/t/cudadevicesynchronize-takes-time/260647",
            "snippet": "I've written a code in C++/Cuda. I think something is wrong with the cudaDeviceSynchronize(); that I'm using in my program.",
            "query": "\"for (int end = 0; end < s.length(); ++end) {\nm[s[end]]++; // update count\nwindow.push_back(s[end]); // add to window\n// reduce size if too many unique chars\nwhile (m.size() > k) {\nm[window.front()]--; // reduce frequency\nif (m[window.front()] == 0) m.erase(window.front()); // remove if count zero\nwindow.pop_front(); // move left\nstart++; // increment start pointer\n}\" cpp example  OR  OR  OR code example",
            "query_priority": 0.5,
            "initial_score": 0.0,
            "similarity_score": 0.3194484264406719,
            "is_plagiarism": true
          }
        ],
        "similarity_threshold": 0.3,
        "matching_sources": [
          "https://forums.developer.nvidia.com/t/cudadevicesynchronize-takes-time/260647"
        ]
      },
      "DOC3SAM_sol1.txt": {
        "file": "/Users/guptasahaj01/Downloads/code_checker/Processing/core_backend/sessions/session_e9a631be802648d7a51a6b72d284ab5e/results/organized/solution1/DOC3SAM_sol1.txt",
        "language": "cpp",
        "timestamp": "2025-04-14T16:00:28.524216",
        "queries_used": [
          "\"longestSubstringWithKUnique\" function cpp example site:github.com OR site:stackoverflow.com OR site:geeksforgeeks.org OR site:tutorialspoint.com",
          "\"while (right < s.size()) {\nif (m[s[right]] == 0) uniqueCount++;\nm[s[right]]++;\nwhile (uniqueCount > k) {\nm[s[left]]--;\nif (m[s[left]] == 0) {\nm.erase(s[left]);\nuniqueCount--;\n}\" cpp example site:github.com OR site:stackoverflow.com OR site:geeksforgeeks.org OR site:tutorialspoint.com",
          "\"int main() { string s = \"aabacbebebe\"; int k = 3; cout << longestSubstringWithKUnique(s, k) << endl; return 0; }\" cpp example site:github.com OR site:stackoverflow.com OR site:geeksforgeeks.org OR site:tutorialspoint.com"
        ],
        "results": [
          {
            "title": "Longest substring with k unique characters",
            "link": "https://www.geeksforgeeks.org/find-the-longest-substring-with-k-unique-characters-in-a-given-string/",
            "snippet": "A straightforward approach is to generate all substrings and check if each contains exactly k unique characters.",
            "query": "\"int main() { string s = \"aabacbebebe\"; int k = 3; cout << longestSubstringWithKUnique(s, k) << endl; return 0; }\" cpp example site:github.com OR site:stackoverflow.com OR site:geeksforgeeks.org OR site:tutorialspoint.com",
            "query_priority": 0.56,
            "initial_score": 0.0,
            "similarity_score": 0.049999999999999996,
            "is_plagiarism": false
          }
        ],
        "total_results": 1,
        "plagiarism_detected": false,
        "plagiarism_results": [],
        "similarity_threshold": 0.3,
        "matching_sources": []
      },
      "DOC5SAM_sol1.txt": {
        "file": "/Users/guptasahaj01/Downloads/code_checker/Processing/core_backend/sessions/session_e9a631be802648d7a51a6b72d284ab5e/results/organized/solution1/DOC5SAM_sol1.txt",
        "language": "cpp",
        "timestamp": "2025-04-14T16:02:48.978415",
        "queries_used": [
          "\"class CharWindow { unordered_map<char, int> counts; public: void add(char c) { counts[c]++; } void remove(char c) { counts[c]--; if (counts[c]\" cpp example site:github.com OR site:stackoverflow.com OR site:geeksforgeeks.org OR site:tutorialspoint.com",
          "\"CharWindow\" class cpp example site:github.com OR site:stackoverflow.com OR site:geeksforgeeks.org OR site:tutorialspoint.com",
          "\"class CharWindow\" cpp example site:github.com OR site:stackoverflow.com OR site:geeksforgeeks.org OR site:tutorialspoint.com"
        ],
        "results": [
          {
            "title": "Code Errors - unordered_map program - C++ Forum",
            "link": "https://cplusplus.com/forum/beginner/250121/",
            "snippet": "To use operator[], the unordered_map must be non-const (it inserts the key into the map if the key does not exist\"). Instead, we can use at() on the const ...",
            "query": "\"class CharWindow { unordered_map<char, int> counts; public: void add(char c) { counts[c]++; } void remove(char c) { counts[c]--; if (counts[c]\" cpp example  OR  OR  OR code example",
            "query_priority": 0.7000000000000001,
            "initial_score": 0.0,
            "similarity_score": 0.33423234898723625,
            "is_plagiarism": true
          },
          {
            "title": "Borland\u00ae ObjectWindows",
            "link": "http://bitsavers.informatik.uni-stuttgart.de/pdf/borland/borland_C++/Borland_ObjectWindows_Version_2.5_Programmers_Guide_1994.pdf",
            "snippet": "... charWindow->GetOcRemView(); if (tpl == &worksheetLink) (. II Create TOleWorksheetWindow. 358 ObjectWindows Programmer's Guide. Page 374. II and return ...",
            "query": "\"CharWindow\" class cpp example  OR  OR  OR code example",
            "query_priority": 0.7000000000000001,
            "initial_score": 0.0,
            "similarity_score": 0.33167069496290524,
            "is_plagiarism": true
          },
          {
            "title": "Borland\u00ae ObjectWindows",
            "link": "https://bitsavers.org/pdf/borland/borland_C++/Borland_ObjectWindows_Version_2.5_Programmers_Guide_1994.pdf",
            "snippet": "... charWindow->GetOcRemView(); if (tpl == &worksheetLink) (. II Create TOleWorksheetWindow. 358 ObjectWindows Programmer's Guide. Page 374. II and return ...",
            "query": "\"CharWindow\" class cpp example  OR  OR  OR code example",
            "query_priority": 0.7000000000000001,
            "initial_score": 0.0,
            "similarity_score": 0.33167069496290524,
            "is_plagiarism": true
          },
          {
            "title": "Convert filesystem::path into char* on windows - c++",
            "link": "https://stackoverflow.com/questions/54109159/convert-filesystempath-into-char-on-windows",
            "snippet": "You can use the *string() and generic_*string() member functions of the std::filesystem::path object to convert the path into either a native or a generic (ie, ...",
            "query": "\"class CharWindow\" cpp example site:github.com OR site:stackoverflow.com OR site:geeksforgeeks.org OR site:tutorialspoint.com",
            "query_priority": 0.7,
            "initial_score": 0.0,
            "similarity_score": 0.3261375359470292,
            "is_plagiarism": true
          },
          {
            "title": "README.md - MartinStokroos/TrueRMS",
            "link": "https://github.com/MartinStokroos/TrueRMS/blob/master/README.md",
            "snippet": "This repository contains the TrueRMS C++ library for Arduino. With this library it is possible to calculate the average value and the rms (root mean square) ...",
            "query": "\"class CharWindow\" cpp example site:github.com OR site:stackoverflow.com OR site:geeksforgeeks.org OR site:tutorialspoint.com",
            "query_priority": 0.7,
            "initial_score": 0.0,
            "similarity_score": 0.3261375359470292,
            "is_plagiarism": true
          },
          {
            "title": "make sounds (beep) with c++",
            "link": "https://stackoverflow.com/questions/4060601/make-sounds-beep-with-c",
            "snippet": "Beep() function plays sound via speakers, not through motherboard's physical buzzer. According to microsoft website:",
            "query": "\"class CharWindow\" cpp example site:github.com OR site:stackoverflow.com OR site:geeksforgeeks.org OR site:tutorialspoint.com",
            "query_priority": 0.7,
            "initial_score": 0.0,
            "similarity_score": 0.3261375359470292,
            "is_plagiarism": true
          },
          {
            "title": "Generate a list of strings with a sliding window using ...",
            "link": "https://stackoverflow.com/questions/8408117/generate-a-list-of-strings-with-a-sliding-window-using-itertools-yield-and-ite",
            "snippet": "I'm trying to generate a sliding window function in Python. I figured out how to do it but not all inside the function. itertools, yield, and iter() are ...",
            "query": "\"class CharWindow\" cpp example site:github.com OR site:stackoverflow.com OR site:geeksforgeeks.org OR site:tutorialspoint.com",
            "query_priority": 0.7,
            "initial_score": 0.0,
            "similarity_score": 0.3261375359470292,
            "is_plagiarism": true
          },
          {
            "title": "unordered_map count() in C++",
            "link": "https://www.geeksforgeeks.org/unordered_map-count-in-c/",
            "snippet": "The unordered_map::count() is a builtin method in C++ which is used to count the number of elements present in an unordered_map with a given key.",
            "query": "\"class CharWindow { unordered_map<char, int> counts; public: void add(char c) { counts[c]++; } void remove(char c) { counts[c]--; if (counts[c]\" cpp example  OR  OR  OR code example",
            "query_priority": 0.7000000000000001,
            "initial_score": 0.0,
            "similarity_score": 0.2844129238507972,
            "is_plagiarism": false
          },
          {
            "title": "How can I get the current window's title with char * format in ...",
            "link": "https://stackoverflow.com/questions/16409282/how-can-i-get-the-current-windows-title-with-char-format-in-c-on-windows",
            "snippet": "I want the write the current window title in console and/or file, and I have trouble with LPWSTR to char * or const char *.",
            "query": "\"class CharWindow\" cpp example site:github.com OR site:stackoverflow.com OR site:geeksforgeeks.org OR site:tutorialspoint.com",
            "query_priority": 0.7,
            "initial_score": 0.0,
            "similarity_score": 0.057510364785026344,
            "is_plagiarism": false
          },
          {
            "title": "C++ count chars in a string",
            "link": "https://stackoverflow.com/questions/19929758/c-count-chars-in-a-string",
            "snippet": "I need to count the number of an input character there is in an input sentence. I am so close however I keep getting this error.",
            "query": "\"class CharWindow { unordered_map<char, int> counts; public: void add(char c) { counts[c]++; } void remove(char c) { counts[c]--; if (counts[c]\" cpp example  OR  OR  OR code example",
            "query_priority": 0.7000000000000001,
            "initial_score": 0.0,
            "similarity_score": 0.05662135372415746,
            "is_plagiarism": false
          },
          {
            "title": "unordered_map Class",
            "link": "https://learn.microsoft.com/en-us/cpp/standard-library/unordered-map-class?view=msvc-170",
            "snippet": "API reference for the C++ Standard Library container class `unordered_map`, which controls a varying-length sequence of elements.",
            "query": "\"class CharWindow { unordered_map<char, int> counts; public: void add(char c) { counts[c]++; } void remove(char c) { counts[c]--; if (counts[c]\" cpp example  OR  OR  OR code example",
            "query_priority": 0.7000000000000001,
            "initial_score": 0.0,
            "similarity_score": 0.05662135372415746,
            "is_plagiarism": false
          },
          {
            "title": "C++ Unordered Map",
            "link": "https://www.programiz.com/cpp-programming/unordered-map",
            "snippet": "In C++, the STL unordered_map is an unordered associative container that provides the functionality of an unordered map or dictionary data structure.",
            "query": "\"class CharWindow { unordered_map<char, int> counts; public: void add(char c) { counts[c]++; } void remove(char c) { counts[c]--; if (counts[c]\" cpp example  OR  OR  OR code example",
            "query_priority": 0.7000000000000001,
            "initial_score": 0.0,
            "similarity_score": 0.05662135372415746,
            "is_plagiarism": false
          },
          {
            "title": "STL std::unordered_map (C++11) | Modern Cpp Series Ep. 129",
            "link": "https://www.youtube.com/watch?v=pvVrNwZzCgk",
            "snippet": "unordered map is an associative data structure that allows for one entry into the map data structure.",
            "query": "\"class CharWindow { unordered_map<char, int> counts; public: void add(char c) { counts[c]++; } void remove(char c) { counts[c]--; if (counts[c]\" cpp example  OR  OR  OR code example",
            "query_priority": 0.7000000000000001,
            "initial_score": 0.0,
            "similarity_score": 0.05662135372415746,
            "is_plagiarism": false
          },
          {
            "title": "c++ special characters - C++ Forum",
            "link": "https://cplusplus.com/forum/general/284717/",
            "snippet": "I am trying to solve the below using c++. Any idea how to display special characters using STL and open source libraries?",
            "query": "\"class CharWindow { unordered_map<char, int> counts; public: void add(char c) { counts[c]++; } void remove(char c) { counts[c]--; if (counts[c]\" cpp example  OR  OR  OR code example",
            "query_priority": 0.7000000000000001,
            "initial_score": 0.0,
            "similarity_score": 0.05662135372415746,
            "is_plagiarism": false
          },
          {
            "title": "Unordered Map in C++ STL",
            "link": "https://www.geeksforgeeks.org/unordered_map-in-cpp-stl/",
            "snippet": "In C++, unordered_map is an unordered associative container that stores data in the form of unique key-value pairs.",
            "query": "\"class CharWindow { unordered_map<char, int> counts; public: void add(char c) { counts[c]++; } void remove(char c) { counts[c]--; if (counts[c]\" cpp example  OR  OR  OR code example",
            "query_priority": 0.7000000000000001,
            "initial_score": 0.0,
            "similarity_score": 0.05662135372415746,
            "is_plagiarism": false
          },
          {
            "title": "What does the 'L' in front a string mean in C++?",
            "link": "https://stackoverflow.com/questions/6384118/what-does-the-l-in-front-a-string-mean-in-c",
            "snippet": "A wchar_t is twice big as a simple char. In daily use you don't need to use wchar_t, but if you are using windows.h you are going to need it.",
            "query": "\"class CharWindow\" cpp example site:github.com OR site:stackoverflow.com OR site:geeksforgeeks.org OR site:tutorialspoint.com",
            "query_priority": 0.7,
            "initial_score": 0.0,
            "similarity_score": 0.05662135372415746,
            "is_plagiarism": false
          },
          {
            "title": "how do i run this cpp file in ros - c++",
            "link": "https://stackoverflow.com/questions/70978962/how-do-i-run-this-cpp-file-in-ros",
            "snippet": "If you're trying to use rosrun the command should be: rosrun roscv linefollowing. Notice the .cpp isn't included here. This is because what you were trying to ...",
            "query": "\"class CharWindow\" cpp example site:github.com OR site:stackoverflow.com OR site:geeksforgeeks.org OR site:tutorialspoint.com",
            "query_priority": 0.7,
            "initial_score": 0.0,
            "similarity_score": 0.05662135372415746,
            "is_plagiarism": false
          },
          {
            "title": "Every time a string is turned to LPCWSTR or LPARAM it ...",
            "link": "https://stackoverflow.com/questions/66088629/every-time-a-string-is-turned-to-lpcwstr-or-lparam-it-turns-into-chinese",
            "snippet": "I'm doing a desktop app using winapi. It only happens whenever I try to do it with variables, whenever I pass just text, everything works correctly.",
            "query": "\"class CharWindow\" cpp example site:github.com OR site:stackoverflow.com OR site:geeksforgeeks.org OR site:tutorialspoint.com",
            "query_priority": 0.7,
            "initial_score": 0.0,
            "similarity_score": 0.05662135372415746,
            "is_plagiarism": false
          },
          {
            "title": "how to search \"n bits\" in a byte array? - c++",
            "link": "https://stackoverflow.com/questions/2943632/how-to-search-n-bits-in-a-byte-array",
            "snippet": "i have a byte array. Now i need to know the count of appearances of a bit pattern which length is N. For example, my byte array is \"00100100 ...",
            "query": "\"class CharWindow\" cpp example site:github.com OR site:stackoverflow.com OR site:geeksforgeeks.org OR site:tutorialspoint.com",
            "query_priority": 0.7,
            "initial_score": 0.0,
            "similarity_score": 0.05662135372415746,
            "is_plagiarism": false
          },
          {
            "title": "ros_tutorials/opencv_tut/src/simpleCanny.cpp at master",
            "link": "https://github.com/epsilonorion/ros_tutorials/blob/master/opencv_tut/src/simpleCanny.cpp",
            "snippet": "/*here is a simple program which demonstrates the use of ros and opencv to do image manipulations on video streams given out as image topics from the ...",
            "query": "\"class CharWindow\" cpp example site:github.com OR site:stackoverflow.com OR site:geeksforgeeks.org OR site:tutorialspoint.com",
            "query_priority": 0.7,
            "initial_score": 0.0,
            "similarity_score": 0.05662135372415746,
            "is_plagiarism": false
          }
        ],
        "total_results": 20,
        "plagiarism_detected": true,
        "plagiarism_results": [
          {
            "title": "Code Errors - unordered_map program - C++ Forum",
            "link": "https://cplusplus.com/forum/beginner/250121/",
            "snippet": "To use operator[], the unordered_map must be non-const (it inserts the key into the map if the key does not exist\"). Instead, we can use at() on the const ...",
            "query": "\"class CharWindow { unordered_map<char, int> counts; public: void add(char c) { counts[c]++; } void remove(char c) { counts[c]--; if (counts[c]\" cpp example  OR  OR  OR code example",
            "query_priority": 0.7000000000000001,
            "initial_score": 0.0,
            "similarity_score": 0.33423234898723625,
            "is_plagiarism": true
          },
          {
            "title": "Borland\u00ae ObjectWindows",
            "link": "http://bitsavers.informatik.uni-stuttgart.de/pdf/borland/borland_C++/Borland_ObjectWindows_Version_2.5_Programmers_Guide_1994.pdf",
            "snippet": "... charWindow->GetOcRemView(); if (tpl == &worksheetLink) (. II Create TOleWorksheetWindow. 358 ObjectWindows Programmer's Guide. Page 374. II and return ...",
            "query": "\"CharWindow\" class cpp example  OR  OR  OR code example",
            "query_priority": 0.7000000000000001,
            "initial_score": 0.0,
            "similarity_score": 0.33167069496290524,
            "is_plagiarism": true
          },
          {
            "title": "Borland\u00ae ObjectWindows",
            "link": "https://bitsavers.org/pdf/borland/borland_C++/Borland_ObjectWindows_Version_2.5_Programmers_Guide_1994.pdf",
            "snippet": "... charWindow->GetOcRemView(); if (tpl == &worksheetLink) (. II Create TOleWorksheetWindow. 358 ObjectWindows Programmer's Guide. Page 374. II and return ...",
            "query": "\"CharWindow\" class cpp example  OR  OR  OR code example",
            "query_priority": 0.7000000000000001,
            "initial_score": 0.0,
            "similarity_score": 0.33167069496290524,
            "is_plagiarism": true
          },
          {
            "title": "Convert filesystem::path into char* on windows - c++",
            "link": "https://stackoverflow.com/questions/54109159/convert-filesystempath-into-char-on-windows",
            "snippet": "You can use the *string() and generic_*string() member functions of the std::filesystem::path object to convert the path into either a native or a generic (ie, ...",
            "query": "\"class CharWindow\" cpp example site:github.com OR site:stackoverflow.com OR site:geeksforgeeks.org OR site:tutorialspoint.com",
            "query_priority": 0.7,
            "initial_score": 0.0,
            "similarity_score": 0.3261375359470292,
            "is_plagiarism": true
          },
          {
            "title": "README.md - MartinStokroos/TrueRMS",
            "link": "https://github.com/MartinStokroos/TrueRMS/blob/master/README.md",
            "snippet": "This repository contains the TrueRMS C++ library for Arduino. With this library it is possible to calculate the average value and the rms (root mean square) ...",
            "query": "\"class CharWindow\" cpp example site:github.com OR site:stackoverflow.com OR site:geeksforgeeks.org OR site:tutorialspoint.com",
            "query_priority": 0.7,
            "initial_score": 0.0,
            "similarity_score": 0.3261375359470292,
            "is_plagiarism": true
          }
        ],
        "similarity_threshold": 0.3,
        "matching_sources": [
          "https://cplusplus.com/forum/beginner/250121/",
          "http://bitsavers.informatik.uni-stuttgart.de/pdf/borland/borland_C++/Borland_ObjectWindows_Version_2.5_Programmers_Guide_1994.pdf",
          "https://bitsavers.org/pdf/borland/borland_C++/Borland_ObjectWindows_Version_2.5_Programmers_Guide_1994.pdf",
          "https://stackoverflow.com/questions/54109159/convert-filesystempath-into-char-on-windows",
          "https://github.com/MartinStokroos/TrueRMS/blob/master/README.md"
        ]
      },
      "DOC2SAM_sol1.txt": {
        "file": "/Users/guptasahaj01/Downloads/code_checker/Processing/core_backend/sessions/session_e9a631be802648d7a51a6b72d284ab5e/results/organized/solution1/DOC2SAM_sol1.txt",
        "language": "cpp",
        "timestamp": "2025-04-14T16:03:24.792845",
        "queries_used": [
          "\"longestSubstringWithKUnique\" function cpp example site:github.com OR site:stackoverflow.com OR site:geeksforgeeks.org OR site:tutorialspoint.com",
          "\"for (int right = 0; right < s.size(); ++right) {\nif (freq[s[right] - 'a']++ == 0) unique++;\nwhile (unique > k) {\nif (--freq[s[left] - 'a'] == 0) unique--;\nleft++;\n}\" cpp example site:github.com OR site:stackoverflow.com OR site:geeksforgeeks.org OR site:tutorialspoint.com",
          "\"while (unique > k) {\nif (--freq[s[left] - 'a'] == 0) unique--;\nleft++;\n}\" cpp example site:github.com OR site:stackoverflow.com OR site:geeksforgeeks.org OR site:tutorialspoint.com"
        ],
        "results": [
          {
            "title": "Number of Substrings Containing All Three Characters",
            "link": "https://gist.github.com/SuryaPratapK/2f6bb46531c8b15658193506a1f99783",
            "snippet": "int numberOfSubstrings(string s) {. int n=s.size();. int subarrays=0;. vector<int> freq(3,0);. int left=0,right=0;. while(right<n){. freq[s[right]-'a']++;. // ...",
            "query": "\"for (int right = 0; right < s.size(); ++right) {\nif (freq[s[right] - 'a']++ == 0) unique++;\nwhile (unique > k) {\nif (--freq[s[left] - 'a'] == 0) unique--;\nleft++;\n}\" cpp example  OR  OR  OR code example",
            "query_priority": 0.5,
            "initial_score": 0.0,
            "similarity_score": 0.5933067497867287,
            "is_plagiarism": true
          },
          {
            "title": "https://research.cs.wisc.edu/wpis/examples/pcca/gz...",
            "link": "https://research.cs.wisc.edu/wpis/examples/pcca/gzip/gzip.c",
            "snippet": "*/ } while (--prev_length != 0); match_available = 0; match_length = MIN_MATCH-1; strstart++; if (flush) FLUSH_BLOCK(0), block_start = strstart; } else if ...",
            "query": "\"for (int right = 0; right < s.size(); ++right) {\nif (freq[s[right] - 'a']++ == 0) unique++;\nwhile (unique > k) {\nif (--freq[s[left] - 'a'] == 0) unique--;\nleft++;\n}\" cpp example  OR  OR  OR code example",
            "query_priority": 0.5,
            "initial_score": 0.0,
            "similarity_score": 0.4142350291346887,
            "is_plagiarism": true
          },
          {
            "title": "Longest Repeating Character Replacement: Brute Force ...",
            "link": "https://medium.com/@letslearnnow/longest-repeating-character-replacement-brute-force-better-and-best-approaches-with-tips-and-3dde651668b6",
            "snippet": "Intuition: Use a sliding window (two pointers left and right ). Keep track of character frequency in the current window.",
            "query": "\"for (int right = 0; right < s.size(); ++right) {\nif (freq[s[right] - 'a']++ == 0) unique++;\nwhile (unique > k) {\nif (--freq[s[left] - 'a'] == 0) unique--;\nleft++;\n}\" cpp example  OR  OR  OR code example",
            "query_priority": 0.5,
            "initial_score": 0.0,
            "similarity_score": 0.2853118834730261,
            "is_plagiarism": false
          },
          {
            "title": "CSES Tree section editorial",
            "link": "https://codeforces.com/blog/entry/79048",
            "snippet": "This is a classical problem having multiple solutions. One easy to implement solution is using 2 Breadth First Searches (BFS).",
            "query": "\"for (int right = 0; right < s.size(); ++right) {\nif (freq[s[right] - 'a']++ == 0) unique++;\nwhile (unique > k) {\nif (--freq[s[left] - 'a'] == 0) unique--;\nleft++;\n}\" cpp example  OR  OR  OR code example",
            "query_priority": 0.5,
            "initial_score": 0.0,
            "similarity_score": 0.2853118834730261,
            "is_plagiarism": false
          },
          {
            "title": "count number of valid substrings",
            "link": "https://stackoverflow.com/questions/79507460/count-number-of-valid-substrings",
            "snippet": "Count how many substrings are there in the input string such that frequency of any character inside the substring is not more than the number of ...",
            "query": "\"for (int right = 0; right < s.size(); ++right) {\nif (freq[s[right] - 'a']++ == 0) unique++;\nwhile (unique > k) {\nif (--freq[s[left] - 'a'] == 0) unique--;\nleft++;\n}\" cpp example  OR  OR  OR code example",
            "query_priority": 0.5,
            "initial_score": 0.0,
            "similarity_score": 0.05814814814814814,
            "is_plagiarism": false
          },
          {
            "title": "mike-ravkine/rosettacode-parsed \u00b7 Datasets at Hugging Face",
            "link": "https://huggingface.co/datasets/mike-ravkine/rosettacode-parsed",
            "snippet": "We're on a journey to advance and democratize artificial intelligence through open source and open science.",
            "query": "\"for (int right = 0; right < s.size(); ++right) {\nif (freq[s[right] - 'a']++ == 0) unique++;\nwhile (unique > k) {\nif (--freq[s[left] - 'a'] == 0) unique--;\nleft++;\n}\" cpp example  OR  OR  OR code example",
            "query_priority": 0.5,
            "initial_score": 0.0,
            "similarity_score": 0.05814814814814814,
            "is_plagiarism": false
          },
          {
            "title": "Minimum characters required to be removed to make ...",
            "link": "https://www.geeksforgeeks.org/minimum-characters-required-to-be-removed-to-make-frequency-of-each-character-unique/",
            "snippet": "The task is to find the minimum count of characters that need to be deleted from the string such that the frequency of each character of the string is unique.",
            "query": "\"for (int right = 0; right < s.size(); ++right) {\nif (freq[s[right] - 'a']++ == 0) unique++;\nwhile (unique > k) {\nif (--freq[s[left] - 'a'] == 0) unique--;\nleft++;\n}\" cpp example  OR  OR  OR code example",
            "query_priority": 0.5,
            "initial_score": 0.0,
            "similarity_score": 0.05814814814814814,
            "is_plagiarism": false
          },
          {
            "title": "Longest substring with K unique characters using Binary ...",
            "link": "https://www.geeksforgeeks.org/longest-substring-with-k-unique-characters-using-binary-search/",
            "snippet": "Given a string str and an integer K, the task is to print the length of the longest possible substring that has exactly K unique characters.",
            "query": "\"for (int right = 0; right < s.size(); ++right) {\nif (freq[s[right] - 'a']++ == 0) unique++;\nwhile (unique > k) {\nif (--freq[s[left] - 'a'] == 0) unique--;\nleft++;\n}\" cpp example  OR  OR  OR code example",
            "query_priority": 0.5,
            "initial_score": 0.0,
            "similarity_score": 0.05814814814814814,
            "is_plagiarism": false
          },
          {
            "title": "Towards Algorithms and Competitive Programming",
            "link": "https://github.com/dirkneuhaeuser/algorithms",
            "snippet": "An implementation view on algorithms in competitive programming. Most of the explanations are very brief and require knowledge in this field.",
            "query": "\"while (unique > k) {\nif (--freq[s[left] - 'a'] == 0) unique--;\nleft++;\n}\" cpp example site:github.com OR site:stackoverflow.com OR site:geeksforgeeks.org OR site:tutorialspoint.com",
            "query_priority": 0.6,
            "initial_score": 0.0,
            "similarity_score": 0.05814814814814814,
            "is_plagiarism": false
          },
          {
            "title": "dosbox-x/src/dosbox.cpp at master",
            "link": "https://github.com/joncampbell123/dosbox-x/blob/master/src/dosbox.cpp",
            "snippet": "DOSBox-X fork of the DOSBox project. Contribute to joncampbell123/dosbox-x development by creating an account on GitHub.",
            "query": "\"while (unique > k) {\nif (--freq[s[left] - 'a'] == 0) unique--;\nleft++;\n}\" cpp example site:github.com OR site:stackoverflow.com OR site:geeksforgeeks.org OR site:tutorialspoint.com",
            "query_priority": 0.6,
            "initial_score": 0.0,
            "similarity_score": 0.05814814814814814,
            "is_plagiarism": false
          },
          {
            "title": "Stockfish/src/syzygy/tbprobe.cpp at master",
            "link": "https://github.com/official-stockfish/Stockfish/blob/master/src/syzygy/tbprobe.cpp",
            "snippet": "A free and strong UCI chess engine. Contribute to official-stockfish/Stockfish development by creating an account on GitHub.",
            "query": "\"while (unique > k) {\nif (--freq[s[left] - 'a'] == 0) unique--;\nleft++;\n}\" cpp example site:github.com OR site:stackoverflow.com OR site:geeksforgeeks.org OR site:tutorialspoint.com",
            "query_priority": 0.6,
            "initial_score": 0.0,
            "similarity_score": 0.05814814814814814,
            "is_plagiarism": false
          },
          {
            "title": "metasploit-framework/data/jtr/john.conf at master",
            "link": "https://github.com/rapid7/metasploit-framework/blob/master/data/jtr/john.conf",
            "snippet": "# Everything, including all KoreLogic and the rest of included hashcat rules. # Only for very fast hashes and/or Single mode. Some of these rules are of.",
            "query": "\"while (unique > k) {\nif (--freq[s[left] - 'a'] == 0) unique--;\nleft++;\n}\" cpp example site:github.com OR site:stackoverflow.com OR site:geeksforgeeks.org OR site:tutorialspoint.com",
            "query_priority": 0.6,
            "initial_score": 0.0,
            "similarity_score": 0.05814814814814814,
            "is_plagiarism": false
          },
          {
            "title": "Algorithm-Notes/README.md at master",
            "link": "https://github.com/xuezzou/Algorithm-Notes/blob/master/README.md",
            "snippet": "Notes about coding questions on Leetcode, Lintcode - Algorithm-Notes/README.md at master \u00b7 xuezzou/Algorithm-Notes.",
            "query": "\"while (unique > k) {\nif (--freq[s[left] - 'a'] == 0) unique--;\nleft++;\n}\" cpp example site:github.com OR site:stackoverflow.com OR site:geeksforgeeks.org OR site:tutorialspoint.com",
            "query_priority": 0.6,
            "initial_score": 0.0,
            "similarity_score": 0.05814814814814814,
            "is_plagiarism": false
          },
          {
            "title": "Number of sub-strings that contain the given character ...",
            "link": "https://www.geeksforgeeks.org/number-of-sub-strings-that-contain-the-given-character-exactly-k-times/",
            "snippet": "The task is to find the number of sub-strings that contain the character c exactly k times. Examples: Input: str = \u201cabada\u201d, c = 'a', K = 2",
            "query": "\"while (unique > k) {\nif (--freq[s[left] - 'a'] == 0) unique--;\nleft++;\n}\" cpp example site:github.com OR site:stackoverflow.com OR site:geeksforgeeks.org OR site:tutorialspoint.com",
            "query_priority": 0.6,
            "initial_score": 0.0,
            "similarity_score": 0.05814814814814814,
            "is_plagiarism": false
          },
          {
            "title": "Longest substring with k unique characters",
            "link": "https://www.geeksforgeeks.org/find-the-longest-substring-with-k-unique-characters-in-a-given-string/",
            "snippet": "A straightforward approach is to generate all substrings and check if each contains exactly k unique characters.",
            "query": "\"while (unique > k) {\nif (--freq[s[left] - 'a'] == 0) unique--;\nleft++;\n}\" cpp example site:github.com OR site:stackoverflow.com OR site:geeksforgeeks.org OR site:tutorialspoint.com",
            "query_priority": 0.6,
            "initial_score": 0.0,
            "similarity_score": 0.05814814814814814,
            "is_plagiarism": false
          },
          {
            "title": "Check if frequency of each element in given array is unique ...",
            "link": "https://www.geeksforgeeks.org/check-if-frequency-of-each-element-in-given-array-is-unique-or-not/",
            "snippet": "The task is to check whether the frequency of the elements in the array is unique or not. If all the frequency is unique then print \u201cYes\u201d, else print \u201cNo\u201d.",
            "query": "\"while (unique > k) {\nif (--freq[s[left] - 'a'] == 0) unique--;\nleft++;\n}\" cpp example site:github.com OR site:stackoverflow.com OR site:geeksforgeeks.org OR site:tutorialspoint.com",
            "query_priority": 0.6,
            "initial_score": 0.0,
            "similarity_score": 0.05702155817821348,
            "is_plagiarism": false
          },
          {
            "title": "jdk11u/src/hotspot/share/opto/block.cpp at master",
            "link": "https://github.com/openjdk/jdk11u/blob/master/src/hotspot/share/opto/block.cpp",
            "snippet": "// Connector blocks need no further processing. if (block->is_connector()) {. assert((i+1) == number_of_blocks() || get_block( ...",
            "query": "\"while (unique > k) {\nif (--freq[s[left] - 'a'] == 0) unique--;\nleft++;\n}\" cpp example site:github.com OR site:stackoverflow.com OR site:geeksforgeeks.org OR site:tutorialspoint.com",
            "query_priority": 0.6,
            "initial_score": 0.0,
            "similarity_score": 0.049999999999999996,
            "is_plagiarism": false
          }
        ],
        "total_results": 17,
        "plagiarism_detected": true,
        "plagiarism_results": [
          {
            "title": "Number of Substrings Containing All Three Characters",
            "link": "https://gist.github.com/SuryaPratapK/2f6bb46531c8b15658193506a1f99783",
            "snippet": "int numberOfSubstrings(string s) {. int n=s.size();. int subarrays=0;. vector<int> freq(3,0);. int left=0,right=0;. while(right<n){. freq[s[right]-'a']++;. // ...",
            "query": "\"for (int right = 0; right < s.size(); ++right) {\nif (freq[s[right] - 'a']++ == 0) unique++;\nwhile (unique > k) {\nif (--freq[s[left] - 'a'] == 0) unique--;\nleft++;\n}\" cpp example  OR  OR  OR code example",
            "query_priority": 0.5,
            "initial_score": 0.0,
            "similarity_score": 0.5933067497867287,
            "is_plagiarism": true
          },
          {
            "title": "https://research.cs.wisc.edu/wpis/examples/pcca/gz...",
            "link": "https://research.cs.wisc.edu/wpis/examples/pcca/gzip/gzip.c",
            "snippet": "*/ } while (--prev_length != 0); match_available = 0; match_length = MIN_MATCH-1; strstart++; if (flush) FLUSH_BLOCK(0), block_start = strstart; } else if ...",
            "query": "\"for (int right = 0; right < s.size(); ++right) {\nif (freq[s[right] - 'a']++ == 0) unique++;\nwhile (unique > k) {\nif (--freq[s[left] - 'a'] == 0) unique--;\nleft++;\n}\" cpp example  OR  OR  OR code example",
            "query_priority": 0.5,
            "initial_score": 0.0,
            "similarity_score": 0.4142350291346887,
            "is_plagiarism": true
          }
        ],
        "similarity_threshold": 0.3,
        "matching_sources": [
          "https://gist.github.com/SuryaPratapK/2f6bb46531c8b15658193506a1f99783",
          "https://research.cs.wisc.edu/wpis/examples/pcca/gzip/gzip.c"
        ]
      },
      "DOC7SAM_sol1.txt": {
        "file": "/Users/guptasahaj01/Downloads/code_checker/Processing/core_backend/sessions/session_e9a631be802648d7a51a6b72d284ab5e/results/organized/solution1/DOC7SAM_sol1.txt",
        "language": "cpp",
        "timestamp": "2025-04-14T16:03:46.433483",
        "queries_used": [
          "\"longestSubstringWithKUnique\" function cpp example site:github.com OR site:stackoverflow.com OR site:geeksforgeeks.org OR site:tutorialspoint.com",
          "\"for (int i = 0; i < s.length(); ++i) {\nunordered_map<char, int> freq;\nfor (int j = i; j < s.length(); ++j) {\nfreq[s[j]]++;\nif (freq.size() == k) maxLen = max(maxLen, j - i + 1);\nif (freq.size() > k) break;\n}\" cpp example site:github.com OR site:stackoverflow.com OR site:geeksforgeeks.org OR site:tutorialspoint.com",
          "\"int main() { string s = \"aabacbebebe\"; int k = 3; cout << longestSubstringWithKUnique(s, k) << endl; return 0; }\" cpp example site:github.com OR site:stackoverflow.com OR site:geeksforgeeks.org OR site:tutorialspoint.com"
        ],
        "results": [
          {
            "title": "Algorithm-Notes/README.md at master",
            "link": "https://github.com/xuezzou/Algorithm-Notes/blob/master/README.md",
            "snippet": "size() == 0 || grid[0].size() == 0) { return 0; } int count = 0; for(int i = 0; i < grid.size(); ++i) { for(int j = 0; j < grid[0].size(); ++j) { if(grid[i][j] ...",
            "query": "\"for (int i = 0; i < s.length(); ++i) {\nunordered_map<char, int> freq;\nfor (int j = i; j < s.length(); ++j) {\nfreq[s[j]]++;\nif (freq.size() == k) maxLen = max(maxLen, j - i + 1);\nif (freq.size() > k) break;\n}\" cpp example site:github.com OR site:stackoverflow.com OR site:geeksforgeeks.org OR site:tutorialspoint.com",
            "query_priority": 0.6,
            "initial_score": 0.0,
            "similarity_score": 0.5977921810332677,
            "is_plagiarism": true
          },
          {
            "title": "Leetcode_practice/Solution/0003.cpp at main",
            "link": "https://github.com/come880412/Leetcode_practice/blob/main/Solution/0003.cpp",
            "snippet": "class Solution { public: int lengthOfLongestSubstring(string s) { int n = s.length(); unordered_map<char, int> map; int prev = -1; int result = 0; for (int ...",
            "query": "\"for (int i = 0; i < s.length(); ++i) {\nunordered_map<char, int> freq;\nfor (int j = i; j < s.length(); ++j) {\nfreq[s[j]]++;\nif (freq.size() == k) maxLen = max(maxLen, j - i + 1);\nif (freq.size() > k) break;\n}\" cpp example site:github.com OR site:stackoverflow.com OR site:geeksforgeeks.org OR site:tutorialspoint.com",
            "query_priority": 0.6,
            "initial_score": 0.0,
            "similarity_score": 0.5448248760394343,
            "is_plagiarism": true
          },
          {
            "title": "Algorithm(7) Two pointers and hash table (Part A)(By ...",
            "link": "https://wangzhezhe.github.io/2019/06/15/Algorithm-7-hash-table-and-two-pointers-1/",
            "snippet": "\u79fb\u52a8\u6307\u9488\u7684\u65f6\u5019\u5e38\u7528\u7684\u5957\u8def\u5c31\u662f\u6bcf\u6b21\u79fb\u52a8\u4e4b\u540e\u518d\u8fdb\u884c\u6bd4\u8f83\u3002\u4e00\u822c\u662f\u4e00\u4e2afor loop + while loop \u5916\u5c42for loop \u6709O(N)\u7684\u590d\u6742\u5ea6\uff0c\u5185\u5c42\u5982\u679c\u662ffor\u5c31\u6210\u4e86O(N^2)\u7684\u7b97\u6cd5 ...",
            "query": "\"for (int i = 0; i < s.length(); ++i) {\nunordered_map<char, int> freq;\nfor (int j = i; j < s.length(); ++j) {\nfreq[s[j]]++;\nif (freq.size() == k) maxLen = max(maxLen, j - i + 1);\nif (freq.size() > k) break;\n}\" cpp example site:github.com OR site:stackoverflow.com OR site:geeksforgeeks.org OR site:tutorialspoint.com",
            "query_priority": 0.6,
            "initial_score": 0.0,
            "similarity_score": 0.2788338780009668,
            "is_plagiarism": false
          },
          {
            "title": "CCC March | PDF | Software Engineering",
            "link": "https://www.scribd.com/document/533588553/CCC-March-2",
            "snippet": "The document contains code snippets from different programming languages (C++, Java, Python) that solve various algorithm problems.",
            "query": "\"for (int i = 0; i < s.length(); ++i) {\nunordered_map<char, int> freq;\nfor (int j = i; j < s.length(); ++j) {\nfreq[s[j]]++;\nif (freq.size() == k) maxLen = max(maxLen, j - i + 1);\nif (freq.size() > k) break;\n}\" cpp example site:github.com OR site:stackoverflow.com OR site:geeksforgeeks.org OR site:tutorialspoint.com",
            "query_priority": 0.6,
            "initial_score": 0.0,
            "similarity_score": 0.2788338780009668,
            "is_plagiarism": false
          },
          {
            "title": "Longest Substring with At Most K Distinct Characters",
            "link": "https://thejat.in/code/longest-substring-with-at-most-k-distinct-characters",
            "snippet": "Problem Statement. You are given a string s and an integer k. Your task is to find the length of the longest substring in s that contains at most k distinct ...",
            "query": "\"for (int i = 0; i < s.length(); ++i) {\nunordered_map<char, int> freq;\nfor (int j = i; j < s.length(); ++j) {\nfreq[s[j]]++;\nif (freq.size() == k) maxLen = max(maxLen, j - i + 1);\nif (freq.size() > k) break;\n}\" cpp example site:github.com OR site:stackoverflow.com OR site:geeksforgeeks.org OR site:tutorialspoint.com",
            "query_priority": 0.6,
            "initial_score": 0.0,
            "similarity_score": 0.05063520871143377,
            "is_plagiarism": false
          },
          {
            "title": "First unique character in string using Unordered_map c++",
            "link": "https://stackoverflow.com/questions/39609492/first-unique-character-in-string-using-unordered-map-c",
            "snippet": "If I try to debug it in eclipse it says could not resolve unordered_map. I could not find the bug in my code. Please help me in understanding ...",
            "query": "\"for (int i = 0; i < s.length(); ++i) {\nunordered_map<char, int> freq;\nfor (int j = i; j < s.length(); ++j) {\nfreq[s[j]]++;\nif (freq.size() == k) maxLen = max(maxLen, j - i + 1);\nif (freq.size() > k) break;\n}\" cpp example site:github.com OR site:stackoverflow.com OR site:geeksforgeeks.org OR site:tutorialspoint.com",
            "query_priority": 0.6,
            "initial_score": 0.0,
            "similarity_score": 0.05063520871143377,
            "is_plagiarism": false
          },
          {
            "title": "String Algorithm[1] | PDF | Pointer (Computer Programming)",
            "link": "https://www.scribd.com/document/842618886/String-Algorithm-1",
            "snippet": "The document provides a guide on common string patterns used in programming, including the Sliding Window, Two Pointer, Dynamic Programming, ...",
            "query": "\"for (int i = 0; i < s.length(); ++i) {\nunordered_map<char, int> freq;\nfor (int j = i; j < s.length(); ++j) {\nfreq[s[j]]++;\nif (freq.size() == k) maxLen = max(maxLen, j - i + 1);\nif (freq.size() > k) break;\n}\" cpp example site:github.com OR site:stackoverflow.com OR site:geeksforgeeks.org OR site:tutorialspoint.com",
            "query_priority": 0.6,
            "initial_score": 0.0,
            "similarity_score": 0.05063520871143377,
            "is_plagiarism": false
          },
          {
            "title": "Can someone please help me find a better approach?(C++)",
            "link": "https://www.reddit.com/r/CodingHelp/comments/1f5g5wd/can_someone_please_help_me_find_a_better_approachc/",
            "snippet": "The absolute difference |a_i\u2212a_j| must be equal to the maximum absolute difference over all the pairs in the array. More formally, |a_i\u2212a_j|=max ...",
            "query": "\"for (int i = 0; i < s.length(); ++i) {\nunordered_map<char, int> freq;\nfor (int j = i; j < s.length(); ++j) {\nfreq[s[j]]++;\nif (freq.size() == k) maxLen = max(maxLen, j - i + 1);\nif (freq.size() > k) break;\n}\" cpp example site:github.com OR site:stackoverflow.com OR site:geeksforgeeks.org OR site:tutorialspoint.com",
            "query_priority": 0.6,
            "initial_score": 0.0,
            "similarity_score": 0.05063520871143377,
            "is_plagiarism": false
          },
          {
            "title": "amztheory/alpaca-code-CPlus \u00b7 Datasets at Hugging Face",
            "link": "https://huggingface.co/datasets/amztheory/alpaca-code-CPlus",
            "snippet": "Create a C++ function that finds the frequency of each character in a string and stores in a hashtable. #include <iostream> #include <unordered_map> std:: ...",
            "query": "\"for (int i = 0; i < s.length(); ++i) {\nunordered_map<char, int> freq;\nfor (int j = i; j < s.length(); ++j) {\nfreq[s[j]]++;\nif (freq.size() == k) maxLen = max(maxLen, j - i + 1);\nif (freq.size() > k) break;\n}\" cpp example site:github.com OR site:stackoverflow.com OR site:geeksforgeeks.org OR site:tutorialspoint.com",
            "query_priority": 0.6,
            "initial_score": 0.0,
            "similarity_score": 0.05063520871143377,
            "is_plagiarism": false
          },
          {
            "title": "Longest substring with k unique characters",
            "link": "https://www.geeksforgeeks.org/find-the-longest-substring-with-k-unique-characters-in-a-given-string/",
            "snippet": "A straightforward approach is to generate all substrings and check if each contains exactly k unique characters.",
            "query": "\"int main() { string s = \"aabacbebebe\"; int k = 3; cout << longestSubstringWithKUnique(s, k) << endl; return 0; }\" cpp example site:github.com OR site:stackoverflow.com OR site:geeksforgeeks.org OR site:tutorialspoint.com",
            "query_priority": 0.56,
            "initial_score": 0.0,
            "similarity_score": 0.05063520871143377,
            "is_plagiarism": false
          },
          {
            "title": "Arrays and Strings and HashMap(?) | by LiveRunGrow - Medium",
            "link": "https://liverungrow.medium.com/arrays-and-strings-b00dcaabefbb",
            "snippet": "StringBuilder is a useful class for constructing and manipulating strings in a performant and memory-efficient way.",
            "query": "\"for (int i = 0; i < s.length(); ++i) {\nunordered_map<char, int> freq;\nfor (int j = i; j < s.length(); ++j) {\nfreq[s[j]]++;\nif (freq.size() == k) maxLen = max(maxLen, j - i + 1);\nif (freq.size() > k) break;\n}\" cpp example site:github.com OR site:stackoverflow.com OR site:geeksforgeeks.org OR site:tutorialspoint.com",
            "query_priority": 0.6,
            "initial_score": 0.0,
            "similarity_score": 0.03563520871143377,
            "is_plagiarism": false
          }
        ],
        "total_results": 11,
        "plagiarism_detected": true,
        "plagiarism_results": [
          {
            "title": "Algorithm-Notes/README.md at master",
            "link": "https://github.com/xuezzou/Algorithm-Notes/blob/master/README.md",
            "snippet": "size() == 0 || grid[0].size() == 0) { return 0; } int count = 0; for(int i = 0; i < grid.size(); ++i) { for(int j = 0; j < grid[0].size(); ++j) { if(grid[i][j] ...",
            "query": "\"for (int i = 0; i < s.length(); ++i) {\nunordered_map<char, int> freq;\nfor (int j = i; j < s.length(); ++j) {\nfreq[s[j]]++;\nif (freq.size() == k) maxLen = max(maxLen, j - i + 1);\nif (freq.size() > k) break;\n}\" cpp example site:github.com OR site:stackoverflow.com OR site:geeksforgeeks.org OR site:tutorialspoint.com",
            "query_priority": 0.6,
            "initial_score": 0.0,
            "similarity_score": 0.5977921810332677,
            "is_plagiarism": true
          },
          {
            "title": "Leetcode_practice/Solution/0003.cpp at main",
            "link": "https://github.com/come880412/Leetcode_practice/blob/main/Solution/0003.cpp",
            "snippet": "class Solution { public: int lengthOfLongestSubstring(string s) { int n = s.length(); unordered_map<char, int> map; int prev = -1; int result = 0; for (int ...",
            "query": "\"for (int i = 0; i < s.length(); ++i) {\nunordered_map<char, int> freq;\nfor (int j = i; j < s.length(); ++j) {\nfreq[s[j]]++;\nif (freq.size() == k) maxLen = max(maxLen, j - i + 1);\nif (freq.size() > k) break;\n}\" cpp example site:github.com OR site:stackoverflow.com OR site:geeksforgeeks.org OR site:tutorialspoint.com",
            "query_priority": 0.6,
            "initial_score": 0.0,
            "similarity_score": 0.5448248760394343,
            "is_plagiarism": true
          }
        ],
        "similarity_threshold": 0.3,
        "matching_sources": [
          "https://github.com/xuezzou/Algorithm-Notes/blob/master/README.md",
          "https://github.com/come880412/Leetcode_practice/blob/main/Solution/0003.cpp"
        ]
      },
      "DOC4SAM_sol1.txt": {
        "file": "/Users/guptasahaj01/Downloads/code_checker/Processing/core_backend/sessions/session_e9a631be802648d7a51a6b72d284ab5e/results/organized/solution1/DOC4SAM_sol1.txt",
        "language": "cpp",
        "timestamp": "2025-04-14T16:04:17.136870",
        "queries_used": [
          "\"longestSubstringWithKUnique\" function cpp example site:github.com OR site:stackoverflow.com OR site:geeksforgeeks.org OR site:tutorialspoint.com",
          "\"for (int end = 0; end < s.length(); end++) {\nwindow.insert(s[end]);\nfreq[s[end]]++;\nwhile (freq.size() > k) {\nchar ch = s[start];\nwindow.erase(window.find(ch));\nif (--freq[ch] == 0) freq.erase(ch);\nstart++;\n}\" cpp example site:github.com OR site:stackoverflow.com OR site:geeksforgeeks.org OR site:tutorialspoint.com",
          "\"while (freq.size() > k) {\nchar ch = s[start];\nwindow.erase(window.find(ch));\nif (--freq[ch] == 0) freq.erase(ch);\nstart++;\n}\" cpp example site:github.com OR site:stackoverflow.com OR site:geeksforgeeks.org OR site:tutorialspoint.com"
        ],
        "results": [
          {
            "title": "Algorithm-Notes/README.md at master",
            "link": "https://github.com/xuezzou/Algorithm-Notes/blob/master/README.md",
            "snippet": "size() - 1; // pivot is k using quicksort while(start <= end) { while(start ... size() > k) { if(--charCount[s[start]] == 0) { charCount.erase(s[start]); ...",
            "query": "\"while (freq.size() > k) {\nchar ch = s[start];\nwindow.erase(window.find(ch));\nif (--freq[ch] == 0) freq.erase(ch);\nstart++;\n}\" cpp example site:github.com OR site:stackoverflow.com OR site:geeksforgeeks.org OR site:tutorialspoint.com",
            "query_priority": 0.6,
            "initial_score": 0.0,
            "similarity_score": 0.2882929717653331,
            "is_plagiarism": false
          },
          {
            "title": "interval map implementation - c++",
            "link": "https://stackoverflow.com/questions/50518179/interval-map-implementation",
            "snippet": "The task is to implement an interval map assignment operation. I sent them my solution, but it did not pass the second requirement (correct behavior).",
            "query": "\"while (freq.size() > k) {\nchar ch = s[start];\nwindow.erase(window.find(ch));\nif (--freq[ch] == 0) freq.erase(ch);\nstart++;\n}\" cpp example site:github.com OR site:stackoverflow.com OR site:geeksforgeeks.org OR site:tutorialspoint.com",
            "query_priority": 0.6,
            "initial_score": 0.0,
            "similarity_score": 0.2862341482359213,
            "is_plagiarism": false
          },
          {
            "title": "Efficient way to find Frequency of a character in a String in ...",
            "link": "https://stackoverflow.com/questions/6215486/efficient-way-to-find-frequency-of-a-character-in-a-string-in-java-on",
            "snippet": "I'd use an array rather than a hash map. If we're limited to ascii, that's just 256 entries; if we're using Unicode, 64k.",
            "query": "\"while (freq.size() > k) {\nchar ch = s[start];\nwindow.erase(window.find(ch));\nif (--freq[ch] == 0) freq.erase(ch);\nstart++;\n}\" cpp example site:github.com OR site:stackoverflow.com OR site:geeksforgeeks.org OR site:tutorialspoint.com",
            "query_priority": 0.6,
            "initial_score": 0.0,
            "similarity_score": 0.05345882352941176,
            "is_plagiarism": false
          },
          {
            "title": "heatherx11/heather.cpp at master",
            "link": "https://github.com/themadinventor/heatherx11/blob/master/heather.cpp",
            "snippet": "... of the current ot last holdover event. // The value is shown in GREEN if the holdover event ended before Heather. // was started. It is shown in YELLOW if a ...",
            "query": "\"while (freq.size() > k) {\nchar ch = s[start];\nwindow.erase(window.find(ch));\nif (--freq[ch] == 0) freq.erase(ch);\nstart++;\n}\" cpp example site:github.com OR site:stackoverflow.com OR site:geeksforgeeks.org OR site:tutorialspoint.com",
            "query_priority": 0.6,
            "initial_score": 0.0,
            "similarity_score": 0.0514,
            "is_plagiarism": false
          },
          {
            "title": "charm/doc/charm++/manual.rst at main",
            "link": "https://github.com/UIUC-PPL/charm/blob/main/doc/charm++/manual.rst",
            "snippet": "Charm++ provides a compiler-wrapper called charmc that handles all ci, C, C++ and Fortran source files that are part of a user program. Users can invoke charmc ...",
            "query": "\"while (freq.size() > k) {\nchar ch = s[start];\nwindow.erase(window.find(ch));\nif (--freq[ch] == 0) freq.erase(ch);\nstart++;\n}\" cpp example site:github.com OR site:stackoverflow.com OR site:geeksforgeeks.org OR site:tutorialspoint.com",
            "query_priority": 0.6,
            "initial_score": 0.0,
            "similarity_score": 0.0514,
            "is_plagiarism": false
          },
          {
            "title": "uSDXOpen/usdxWHITEBUTTONS.ino at main \u00b7 GW8RDI ...",
            "link": "https://github.com/GW8RDI/uSDXOpen/blob/main/usdxWHITEBUTTONS.ino",
            "snippet": "Open firmware for all versions of the uSDX transceiver - uSDXOpen/usdxWHITEBUTTONS.ino at main \u00b7 GW8RDI/uSDXOpen.",
            "query": "\"while (freq.size() > k) {\nchar ch = s[start];\nwindow.erase(window.find(ch));\nif (--freq[ch] == 0) freq.erase(ch);\nstart++;\n}\" cpp example site:github.com OR site:stackoverflow.com OR site:geeksforgeeks.org OR site:tutorialspoint.com",
            "query_priority": 0.6,
            "initial_score": 0.0,
            "similarity_score": 0.0514,
            "is_plagiarism": false
          },
          {
            "title": "faust/architecture/faustvst.cpp at master-dev",
            "link": "https://github.com/grame-cncm/faust/blob/master-dev/architecture/faustvst.cpp",
            "snippet": "Functional programming language for signal processing and sound synthesis - faust/architecture/faustvst.cpp at master-dev \u00b7 grame-cncm/faust.",
            "query": "\"while (freq.size() > k) {\nchar ch = s[start];\nwindow.erase(window.find(ch));\nif (--freq[ch] == 0) freq.erase(ch);\nstart++;\n}\" cpp example site:github.com OR site:stackoverflow.com OR site:geeksforgeeks.org OR site:tutorialspoint.com",
            "query_priority": 0.6,
            "initial_score": 0.0,
            "similarity_score": 0.0514,
            "is_plagiarism": false
          },
          {
            "title": "dosbox-x/src/dosbox.cpp at master",
            "link": "https://github.com/joncampbell123/dosbox-x/blob/master/src/dosbox.cpp",
            "snippet": "DOSBox-X fork of the DOSBox project. Contribute to joncampbell123/dosbox-x development by creating an account on GitHub.",
            "query": "\"while (freq.size() > k) {\nchar ch = s[start];\nwindow.erase(window.find(ch));\nif (--freq[ch] == 0) freq.erase(ch);\nstart++;\n}\" cpp example site:github.com OR site:stackoverflow.com OR site:geeksforgeeks.org OR site:tutorialspoint.com",
            "query_priority": 0.6,
            "initial_score": 0.0,
            "similarity_score": 0.0514,
            "is_plagiarism": false
          },
          {
            "title": "usdx/usdx.ino at master \u00b7 threeme3/usdx",
            "link": "https://github.com/threeme3/usdx/blob/master/usdx.ino",
            "snippet": "#define F_CPU 20007000 // Actual crystal frequency of 20MHz XTAL1, note that this declaration is just informative and does not correct the timing in Arduino ...",
            "query": "\"while (freq.size() > k) {\nchar ch = s[start];\nwindow.erase(window.find(ch));\nif (--freq[ch] == 0) freq.erase(ch);\nstart++;\n}\" cpp example site:github.com OR site:stackoverflow.com OR site:geeksforgeeks.org OR site:tutorialspoint.com",
            "query_priority": 0.6,
            "initial_score": 0.0,
            "similarity_score": 0.0514,
            "is_plagiarism": false
          },
          {
            "title": "jdk15/src/hotspot/os/linux/os_linux.cpp at master",
            "link": "https://github.com/openjdk/jdk15/blob/master/src/hotspot/os/linux/os_linux.cpp",
            "snippet": "If the VM might have been created on the primordial thread, we need to resolve the. // primordial thread stack bounds and check if the ...",
            "query": "\"while (freq.size() > k) {\nchar ch = s[start];\nwindow.erase(window.find(ch));\nif (--freq[ch] == 0) freq.erase(ch);\nstart++;\n}\" cpp example site:github.com OR site:stackoverflow.com OR site:geeksforgeeks.org OR site:tutorialspoint.com",
            "query_priority": 0.6,
            "initial_score": 0.0,
            "similarity_score": 0.0514,
            "is_plagiarism": false
          }
        ],
        "total_results": 10,
        "plagiarism_detected": false,
        "plagiarism_results": [],
        "similarity_threshold": 0.3,
        "matching_sources": []
      },
      "DOC8SAM_sol1.txt": {
        "file": "/Users/guptasahaj01/Downloads/code_checker/Processing/core_backend/sessions/session_e9a631be802648d7a51a6b72d284ab5e/results/organized/solution1/DOC8SAM_sol1.txt",
        "language": "cpp",
        "timestamp": "2025-04-14T16:04:46.833802",
        "queries_used": [
          "\"longestSubstringWithKUnique\" function cpp example site:github.com OR site:stackoverflow.com OR site:geeksforgeeks.org OR site:tutorialspoint.com",
          "\"for (int end = start; end < s.length(); ++end) {\nfreq[s[end]]++;\nif (freq.size() == k) maxLen = max(maxLen, end - start + 1);\nif (freq.size() > k) break;\n}\" cpp example site:github.com OR site:stackoverflow.com OR site:geeksforgeeks.org OR site:tutorialspoint.com",
          "\"int main() { string s = \"aabacbebebe\"; int k = 3; cout << longestSubstringWithKUnique(s, k) << endl; return 0; }\" cpp example site:github.com OR site:stackoverflow.com OR site:geeksforgeeks.org OR site:tutorialspoint.com"
        ],
        "results": [
          {
            "title": "finding the start and end index for a max sub array",
            "link": "https://stackoverflow.com/questions/14180308/finding-the-start-and-end-index-for-a-max-sub-array",
            "snippet": "This program generates the max sum of sub array ..in this case its 19,using {5,9,-5,10}.. now i have to find the start and end index of this sub array.",
            "query": "\"for (int end = start; end < s.length(); ++end) {\nfreq[s[end]]++;\nif (freq.size() == k) maxLen = max(maxLen, end - start + 1);\nif (freq.size() > k) break;\n}\" cpp example site:github.com OR site:stackoverflow.com OR site:geeksforgeeks.org OR site:tutorialspoint.com",
            "query_priority": 0.6,
            "initial_score": 0.0,
            "similarity_score": 0.09573823529411764,
            "is_plagiarism": false
          },
          {
            "title": "C++ Subarray Fully Explained",
            "link": "https://medium.com/@ryan_forrester_/c-subarray-fully-explained-4ee25fa76aeb",
            "snippet": "In C++, a subarray is a contiguous portion of an array. It's a slice of the original array that maintains the relative order of elements.",
            "query": "\"for (int end = start; end < s.length(); ++end) {\nfreq[s[end]]++;\nif (freq.size() == k) maxLen = max(maxLen, end - start + 1);\nif (freq.size() > k) break;\n}\" cpp example site:github.com OR site:stackoverflow.com OR site:geeksforgeeks.org OR site:tutorialspoint.com",
            "query_priority": 0.6,
            "initial_score": 0.0,
            "similarity_score": 0.07786341463414634,
            "is_plagiarism": false
          },
          {
            "title": "A Complete Guide to Programming in C++",
            "link": "http://www.lmpt.univ-tours.fr/~volkov/C++.pdf",
            "snippet": "This book was written for readers interested in learning the C++ programming language from scratch, and for both novice and advanced C++ programmers.",
            "query": "\"for (int end = start; end < s.length(); ++end) {\nfreq[s[end]]++;\nif (freq.size() == k) maxLen = max(maxLen, end - start + 1);\nif (freq.size() > k) break;\n}\" cpp example site:github.com OR site:stackoverflow.com OR site:geeksforgeeks.org OR site:tutorialspoint.com",
            "query_priority": 0.6,
            "initial_score": 0.0,
            "similarity_score": 0.07786341463414634,
            "is_plagiarism": false
          },
          {
            "title": "Longest Subarray With Sum K - Naukri Code 360",
            "link": "https://www.naukri.com/code360/problems/longest-subarray-with-sum-k_6682399",
            "snippet": "You are given an array 'a' of size 'n' and an integer 'k'. Find the length of the longest subarray of 'a' whose sum is equal to 'k'. Example :",
            "query": "\"for (int end = start; end < s.length(); ++end) {\nfreq[s[end]]++;\nif (freq.size() == k) maxLen = max(maxLen, end - start + 1);\nif (freq.size() > k) break;\n}\" cpp example site:github.com OR site:stackoverflow.com OR site:geeksforgeeks.org OR site:tutorialspoint.com",
            "query_priority": 0.6,
            "initial_score": 0.0,
            "similarity_score": 0.07786341463414634,
            "is_plagiarism": false
          },
          {
            "title": "system.cpp source code [opencv/modules/core/src/ ...",
            "link": "https://codebrowser.dev/opencv/opencv/modules/core/src/system.cpp.html",
            "snippet": "Browse the source of opencv 4.9.0 using KDAB Codebrowser which provides IDE like features for browsing C, C++, Rust & Dart code in your browser.",
            "query": "\"for (int end = start; end < s.length(); ++end) {\nfreq[s[end]]++;\nif (freq.size() == k) maxLen = max(maxLen, end - start + 1);\nif (freq.size() > k) break;\n}\" cpp example site:github.com OR site:stackoverflow.com OR site:geeksforgeeks.org OR site:tutorialspoint.com",
            "query_priority": 0.6,
            "initial_score": 0.0,
            "similarity_score": 0.07786341463414634,
            "is_plagiarism": false
          },
          {
            "title": "Kevin Liao on LinkedIn: Invert Binary Tree - LeetCode",
            "link": "https://www.linkedin.com/posts/kevinliao2003_invert-binary-tree-leetcode-activity-7183486330289422336-9LGV",
            "snippet": "Two Pointer Approach: This algorithm utilizes a two-pointer approach for finding pairs of elements whose sum equals zero. The pointers i and j ...",
            "query": "\"for (int end = start; end < s.length(); ++end) {\nfreq[s[end]]++;\nif (freq.size() == k) maxLen = max(maxLen, end - start + 1);\nif (freq.size() > k) break;\n}\" cpp example site:github.com OR site:stackoverflow.com OR site:geeksforgeeks.org OR site:tutorialspoint.com",
            "query_priority": 0.6,
            "initial_score": 0.0,
            "similarity_score": 0.07786341463414634,
            "is_plagiarism": false
          },
          {
            "title": "325. Maximum Size Subarray Sum Equals k",
            "link": "https://algo.monster/liteproblems/325",
            "snippet": "The problem asks us to find the maximum length of a subarray from the given array nums, such that the sum of its elements is exactly equal to the given integer ...",
            "query": "\"for (int end = start; end < s.length(); ++end) {\nfreq[s[end]]++;\nif (freq.size() == k) maxLen = max(maxLen, end - start + 1);\nif (freq.size() > k) break;\n}\" cpp example site:github.com OR site:stackoverflow.com OR site:geeksforgeeks.org OR site:tutorialspoint.com",
            "query_priority": 0.6,
            "initial_score": 0.0,
            "similarity_score": 0.07786341463414634,
            "is_plagiarism": false
          },
          {
            "title": "Longest Subarray with given Sum K(Positives) - Tutorial",
            "link": "https://takeuforward.org/data-structure/longest-subarray-with-given-sum-k/",
            "snippet": "Problem Statement: Given an array and a sum k, we need to print the length of the longest subarray that sums to k.",
            "query": "\"for (int end = start; end < s.length(); ++end) {\nfreq[s[end]]++;\nif (freq.size() == k) maxLen = max(maxLen, end - start + 1);\nif (freq.size() > k) break;\n}\" cpp example site:github.com OR site:stackoverflow.com OR site:geeksforgeeks.org OR site:tutorialspoint.com",
            "query_priority": 0.6,
            "initial_score": 0.0,
            "similarity_score": 0.07786341463414634,
            "is_plagiarism": false
          },
          {
            "title": "Longest Subarray With At Most K Distinct Integers in C++",
            "link": "https://algocademy.com/link/?problem=longest-subarray-with-at-most-k-distinct-integers&lang=cpp&solution=1",
            "snippet": "In this blog post, we discussed how to find the longest subarray with at most K distinct integers using a sliding window approach.",
            "query": "\"for (int end = start; end < s.length(); ++end) {\nfreq[s[end]]++;\nif (freq.size() == k) maxLen = max(maxLen, end - start + 1);\nif (freq.size() > k) break;\n}\" cpp example site:github.com OR site:stackoverflow.com OR site:geeksforgeeks.org OR site:tutorialspoint.com",
            "query_priority": 0.6,
            "initial_score": 0.0,
            "similarity_score": 0.07786341463414634,
            "is_plagiarism": false
          },
          {
            "title": "Find the Longest Turbulent Subarray in C++",
            "link": "https://www.tpointtech.com/find-the-longest-turbulent-subarray-in-cpp",
            "snippet": "Find the Longest Turbulent Subarray in C++. Exploring the realm of challenges, the quest to find the subarray presents an intriguing puzzle.",
            "query": "\"for (int end = start; end < s.length(); ++end) {\nfreq[s[end]]++;\nif (freq.size() == k) maxLen = max(maxLen, end - start + 1);\nif (freq.size() > k) break;\n}\" cpp example site:github.com OR site:stackoverflow.com OR site:geeksforgeeks.org OR site:tutorialspoint.com",
            "query_priority": 0.6,
            "initial_score": 0.0,
            "similarity_score": 0.07786341463414634,
            "is_plagiarism": false
          },
          {
            "title": "Longest substring with k unique characters",
            "link": "https://www.geeksforgeeks.org/find-the-longest-substring-with-k-unique-characters-in-a-given-string/",
            "snippet": "A straightforward approach is to generate all substrings and check if each contains exactly k unique characters.",
            "query": "\"int main() { string s = \"aabacbebebe\"; int k = 3; cout << longestSubstringWithKUnique(s, k) << endl; return 0; }\" cpp example site:github.com OR site:stackoverflow.com OR site:geeksforgeeks.org OR site:tutorialspoint.com",
            "query_priority": 0.56,
            "initial_score": 0.0,
            "similarity_score": 0.07786341463414634,
            "is_plagiarism": false
          }
        ],
        "total_results": 11,
        "plagiarism_detected": false,
        "plagiarism_results": [],
        "similarity_threshold": 0.3,
        "matching_sources": []
      },
      "DOC1SAM_sol1.txt": {
        "file": "/Users/guptasahaj01/Downloads/code_checker/Processing/core_backend/sessions/session_e9a631be802648d7a51a6b72d284ab5e/results/organized/solution1/DOC1SAM_sol1.txt",
        "language": "cpp",
        "timestamp": "2025-04-14T16:04:54.190541",
        "queries_used": [
          "\"longestSubstringWithKUnique\" function cpp example site:github.com OR site:stackoverflow.com OR site:geeksforgeeks.org OR site:tutorialspoint.com",
          "\"while (right < s.length()) {\ncount[s[right]]++; // include character at right in map\n// shrink window from left if unique character count exceeds k\nwhile (count.size() > k) {\ncount[s[left]]--;\nif (count[s[left]] == 0) count.erase(s[left]); // remove character if frequency is zero\nleft++; // move left pointer forward\n}\" cpp example site:github.com OR site:stackoverflow.com OR site:geeksforgeeks.org OR site:tutorialspoint.com",
          "\"int main() { string s = \"abcba\"; int k = 2; cout << longestSubstringWithKUnique(s, k) << endl; return 0; }\" cpp example site:github.com OR site:stackoverflow.com OR site:geeksforgeeks.org OR site:tutorialspoint.com"
        ],
        "results": [],
        "total_results": 0,
        "plagiarism_detected": false,
        "plagiarism_results": [],
        "similarity_threshold": 0.3,
        "matching_sources": []
      }
    },
    "solution2": {
      "DOC6SAM_sol2.txt": {
        "file": "/Users/guptasahaj01/Downloads/code_checker/Processing/core_backend/sessions/session_e9a631be802648d7a51a6b72d284ab5e/results/organized/solution2/DOC6SAM_sol2.txt",
        "language": "cpp",
        "timestamp": "2025-04-14T16:05:27.577039",
        "queries_used": [
          "\"traverseBoundary\" function cpp example site:github.com OR site:stackoverflow.com OR site:geeksforgeeks.org OR site:tutorialspoint.com",
          "\"void traverseBoundary(const vector<vector<int>>& mat, int n, int m, vector<int>& res)\" cpp example site:github.com OR site:stackoverflow.com OR site:geeksforgeeks.org OR site:tutorialspoint.com",
          "\"void traverseBoundary(const vector<vector<int>>& mat, int n, int m, vector<int>& res) { for (int i = 0; i < m; i++) res.push_back(mat[0][i]); for (int i = 1; i < n; i++)\" cpp example site:github.com OR site:stackoverflow.com OR site:geeksforgeeks.org OR site:tutorialspoint.com"
        ],
        "results": [
          {
            "title": "Boundary Level Order Traversal of Binary Tree",
            "link": "https://www.tutorialspoint.com/boundary-level-order-traversal-of-a-binary-tree",
            "snippet": "In the traverseBoundary() function, execute the return statement if the head is null. Otherwise, print the value of the head node. Step 4 ? Call ...",
            "query": "\"traverseBoundary\" function cpp example site:github.com OR site:stackoverflow.com OR site:geeksforgeeks.org OR site:tutorialspoint.com",
            "query_priority": 0.7,
            "initial_score": 0.0,
            "similarity_score": 0.3479863074524845,
            "is_plagiarism": true
          },
          {
            "title": "what does this ''(const vector<vector<int> > &A)\" segment of ...",
            "link": "https://stackoverflow.com/questions/57232276/what-does-this-const-vectorvectorint-a-segment-of-code-mean",
            "snippet": "I'm facing some issue in understanding the following segment of code (const vector<vector<int> > &A) . Will it define a 2D array? c++ \u00b7 c++11.",
            "query": "\"void traverseBoundary(const vector<vector<int>>& mat, int n, int m, vector<int>& res)\" cpp example  OR  OR  OR code example",
            "query_priority": 0.5,
            "initial_score": 0.0,
            "similarity_score": 0.3479863074524845,
            "is_plagiarism": true
          },
          {
            "title": "Vector of Vectors in C++ STL with Examples",
            "link": "https://www.geeksforgeeks.org/vector-of-vectors-in-c-stl-with-examples/",
            "snippet": "Below example demonstrates the insertion operation in a vector of vectors. The code creates a 2D vector by using the push_back() function and ...",
            "query": "\"void traverseBoundary(const vector<vector<int>>& mat, int n, int m, vector<int>& res)\" cpp example  OR  OR  OR code example",
            "query_priority": 0.5,
            "initial_score": 0.0,
            "similarity_score": 0.3479863074524845,
            "is_plagiarism": true
          },
          {
            "title": "Avoiding parallel arrays with Objective-C and C++",
            "link": "https://stackoverflow.com/questions/17599343/avoiding-parallel-arrays-with-objective-c-and-c",
            "snippet": "I make a function call to trace all isolated bodies of pixels within a ... traverseBoundary next.x and next.y %d, %d\", next.x, next.y ...",
            "query": "\"traverseBoundary\" function cpp example site:github.com OR site:stackoverflow.com OR site:geeksforgeeks.org OR site:tutorialspoint.com",
            "query_priority": 0.7,
            "initial_score": 0.0,
            "similarity_score": 0.08445426195426195,
            "is_plagiarism": false
          },
          {
            "title": "Help with vectors - C++ Forum",
            "link": "https://cplusplus.com/forum/beginner/263920/",
            "snippet": "So today, I decided to learn vectors. Nothing much. Learned how to read data from file to a vector and all basic vectors functions.",
            "query": "\"void traverseBoundary(const vector<vector<int>>& mat, int n, int m, vector<int>& res)\" cpp example  OR  OR  OR code example",
            "query_priority": 0.5,
            "initial_score": 0.0,
            "similarity_score": 0.08445426195426195,
            "is_plagiarism": false
          },
          {
            "title": "Returning Vectors in C++: Practical Guide | by ryan",
            "link": "https://medium.com/@ryan_forrester_/returning-vectors-in-c-practical-guide-75c842539f97",
            "snippet": "This article explores various methods to return vectors in C++, discussing their pros and cons and providing practical examples. The Basics: ...",
            "query": "\"void traverseBoundary(const vector<vector<int>>& mat, int n, int m, vector<int>& res)\" cpp example  OR  OR  OR code example",
            "query_priority": 0.5,
            "initial_score": 0.0,
            "similarity_score": 0.08445426195426195,
            "is_plagiarism": false
          },
          {
            "title": "C++ Vectors (With Examples)",
            "link": "https://www.programiz.com/cpp-programming/vectors",
            "snippet": "In C++, vectors are used to store elements of similar data types. However, unlike arrays, the size of a vector can grow dynamically.",
            "query": "\"void traverseBoundary(const vector<vector<int>>& mat, int n, int m, vector<int>& res)\" cpp example  OR  OR  OR code example",
            "query_priority": 0.5,
            "initial_score": 0.0,
            "similarity_score": 0.08445426195426195,
            "is_plagiarism": false
          },
          {
            "title": "2D Vectors in C++ - A Practical Guide ...",
            "link": "https://www.digitalocean.com/community/tutorials/2d-vectors-in-c-plus-plus",
            "snippet": "Also referred to as vector of vectors, 2D vectors in C++ form the basis of creating matrices, tables, or any other structures, dynamically.",
            "query": "\"void traverseBoundary(const vector<vector<int>>& mat, int n, int m, vector<int>& res)\" cpp example  OR  OR  OR code example",
            "query_priority": 0.5,
            "initial_score": 0.0,
            "similarity_score": 0.08445426195426195,
            "is_plagiarism": false
          },
          {
            "title": "Vector in C++ STL",
            "link": "https://www.geeksforgeeks.org/vector-in-cpp-stl/",
            "snippet": "In C++, vector is a dynamic array that stores collection of elements same type in contiguous memory. It has the ability to resize itself ...",
            "query": "\"void traverseBoundary(const vector<vector<int>>& mat, int n, int m, vector<int>& res)\" cpp example  OR  OR  OR code example",
            "query_priority": 0.5,
            "initial_score": 0.0,
            "similarity_score": 0.08445426195426195,
            "is_plagiarism": false
          }
        ],
        "total_results": 9,
        "plagiarism_detected": true,
        "plagiarism_results": [
          {
            "title": "Boundary Level Order Traversal of Binary Tree",
            "link": "https://www.tutorialspoint.com/boundary-level-order-traversal-of-a-binary-tree",
            "snippet": "In the traverseBoundary() function, execute the return statement if the head is null. Otherwise, print the value of the head node. Step 4 ? Call ...",
            "query": "\"traverseBoundary\" function cpp example site:github.com OR site:stackoverflow.com OR site:geeksforgeeks.org OR site:tutorialspoint.com",
            "query_priority": 0.7,
            "initial_score": 0.0,
            "similarity_score": 0.3479863074524845,
            "is_plagiarism": true
          },
          {
            "title": "what does this ''(const vector<vector<int> > &A)\" segment of ...",
            "link": "https://stackoverflow.com/questions/57232276/what-does-this-const-vectorvectorint-a-segment-of-code-mean",
            "snippet": "I'm facing some issue in understanding the following segment of code (const vector<vector<int> > &A) . Will it define a 2D array? c++ \u00b7 c++11.",
            "query": "\"void traverseBoundary(const vector<vector<int>>& mat, int n, int m, vector<int>& res)\" cpp example  OR  OR  OR code example",
            "query_priority": 0.5,
            "initial_score": 0.0,
            "similarity_score": 0.3479863074524845,
            "is_plagiarism": true
          },
          {
            "title": "Vector of Vectors in C++ STL with Examples",
            "link": "https://www.geeksforgeeks.org/vector-of-vectors-in-c-stl-with-examples/",
            "snippet": "Below example demonstrates the insertion operation in a vector of vectors. The code creates a 2D vector by using the push_back() function and ...",
            "query": "\"void traverseBoundary(const vector<vector<int>>& mat, int n, int m, vector<int>& res)\" cpp example  OR  OR  OR code example",
            "query_priority": 0.5,
            "initial_score": 0.0,
            "similarity_score": 0.3479863074524845,
            "is_plagiarism": true
          }
        ],
        "similarity_threshold": 0.3,
        "matching_sources": [
          "https://www.tutorialspoint.com/boundary-level-order-traversal-of-a-binary-tree",
          "https://stackoverflow.com/questions/57232276/what-does-this-const-vectorvectorint-a-segment-of-code-mean",
          "https://www.geeksforgeeks.org/vector-of-vectors-in-c-stl-with-examples/"
        ]
      },
      "DOC3SAM_sol2.txt": {
        "file": "/Users/guptasahaj01/Downloads/code_checker/Processing/core_backend/sessions/session_e9a631be802648d7a51a6b72d284ab5e/results/organized/solution2/DOC3SAM_sol2.txt",
        "language": "cpp",
        "timestamp": "2025-04-14T16:05:42.495238",
        "queries_used": [
          "\"for (int j = 0; j < m; j++) {\nresult.push_back(matrix[0][j]);\n}\" cpp example site:github.com OR site:stackoverflow.com OR site:geeksforgeeks.org OR site:tutorialspoint.com",
          "\"for (int i = 1; i < n; i++) {\nresult.push_back(matrix[i][m - 1]);\n}\" cpp example site:github.com OR site:stackoverflow.com OR site:geeksforgeeks.org OR site:tutorialspoint.com",
          "\"for (int j = m - 2; j >= 0; j--) {\nresult.push_back(matrix[n - 1][j]);\n}\" cpp example site:github.com OR site:stackoverflow.com OR site:geeksforgeeks.org OR site:tutorialspoint.com"
        ],
        "results": [],
        "total_results": 0,
        "plagiarism_detected": false,
        "plagiarism_results": [],
        "similarity_threshold": 0.3,
        "matching_sources": []
      },
      "DOC5SAM_sol2.txt": {
        "file": "/Users/guptasahaj01/Downloads/code_checker/Processing/core_backend/sessions/session_e9a631be802648d7a51a6b72d284ab5e/results/organized/solution2/DOC5SAM_sol2.txt",
        "language": "cpp",
        "timestamp": "2025-04-14T16:05:54.047062",
        "queries_used": [
          "\"while (j < m) res.push_back(matrix[0][j++]);\ni = 1; j = m - 1;\nwhile (i < n) res.push_back(matrix[i++][j]);\ni = n - 1; j = m - 2;\nif (n > 1)\nwhile (j >= 0) res.push_back(matrix[i][j--]);\ni = n - 2; j = 0;\nif (m > 1)\nwhile (i > 0) res.push_back(matrix[i--][j]);\nreturn res;\n}\n\nint main() {\nvector<vector<int>> matrix = {\n{1, 2, 3, 4}\" cpp example site:github.com OR site:stackoverflow.com OR site:geeksforgeeks.org OR site:tutorialspoint.com",
          "\"matrix size matrix\" cpp code example site:github.com OR site:stackoverflow.com OR site:geeksforgeeks.org OR site:tutorialspoint.com",
          "\"result boundaryTraversal matrix\" cpp code example site:github.com OR site:stackoverflow.com OR site:geeksforgeeks.org OR site:tutorialspoint.com"
        ],
        "results": [
          {
            "title": "assign a double matrix to CvMat opencv - c++",
            "link": "https://stackoverflow.com/questions/9958397/assign-a-double-matrix-to-cvmat-opencv",
            "snippet": "I think you need to set these first: matrix size, matrix type. Example in C++: double d[2]; cv::Mat* cvdata = new cv::Mat(1, 2, CV_64F);",
            "query": "\"matrix size matrix\" cpp code example site:github.com OR site:stackoverflow.com OR site:geeksforgeeks.org OR site:tutorialspoint.com",
            "query_priority": 0.5,
            "initial_score": 0.0,
            "similarity_score": 0.47669750460206084,
            "is_plagiarism": true
          },
          {
            "title": "JAERO/JAERO/aerol.cpp at master \u00b7 jontio/JAERO",
            "link": "https://github.com/jontio/JAERO/blob/master/JAERO/aerol.cpp",
            "snippet": "... <matrix.size()); matrix[k]=block[entry]; k++; } } return matrix; } QVector<int> &AeroLInterleaver::deinterleave(QVector<int> &block) { assert(block.size ...",
            "query": "\"matrix size matrix\" cpp code example site:github.com OR site:stackoverflow.com OR site:geeksforgeeks.org OR site:tutorialspoint.com",
            "query_priority": 0.5,
            "initial_score": 0.0,
            "similarity_score": 0.45679300541159296,
            "is_plagiarism": true
          },
          {
            "title": "Boundary elements of a Matrix",
            "link": "https://www.geeksforgeeks.org/boundary-elements-matrix/",
            "snippet": "vector< int > result = boundaryTraversal(matrix, n, m);. // Print the non-boundary elements. cout << \"Boundary Traversal: \" ;. for ( int i = 0 ...",
            "query": "\"result boundaryTraversal matrix\" cpp code example site:github.com OR site:stackoverflow.com OR site:geeksforgeeks.org OR site:tutorialspoint.com",
            "query_priority": 0.5,
            "initial_score": 0.0,
            "similarity_score": 0.4435087031892023,
            "is_plagiarism": true
          },
          {
            "title": "\"Unhandled exception\"/\"Access violation writing location\" error ...",
            "link": "https://stackoverflow.com/questions/2881454/unhandled-exception-access-violation-writing-location-error-with-referenced",
            "snippet": "... matrix size (matrix is square) c = new change *[count]; //resize pointers with matrix size for(i=0; i<count; i++) c[i] = new change[count]; file.clear ...",
            "query": "\"matrix size matrix\" cpp code example site:github.com OR site:stackoverflow.com OR site:geeksforgeeks.org OR site:tutorialspoint.com",
            "query_priority": 0.5,
            "initial_score": 0.0,
            "similarity_score": 0.41153677700009206,
            "is_plagiarism": true
          },
          {
            "title": "Design a simple C++ iterator for Matrix",
            "link": "https://stackoverflow.com/questions/56816493/design-a-simple-c-iterator-for-matrix",
            "snippet": "I also provide a complete and tested source code example. The source ... matrix size Matrix(size_t numberOfRows, size_t numberOfColumns); ...",
            "query": "\"matrix size matrix\" cpp code example site:github.com OR site:stackoverflow.com OR site:geeksforgeeks.org OR site:tutorialspoint.com",
            "query_priority": 0.5,
            "initial_score": 0.0,
            "similarity_score": 0.292319022897713,
            "is_plagiarism": false
          },
          {
            "title": "c++ custom iterator for matrix class",
            "link": "https://stackoverflow.com/questions/41106753/c-custom-iterator-for-matrix-class",
            "snippet": "I also provide a complete and tested source code example. The source ... matrix size Matrix(size_t numberOfRows, size_t numberOfColumns); ...",
            "query": "\"matrix size matrix\" cpp code example site:github.com OR site:stackoverflow.com OR site:geeksforgeeks.org OR site:tutorialspoint.com",
            "query_priority": 0.5,
            "initial_score": 0.0,
            "similarity_score": 0.292319022897713,
            "is_plagiarism": false
          },
          {
            "title": "Most efficient way to populate vector with indices ...",
            "link": "https://stackoverflow.com/questions/53461322/most-efficient-way-to-populate-vector-with-indices-corresponding-to-columns-of-a",
            "snippet": "... matrix size Matrix(size_t numberOfRows, size_t numberOfColumns); // Iterators for rows are simple, becuase we have vectors of columns. Use ...",
            "query": "\"matrix size matrix\" cpp code example site:github.com OR site:stackoverflow.com OR site:geeksforgeeks.org OR site:tutorialspoint.com",
            "query_priority": 0.5,
            "initial_score": 0.0,
            "similarity_score": 0.292319022897713,
            "is_plagiarism": false
          },
          {
            "title": "Fortran macro function for literal string?",
            "link": "https://stackoverflow.com/questions/31523615/fortran-macro-function-for-literal-string",
            "snippet": "For example: print*, 'Now giving information about Matrix1' call mysub ... matrix, size(matrix,1), size(matrix,2)) print*, 'About to do ...",
            "query": "\"matrix size matrix\" cpp code example site:github.com OR site:stackoverflow.com OR site:geeksforgeeks.org OR site:tutorialspoint.com",
            "query_priority": 0.5,
            "initial_score": 0.0,
            "similarity_score": 0.29037457845326853,
            "is_plagiarism": false
          },
          {
            "title": "davidm/lua-matrix",
            "link": "https://github.com/davidm/lua-matrix/blob/master/lua/matrix.lua",
            "snippet": "... matrix.size matrix.solve matrix.sqrt matrix.sub matrix.subm matrix.tostring matrix.transpose matrix.type See code and test_matrix.lua. ... See code and ...",
            "query": "\"matrix size matrix\" cpp code example site:github.com OR site:stackoverflow.com OR site:geeksforgeeks.org OR site:tutorialspoint.com",
            "query_priority": 0.5,
            "initial_score": 0.0,
            "similarity_score": 0.21376387911703804,
            "is_plagiarism": false
          },
          {
            "title": "ray2501/tcl-opencv: Tcl extension for OpenCV library",
            "link": "https://github.com/ray2501/tcl-opencv",
            "snippet": "See BUILDING.md to know how to build the extension. Implement commands. Matrix. MATRIX dims MATRIX size MATRIX rows MATRIX cols ...",
            "query": "\"matrix size matrix\" cpp code example site:github.com OR site:stackoverflow.com OR site:geeksforgeeks.org OR site:tutorialspoint.com",
            "query_priority": 0.5,
            "initial_score": 0.0,
            "similarity_score": 0.17715963456466247,
            "is_plagiarism": false
          }
        ],
        "total_results": 10,
        "plagiarism_detected": true,
        "plagiarism_results": [
          {
            "title": "assign a double matrix to CvMat opencv - c++",
            "link": "https://stackoverflow.com/questions/9958397/assign-a-double-matrix-to-cvmat-opencv",
            "snippet": "I think you need to set these first: matrix size, matrix type. Example in C++: double d[2]; cv::Mat* cvdata = new cv::Mat(1, 2, CV_64F);",
            "query": "\"matrix size matrix\" cpp code example site:github.com OR site:stackoverflow.com OR site:geeksforgeeks.org OR site:tutorialspoint.com",
            "query_priority": 0.5,
            "initial_score": 0.0,
            "similarity_score": 0.47669750460206084,
            "is_plagiarism": true
          },
          {
            "title": "JAERO/JAERO/aerol.cpp at master \u00b7 jontio/JAERO",
            "link": "https://github.com/jontio/JAERO/blob/master/JAERO/aerol.cpp",
            "snippet": "... <matrix.size()); matrix[k]=block[entry]; k++; } } return matrix; } QVector<int> &AeroLInterleaver::deinterleave(QVector<int> &block) { assert(block.size ...",
            "query": "\"matrix size matrix\" cpp code example site:github.com OR site:stackoverflow.com OR site:geeksforgeeks.org OR site:tutorialspoint.com",
            "query_priority": 0.5,
            "initial_score": 0.0,
            "similarity_score": 0.45679300541159296,
            "is_plagiarism": true
          },
          {
            "title": "Boundary elements of a Matrix",
            "link": "https://www.geeksforgeeks.org/boundary-elements-matrix/",
            "snippet": "vector< int > result = boundaryTraversal(matrix, n, m);. // Print the non-boundary elements. cout << \"Boundary Traversal: \" ;. for ( int i = 0 ...",
            "query": "\"result boundaryTraversal matrix\" cpp code example site:github.com OR site:stackoverflow.com OR site:geeksforgeeks.org OR site:tutorialspoint.com",
            "query_priority": 0.5,
            "initial_score": 0.0,
            "similarity_score": 0.4435087031892023,
            "is_plagiarism": true
          },
          {
            "title": "\"Unhandled exception\"/\"Access violation writing location\" error ...",
            "link": "https://stackoverflow.com/questions/2881454/unhandled-exception-access-violation-writing-location-error-with-referenced",
            "snippet": "... matrix size (matrix is square) c = new change *[count]; //resize pointers with matrix size for(i=0; i<count; i++) c[i] = new change[count]; file.clear ...",
            "query": "\"matrix size matrix\" cpp code example site:github.com OR site:stackoverflow.com OR site:geeksforgeeks.org OR site:tutorialspoint.com",
            "query_priority": 0.5,
            "initial_score": 0.0,
            "similarity_score": 0.41153677700009206,
            "is_plagiarism": true
          }
        ],
        "similarity_threshold": 0.3,
        "matching_sources": [
          "https://stackoverflow.com/questions/9958397/assign-a-double-matrix-to-cvmat-opencv",
          "https://github.com/jontio/JAERO/blob/master/JAERO/aerol.cpp",
          "https://www.geeksforgeeks.org/boundary-elements-matrix/",
          "https://stackoverflow.com/questions/2881454/unhandled-exception-access-violation-writing-location-error-with-referenced"
        ]
      },
      "DOC2SAM_sol2.txt": {
        "file": "/Users/guptasahaj01/Downloads/code_checker/Processing/core_backend/sessions/session_e9a631be802648d7a51a6b72d284ab5e/results/organized/solution2/DOC2SAM_sol2.txt",
        "language": "cpp",
        "timestamp": "2025-04-14T16:06:04.165140",
        "queries_used": [
          "\"for (int col = 0; col < cols; col++)\nboundary.push_back(matrix[0][col]);\nfor (int row = 1; row < rows; row++)\nboundary.push_back(matrix[row][cols - 1]);\nif (rows > 1)\nfor (int col = cols - 2; col >= 0; col--)\nboundary.push_back(matrix[rows - 1][col]);\nif (cols > 1)\nfor (int row = rows - 2; row > 0; row--)\nboundary.push_back(matrix[row][0]);\nreturn boundary;\n}\n\nint main() {\nvector<vector<int>> matrix = {\n{1, 2, 3, 4}\" cpp example site:github.com OR site:stackoverflow.com OR site:geeksforgeeks.org OR site:tutorialspoint.com",
          "\"boundary push_back matrix\" cpp code example site:github.com OR site:stackoverflow.com OR site:geeksforgeeks.org OR site:tutorialspoint.com",
          "\"boundary push_back matrix\" cpp code example site:github.com OR site:stackoverflow.com OR site:geeksforgeeks.org OR site:tutorialspoint.com"
        ],
        "results": [
          {
            "title": "c++ - How to use push_back with double* pointer",
            "link": "https://stackoverflow.com/questions/38007898",
            "snippet": "So, for example, say you create your array with one element x: double * left_edge; int length = 1; left_edge = new double[ length ]; left_edge[ ...",
            "query": "\"boundary push_back matrix\" cpp code example site:github.com OR site:stackoverflow.com OR site:geeksforgeeks.org OR site:tutorialspoint.com",
            "query_priority": 0.5,
            "initial_score": 0.0,
            "similarity_score": 0.41391081871345026,
            "is_plagiarism": true
          },
          {
            "title": "Assigning data from file to matrix C++ - arrays",
            "link": "https://stackoverflow.com/questions/10669794/assigning-data-from-file-to-matrix-c",
            "snippet": "I want to assign the content of the file \"REL\", which is a matrix of 46x2 [no blank lines]: 28 28 28 6 28 21 28 30 28 16 22 22 22",
            "query": "\"boundary push_back matrix\" cpp code example site:github.com OR site:stackoverflow.com OR site:geeksforgeeks.org OR site:tutorialspoint.com",
            "query_priority": 0.5,
            "initial_score": 0.0,
            "similarity_score": 0.1725657894736842,
            "is_plagiarism": false
          },
          {
            "title": "Creating a \"push_back\" Function for Array - c++",
            "link": "https://stackoverflow.com/questions/42777334/creating-a-push-back-function-for-array",
            "snippet": "My assignment is to create push_back and pop_back functions for a SimpleVector which have to do basically what you imagine they have to do.",
            "query": "\"boundary push_back matrix\" cpp code example site:github.com OR site:stackoverflow.com OR site:geeksforgeeks.org OR site:tutorialspoint.com",
            "query_priority": 0.5,
            "initial_score": 0.0,
            "similarity_score": 0.07625,
            "is_plagiarism": false
          },
          {
            "title": "C++ Vectors: Error in push_back member function call",
            "link": "https://stackoverflow.com/questions/72471441/c-vectors-error-in-push-back-member-function-call",
            "snippet": "I am trying to create the transpose of a matrix - by traversing into 2-D vectors and assigning the values of indices accordingly.",
            "query": "\"boundary push_back matrix\" cpp code example site:github.com OR site:stackoverflow.com OR site:geeksforgeeks.org OR site:tutorialspoint.com",
            "query_priority": 0.5,
            "initial_score": 0.0,
            "similarity_score": 0.07625,
            "is_plagiarism": false
          },
          {
            "title": "Creating a custom vector class. Push_back function only ...",
            "link": "https://stackoverflow.com/questions/64774762/creating-a-custom-vector-class-push-back-function-only-working-for-the-first-va",
            "snippet": "in push_back function allocate a new array with new size and copy data from existing array. After deleting existing array and we see this ...",
            "query": "\"boundary push_back matrix\" cpp code example site:github.com OR site:stackoverflow.com OR site:geeksforgeeks.org OR site:tutorialspoint.com",
            "query_priority": 0.5,
            "initial_score": 0.0,
            "similarity_score": 0.07625,
            "is_plagiarism": false
          },
          {
            "title": "My matrix class crash on initialisation [duplicate] - c++",
            "link": "https://stackoverflow.com/questions/33659686/my-matrix-class-crash-on-initialisation",
            "snippet": "The reason for your issues is that you're using a pointer member, and attempting to write to uninitialized memory.",
            "query": "\"boundary push_back matrix\" cpp code example site:github.com OR site:stackoverflow.com OR site:geeksforgeeks.org OR site:tutorialspoint.com",
            "query_priority": 0.5,
            "initial_score": 0.0,
            "similarity_score": 0.07625,
            "is_plagiarism": false
          },
          {
            "title": "leetcode-cpp-practices/885. Spiral Matrix III.cpp at master",
            "link": "https://github.com/keineahnung2345/leetcode-cpp-practices/blob/master/885.%20Spiral%20Matrix%20III.cpp",
            "snippet": "We can walk in a spiral shape from the starting square, ignoring whether we stay in the grid or not. Eventually, we must have reached every square in the grid.",
            "query": "\"boundary push_back matrix\" cpp code example site:github.com OR site:stackoverflow.com OR site:geeksforgeeks.org OR site:tutorialspoint.com",
            "query_priority": 0.5,
            "initial_score": 0.0,
            "similarity_score": 0.07625,
            "is_plagiarism": false
          },
          {
            "title": "How to make a minor of a matrix using vectors C++",
            "link": "https://stackoverflow.com/questions/74254914/how-to-make-a-minor-of-a-matrix-using-vectors-c",
            "snippet": "I am making a program for calculating a determinant of a matrix in C++ and I want to do so by using vectors, after this I will make a program that inverts a ...",
            "query": "\"boundary push_back matrix\" cpp code example site:github.com OR site:stackoverflow.com OR site:geeksforgeeks.org OR site:tutorialspoint.com",
            "query_priority": 0.5,
            "initial_score": 0.0,
            "similarity_score": 0.07625,
            "is_plagiarism": false
          },
          {
            "title": "boundary cases in a median filter (2D int) c++",
            "link": "https://stackoverflow.com/questions/52637399/boundary-cases-in-a-median-filter-2d-int-c",
            "snippet": "While developing a 2D integer median filter, I have run into a problem while finding the median for the boundary values of the 2D array.",
            "query": "\"boundary push_back matrix\" cpp code example site:github.com OR site:stackoverflow.com OR site:geeksforgeeks.org OR site:tutorialspoint.com",
            "query_priority": 0.5,
            "initial_score": 0.0,
            "similarity_score": 0.07625,
            "is_plagiarism": false
          },
          {
            "title": "c++ - Linked List pushback member function implementation",
            "link": "https://stackoverflow.com/questions/39606977/linked-list-pushback-member-function-implementation",
            "snippet": "I am trying to implement a pushback function for my Linked List by using a tail pointer. It seems straightforward enough, but I have a nagging feeling that I ...",
            "query": "\"boundary push_back matrix\" cpp code example site:github.com OR site:stackoverflow.com OR site:geeksforgeeks.org OR site:tutorialspoint.com",
            "query_priority": 0.5,
            "initial_score": 0.0,
            "similarity_score": 0.07625,
            "is_plagiarism": false
          }
        ],
        "total_results": 10,
        "plagiarism_detected": true,
        "plagiarism_results": [
          {
            "title": "c++ - How to use push_back with double* pointer",
            "link": "https://stackoverflow.com/questions/38007898",
            "snippet": "So, for example, say you create your array with one element x: double * left_edge; int length = 1; left_edge = new double[ length ]; left_edge[ ...",
            "query": "\"boundary push_back matrix\" cpp code example site:github.com OR site:stackoverflow.com OR site:geeksforgeeks.org OR site:tutorialspoint.com",
            "query_priority": 0.5,
            "initial_score": 0.0,
            "similarity_score": 0.41391081871345026,
            "is_plagiarism": true
          }
        ],
        "similarity_threshold": 0.3,
        "matching_sources": [
          "https://stackoverflow.com/questions/38007898"
        ]
      },
      "DOC7SAM_sol2.txt": {
        "file": "/Users/guptasahaj01/Downloads/code_checker/Processing/core_backend/sessions/session_e9a631be802648d7a51a6b72d284ab5e/results/organized/solution2/DOC7SAM_sol2.txt",
        "language": "cpp",
        "timestamp": "2025-04-14T16:06:34.541689",
        "queries_used": [
          "\"for (int j = 0; j < m; j++) {\nres.push_back(matrix[0][j]);\nvisited[0][j] = true;\n}\" cpp example site:github.com OR site:stackoverflow.com OR site:geeksforgeeks.org OR site:tutorialspoint.com",
          "\"for (int i = 1; i < n; i++) {\nres.push_back(matrix[i][m - 1]);\nvisited[i][m - 1] = true;\n}\" cpp example site:github.com OR site:stackoverflow.com OR site:geeksforgeeks.org OR site:tutorialspoint.com",
          "\"for (int j = m - 2; j >= 0; j--) {\nif (!visited[n - 1][j]) res.push_back(matrix[n - 1][j]);\n}\" cpp example site:github.com OR site:stackoverflow.com OR site:geeksforgeeks.org OR site:tutorialspoint.com"
        ],
        "results": [
          {
            "title": "z3/examples/c++/example.cpp at master \u00b7 Z3Prover/z3",
            "link": "https://github.com/Z3Prover/z3/blob/master/examples/c++/example.cpp",
            "snippet": "{0,4,0,9,7,0,0,0,0}};. for (unsigned i = 0; i < 9; i++). for (unsigned j = 0; j < 9; j++). if (instance[i][j] != 0). s.add(x[i * 9 + j] == instance[i][j]);.",
            "query": "\"for (int j = 0; j < m; j++) {\nres.push_back(matrix[0][j]);\nvisited[0][j] = true;\n}\" cpp example  OR  OR  OR code example",
            "query_priority": 0.5,
            "initial_score": 0.0,
            "similarity_score": 0.5349494788159265,
            "is_plagiarism": true
          },
          {
            "title": "Antti Laaksonen Learning and Improving Algorithms ...",
            "link": "https://csunibo.github.io/algoritmi-e-strutture-di-dati/libri/guide-to-competitive-programming-learning-and-improving-algorithms.pdf",
            "snippet": "For example, the time complexity of the following code is O(nm): for (int i = 1; i <= n; i++) { for (int j = 1; j <= m; j++) { ... } } The time complexity ...",
            "query": "\"for (int j = 0; j < m; j++) {\nres.push_back(matrix[0][j]);\nvisited[0][j] = true;\n}\" cpp example  OR  OR  OR code example",
            "query_priority": 0.5,
            "initial_score": 0.0,
            "similarity_score": 0.4605736849524954,
            "is_plagiarism": true
          },
          {
            "title": "push_back problem on vector<vector<int> > - c++",
            "link": "https://stackoverflow.com/questions/5305010/push-back-problem-on-vectorvectorint",
            "snippet": "I wanted to store these 2 vectors in one container called no_1_2 and I used no_1_2[0].push_back(no1.at(i)) and no_1_2[1].push_back(no2.at(j)) ...",
            "query": "\"for (int j = m - 2; j >= 0; j--) {\nif (!visited[n - 1][j]) res.push_back(matrix[n - 1][j]);\n}\" cpp example site:github.com OR site:stackoverflow.com OR site:geeksforgeeks.org OR site:tutorialspoint.com",
            "query_priority": 0.6,
            "initial_score": 0.0,
            "similarity_score": 0.3231682692476468,
            "is_plagiarism": true
          },
          {
            "title": "Dijkstra's Algo Implementation using STL",
            "link": "https://stackoverflow.com/questions/40316141/dijkstras-algo-implementation-using-stl",
            "snippet": "You never write to the visited array. Hence edges might be scanned multiple times. Simple fix: Add a single line after the if(visited[x]) ...",
            "query": "\"for (int i = 1; i < n; i++) {\nres.push_back(matrix[i][m - 1]);\nvisited[i][m - 1] = true;\n}\" cpp example site:github.com OR site:stackoverflow.com OR site:geeksforgeeks.org OR site:tutorialspoint.com",
            "query_priority": 0.6,
            "initial_score": 0.0,
            "similarity_score": 0.3146819417390293,
            "is_plagiarism": true
          },
          {
            "title": "Vector of Vectors of different sizes : r/cpp_questions",
            "link": "https://www.reddit.com/r/cpp_questions/comments/nm5z91/vector_of_vectors_of_different_sizes/",
            "snippet": "I created a vector of Vectors in which each vector had to be of different size (making an adjacency list) but I got a segmentation fault.",
            "query": "\"for (int j = 0; j < m; j++) {\nres.push_back(matrix[0][j]);\nvisited[0][j] = true;\n}\" cpp example  OR  OR  OR code example",
            "query_priority": 0.5,
            "initial_score": 0.0,
            "similarity_score": 0.24816512546395333,
            "is_plagiarism": false
          },
          {
            "title": "Double/integer conversion with cpp11 - c++",
            "link": "https://stackoverflow.com/questions/76807210/double-integer-conversion-with-cpp11",
            "snippet": "The issue is that the C++ function cpp_get_fe_gnl_() doesn't like the matrix obsCluster , which is a matrix of integers. If we cast it as ...",
            "query": "\"for (int i = 1; i < n; i++) {\nres.push_back(matrix[i][m - 1]);\nvisited[i][m - 1] = true;\n}\" cpp example site:github.com OR site:stackoverflow.com OR site:geeksforgeeks.org OR site:tutorialspoint.com",
            "query_priority": 0.6,
            "initial_score": 0.0,
            "similarity_score": 0.24816512546395333,
            "is_plagiarism": false
          },
          {
            "title": "Given an array with n elements and an integer k. Divide the ...",
            "link": "https://stackoverflow.com/questions/55930905/given-an-array-with-n-elements-and-an-integer-k-divide-the-array-into-subarrays",
            "snippet": "First divide the array into (n+k-1)/k segment and insert the value into a vector. convert each segment values into a string and create a user ...",
            "query": "\"for (int i = 1; i < n; i++) {\nres.push_back(matrix[i][m - 1]);\nvisited[i][m - 1] = true;\n}\" cpp example site:github.com OR site:stackoverflow.com OR site:geeksforgeeks.org OR site:tutorialspoint.com",
            "query_priority": 0.6,
            "initial_score": 0.0,
            "similarity_score": 0.24816512546395333,
            "is_plagiarism": false
          },
          {
            "title": "Inserting into a double vector - C++ Forum",
            "link": "https://cplusplus.com/forum/beginner/29841/",
            "snippet": "Just use the same syntax for a 2D array: Because you have a vector of vectors then saying matrix[i] returns a vector which you can then dereference using [j].",
            "query": "\"for (int j = 0; j < m; j++) {\nres.push_back(matrix[0][j]);\nvisited[0][j] = true;\n}\" cpp example  OR  OR  OR code example",
            "query_priority": 0.5,
            "initial_score": 0.0,
            "similarity_score": 0.23467586268798962,
            "is_plagiarism": false
          },
          {
            "title": "how inialize a vector <vector <int>> with int array [][]?",
            "link": "https://stackoverflow.com/questions/29620058/how-inialize-a-vector-vector-int-with-int-array",
            "snippet": "You can simply pre-allocate memory for the vector<vector<int>>, and copy the matrix into it in a double loop.",
            "query": "\"for (int j = m - 2; j >= 0; j--) {\nif (!visited[n - 1][j]) res.push_back(matrix[n - 1][j]);\n}\" cpp example site:github.com OR site:stackoverflow.com OR site:geeksforgeeks.org OR site:tutorialspoint.com",
            "query_priority": 0.6,
            "initial_score": 0.0,
            "similarity_score": 0.21869827259464847,
            "is_plagiarism": false
          },
          {
            "title": "CCC-Hackerrank/March-2023-CCC.md at main",
            "link": "https://github.com/VikashPR/CCC-Hackerrank/blob/main/March-2023-CCC.md",
            "snippet": "R 101 : Eat Less Python n = int(input()) c = [] while not c: c = list(map(int,input().split())) c.sort(reverse = True) result = 0 for i in range(",
            "query": "\"for (int j = m - 2; j >= 0; j--) {\nif (!visited[n - 1][j]) res.push_back(matrix[n - 1][j]);\n}\" cpp example site:github.com OR site:stackoverflow.com OR site:geeksforgeeks.org OR site:tutorialspoint.com",
            "query_priority": 0.6,
            "initial_score": 0.0,
            "similarity_score": 0.19057055176111015,
            "is_plagiarism": false
          },
          {
            "title": "Algorithm-Notes/README.md at master",
            "link": "https://github.com/xuezzou/Algorithm-Notes/blob/master/README.md",
            "snippet": "class Solution { public: /* * @param nums: A list of integers * @return: A list of integers includes the index of the first number and the index of the last ...",
            "query": "\"for (int i = 1; i < n; i++) {\nres.push_back(matrix[i][m - 1]);\nvisited[i][m - 1] = true;\n}\" cpp example site:github.com OR site:stackoverflow.com OR site:geeksforgeeks.org OR site:tutorialspoint.com",
            "query_priority": 0.6,
            "initial_score": 0.0,
            "similarity_score": 0.09552438004589578,
            "is_plagiarism": false
          },
          {
            "title": "C++ Vectors: Error in push_back member function call",
            "link": "https://stackoverflow.com/questions/72471441/c-vectors-error-in-push-back-member-function-call",
            "snippet": "I am trying to create the transpose of a matrix - by traversing into 2-D vectors and assigning the values of indices accordingly.",
            "query": "\"for (int j = 0; j < m; j++) {\nres.push_back(matrix[0][j]);\nvisited[0][j] = true;\n}\" cpp example  OR  OR  OR code example",
            "query_priority": 0.5,
            "initial_score": 0.0,
            "similarity_score": 0.059939164370982546,
            "is_plagiarism": false
          },
          {
            "title": "Solving a Leetcode problem daily \u2014 Day 3: Spiral Matrix",
            "link": "https://medium.com/@subhradeep_saha/solving-a-leetcode-problem-daily-day-3-spiral-matrix-e225fa1f15a9",
            "snippet": "Struggling with LeetCode's spiral order matrix problem? This comprehensive guide breaks it down with an efficient C++ code and detained ...",
            "query": "\"for (int j = 0; j < m; j++) {\nres.push_back(matrix[0][j]);\nvisited[0][j] = true;\n}\" cpp example  OR  OR  OR code example",
            "query_priority": 0.5,
            "initial_score": 0.0,
            "similarity_score": 0.059939164370982546,
            "is_plagiarism": false
          },
          {
            "title": "C++ Ford Fulkerson Algorithm for Maximum Flow",
            "link": "https://www.srcmake.com/home/cpp-ford-fulkerson-max-flow",
            "snippet": "The maximum flow problem is about finding the maximum amount of capacity, through a set of edges, that can get to an end destination.",
            "query": "\"for (int j = 0; j < m; j++) {\nres.push_back(matrix[0][j]);\nvisited[0][j] = true;\n}\" cpp example  OR  OR  OR code example",
            "query_priority": 0.5,
            "initial_score": 0.0,
            "similarity_score": 0.059939164370982546,
            "is_plagiarism": false
          },
          {
            "title": "cpp-contest/ccc all templates.cpp at master \u00b7 sunny-lan/cpp-contest",
            "link": "https://github.com/sunny-lan/cpp-contest/blob/master/ccc%20all%20templates.cpp",
            "snippet": "Almost all the problems I've done. Contribute to sunny-lan/cpp-contest development by creating an account on GitHub.",
            "query": "\"for (int j = 0; j < m; j++) {\nres.push_back(matrix[0][j]);\nvisited[0][j] = true;\n}\" cpp example  OR  OR  OR code example",
            "query_priority": 0.5,
            "initial_score": 0.0,
            "similarity_score": 0.059939164370982546,
            "is_plagiarism": false
          },
          {
            "title": "Abhishek Kumar Singh's Post",
            "link": "https://www.linkedin.com/posts/abhishekolympics_leetcode-blind75-codingjourney-activity-7189621579448750080-OMLP",
            "snippet": "Reverse revision of Blind 75 Just cracked the problem 62 of LeetCode's Blind 75 series! Problem: Rotate Image Problem link: ...",
            "query": "\"for (int j = 0; j < m; j++) {\nres.push_back(matrix[0][j]);\nvisited[0][j] = true;\n}\" cpp example  OR  OR  OR code example",
            "query_priority": 0.5,
            "initial_score": 0.0,
            "similarity_score": 0.059939164370982546,
            "is_plagiarism": false
          },
          {
            "title": "Solved Hi, i'm new to C++ and i need help with these",
            "link": "https://www.chegg.com/homework-help/questions-and-answers/hi-m-new-c-need-help-exerciseassuming-matrix-generated-randomly-code-index-0-0-start-botto-q113114981",
            "snippet": "Question: Hi, i'm new to C++ and i need help with these exerciseassuming i have these matrix which is generated randomly from my code, ...",
            "query": "\"for (int j = 0; j < m; j++) {\nres.push_back(matrix[0][j]);\nvisited[0][j] = true;\n}\" cpp example  OR  OR  OR code example",
            "query_priority": 0.5,
            "initial_score": 0.0,
            "similarity_score": 0.059939164370982546,
            "is_plagiarism": false
          },
          {
            "title": "int *array = new int[n]; what is this function actually doing?",
            "link": "https://stackoverflow.com/questions/5776529/int-array-new-intn-what-is-this-function-actually-doing",
            "snippet": "The new operator is allocating space for a block of n integers and assigning the memory address of that block to the int* variable array . The ...",
            "query": "\"for (int i = 1; i < n; i++) {\nres.push_back(matrix[i][m - 1]);\nvisited[i][m - 1] = true;\n}\" cpp example site:github.com OR site:stackoverflow.com OR site:geeksforgeeks.org OR site:tutorialspoint.com",
            "query_priority": 0.6,
            "initial_score": 0.0,
            "similarity_score": 0.059939164370982546,
            "is_plagiarism": false
          },
          {
            "title": "algorithm - Converging maze: Largest cycle",
            "link": "https://stackoverflow.com/questions/38583322/converging-maze-largest-cycle",
            "snippet": "The cells are named with an integer value from 0 to N-1. You need to find the the length of the largest cycle in the maze. Return -1 if there are no cycles.",
            "query": "\"for (int i = 1; i < n; i++) {\nres.push_back(matrix[i][m - 1]);\nvisited[i][m - 1] = true;\n}\" cpp example site:github.com OR site:stackoverflow.com OR site:geeksforgeeks.org OR site:tutorialspoint.com",
            "query_priority": 0.6,
            "initial_score": 0.0,
            "similarity_score": 0.059939164370982546,
            "is_plagiarism": false
          },
          {
            "title": "uclaacm/advanced-interview-prep20: UCLA ACM ICPC ...",
            "link": "https://github.com/uclaacm/advanced-interview-prep20",
            "snippet": "Array questions, often interchangeable with string questions are some of the most common questions asked during technical interviews.",
            "query": "\"for (int i = 1; i < n; i++) {\nres.push_back(matrix[i][m - 1]);\nvisited[i][m - 1] = true;\n}\" cpp example site:github.com OR site:stackoverflow.com OR site:geeksforgeeks.org OR site:tutorialspoint.com",
            "query_priority": 0.6,
            "initial_score": 0.0,
            "similarity_score": 0.059939164370982546,
            "is_plagiarism": false
          },
          {
            "title": "c++ - How to find the size of an int[]?",
            "link": "https://stackoverflow.com/questions/2037736/how-to-find-the-size-of-an-int",
            "snippet": "In order to correctly print the sizeof an array inside any function, pass the array by reference to that function (but you need to know the size ...",
            "query": "\"for (int i = 1; i < n; i++) {\nres.push_back(matrix[i][m - 1]);\nvisited[i][m - 1] = true;\n}\" cpp example site:github.com OR site:stackoverflow.com OR site:geeksforgeeks.org OR site:tutorialspoint.com",
            "query_priority": 0.6,
            "initial_score": 0.0,
            "similarity_score": 0.059939164370982546,
            "is_plagiarism": false
          },
          {
            "title": "Problem: Shortest path in a grid between multiple point ...",
            "link": "https://stackoverflow.com/questions/62765947/problem-shortest-path-in-a-grid-between-multiple-point-with-a-constraint",
            "snippet": "It is a bfs function it will iterate over the toHome map and find the shortest distance between the last food position to home.",
            "query": "\"for (int j = m - 2; j >= 0; j--) {\nif (!visited[n - 1][j]) res.push_back(matrix[n - 1][j]);\n}\" cpp example site:github.com OR site:stackoverflow.com OR site:geeksforgeeks.org OR site:tutorialspoint.com",
            "query_priority": 0.6,
            "initial_score": 0.0,
            "similarity_score": 0.059939164370982546,
            "is_plagiarism": false
          },
          {
            "title": "no match for 'operator='(operand type are 'std::vector<int> ...",
            "link": "https://stackoverflow.com/questions/44455669/no-match-for-operator-operand-type-are-stdvectorint-and-int",
            "snippet": "I'm new to c++ and I'm learning about vector. I wrote a basic code to see how it works but i get the following errors.",
            "query": "\"for (int j = m - 2; j >= 0; j--) {\nif (!visited[n - 1][j]) res.push_back(matrix[n - 1][j]);\n}\" cpp example site:github.com OR site:stackoverflow.com OR site:geeksforgeeks.org OR site:tutorialspoint.com",
            "query_priority": 0.6,
            "initial_score": 0.0,
            "similarity_score": 0.059939164370982546,
            "is_plagiarism": false
          },
          {
            "title": "C++ - No matching member function for call to 'push_back'",
            "link": "https://stackoverflow.com/questions/61306798/c-no-matching-member-function-for-call-to-push-back",
            "snippet": "The method push_back is there. The type that you send probably doesn't match. Try to read the compilation error and figure out what type was expected.",
            "query": "\"for (int j = m - 2; j >= 0; j--) {\nif (!visited[n - 1][j]) res.push_back(matrix[n - 1][j]);\n}\" cpp example site:github.com OR site:stackoverflow.com OR site:geeksforgeeks.org OR site:tutorialspoint.com",
            "query_priority": 0.6,
            "initial_score": 0.0,
            "similarity_score": 0.059939164370982546,
            "is_plagiarism": false
          },
          {
            "title": "C++ 3sum complexity",
            "link": "https://stackoverflow.com/questions/45093010/c-3sum-complexity",
            "snippet": "I was trying to solve the 3 sum problem in cpp. Given an array S of n integers, are there elements a, b, c in S such that a + b + c = 0? Find all unique ...",
            "query": "\"for (int j = m - 2; j >= 0; j--) {\nif (!visited[n - 1][j]) res.push_back(matrix[n - 1][j]);\n}\" cpp example site:github.com OR site:stackoverflow.com OR site:geeksforgeeks.org OR site:tutorialspoint.com",
            "query_priority": 0.6,
            "initial_score": 0.0,
            "similarity_score": 0.059939164370982546,
            "is_plagiarism": false
          },
          {
            "title": "emerencia/topcoder: Source code and lessons learned ...",
            "link": "https://github.com/emerencia/topcoder",
            "snippet": "This repository contains source code I wrote and things I learned from doing daily Topcoder programming competitions from 2013-2015.",
            "query": "\"for (int j = m - 2; j >= 0; j--) {\nif (!visited[n - 1][j]) res.push_back(matrix[n - 1][j]);\n}\" cpp example site:github.com OR site:stackoverflow.com OR site:geeksforgeeks.org OR site:tutorialspoint.com",
            "query_priority": 0.6,
            "initial_score": 0.0,
            "similarity_score": 0.059939164370982546,
            "is_plagiarism": false
          },
          {
            "title": "Finding all possible combinations of numbers to reach a ...",
            "link": "https://stackoverflow.com/questions/4632322/finding-all-possible-combinations-of-numbers-to-reach-a-given-sum",
            "snippet": "This problem can be solved with a recursive combinations of all possible sums filtering out those that reach the target.",
            "query": "\"for (int j = m - 2; j >= 0; j--) {\nif (!visited[n - 1][j]) res.push_back(matrix[n - 1][j]);\n}\" cpp example site:github.com OR site:stackoverflow.com OR site:geeksforgeeks.org OR site:tutorialspoint.com",
            "query_priority": 0.6,
            "initial_score": 0.0,
            "similarity_score": 0.059939164370982546,
            "is_plagiarism": false
          },
          {
            "title": "Print a given matrix in spiral form",
            "link": "https://www.geeksforgeeks.org/print-a-given-matrix-in-spiral-form/",
            "snippet": "We can print the matrix in a spiral order by dividing it into loops or boundaries. We print the elements of the outer boundary first, then move inward to print ...",
            "query": "\"for (int j = m - 2; j >= 0; j--) {\nif (!visited[n - 1][j]) res.push_back(matrix[n - 1][j]);\n}\" cpp example site:github.com OR site:stackoverflow.com OR site:geeksforgeeks.org OR site:tutorialspoint.com",
            "query_priority": 0.6,
            "initial_score": 0.0,
            "similarity_score": 0.059939164370982546,
            "is_plagiarism": false
          }
        ],
        "total_results": 28,
        "plagiarism_detected": true,
        "plagiarism_results": [
          {
            "title": "z3/examples/c++/example.cpp at master \u00b7 Z3Prover/z3",
            "link": "https://github.com/Z3Prover/z3/blob/master/examples/c++/example.cpp",
            "snippet": "{0,4,0,9,7,0,0,0,0}};. for (unsigned i = 0; i < 9; i++). for (unsigned j = 0; j < 9; j++). if (instance[i][j] != 0). s.add(x[i * 9 + j] == instance[i][j]);.",
            "query": "\"for (int j = 0; j < m; j++) {\nres.push_back(matrix[0][j]);\nvisited[0][j] = true;\n}\" cpp example  OR  OR  OR code example",
            "query_priority": 0.5,
            "initial_score": 0.0,
            "similarity_score": 0.5349494788159265,
            "is_plagiarism": true
          },
          {
            "title": "Antti Laaksonen Learning and Improving Algorithms ...",
            "link": "https://csunibo.github.io/algoritmi-e-strutture-di-dati/libri/guide-to-competitive-programming-learning-and-improving-algorithms.pdf",
            "snippet": "For example, the time complexity of the following code is O(nm): for (int i = 1; i <= n; i++) { for (int j = 1; j <= m; j++) { ... } } The time complexity ...",
            "query": "\"for (int j = 0; j < m; j++) {\nres.push_back(matrix[0][j]);\nvisited[0][j] = true;\n}\" cpp example  OR  OR  OR code example",
            "query_priority": 0.5,
            "initial_score": 0.0,
            "similarity_score": 0.4605736849524954,
            "is_plagiarism": true
          },
          {
            "title": "push_back problem on vector<vector<int> > - c++",
            "link": "https://stackoverflow.com/questions/5305010/push-back-problem-on-vectorvectorint",
            "snippet": "I wanted to store these 2 vectors in one container called no_1_2 and I used no_1_2[0].push_back(no1.at(i)) and no_1_2[1].push_back(no2.at(j)) ...",
            "query": "\"for (int j = m - 2; j >= 0; j--) {\nif (!visited[n - 1][j]) res.push_back(matrix[n - 1][j]);\n}\" cpp example site:github.com OR site:stackoverflow.com OR site:geeksforgeeks.org OR site:tutorialspoint.com",
            "query_priority": 0.6,
            "initial_score": 0.0,
            "similarity_score": 0.3231682692476468,
            "is_plagiarism": true
          },
          {
            "title": "Dijkstra's Algo Implementation using STL",
            "link": "https://stackoverflow.com/questions/40316141/dijkstras-algo-implementation-using-stl",
            "snippet": "You never write to the visited array. Hence edges might be scanned multiple times. Simple fix: Add a single line after the if(visited[x]) ...",
            "query": "\"for (int i = 1; i < n; i++) {\nres.push_back(matrix[i][m - 1]);\nvisited[i][m - 1] = true;\n}\" cpp example site:github.com OR site:stackoverflow.com OR site:geeksforgeeks.org OR site:tutorialspoint.com",
            "query_priority": 0.6,
            "initial_score": 0.0,
            "similarity_score": 0.3146819417390293,
            "is_plagiarism": true
          }
        ],
        "similarity_threshold": 0.3,
        "matching_sources": [
          "https://github.com/Z3Prover/z3/blob/master/examples/c++/example.cpp",
          "https://csunibo.github.io/algoritmi-e-strutture-di-dati/libri/guide-to-competitive-programming-learning-and-improving-algorithms.pdf",
          "https://stackoverflow.com/questions/5305010/push-back-problem-on-vectorvectorint",
          "https://stackoverflow.com/questions/40316141/dijkstras-algo-implementation-using-stl"
        ]
      },
      "DOC4SAM_sol2.txt": {
        "file": "/Users/guptasahaj01/Downloads/code_checker/Processing/core_backend/sessions/session_e9a631be802648d7a51a6b72d284ab5e/results/organized/solution2/DOC4SAM_sol2.txt",
        "language": "cpp",
        "timestamp": "2025-04-14T16:07:01.520392",
        "queries_used": [
          "\"for (int i = 0; i < m; ++i) result.push_back(matrix[0][i]);\nfor (int i = 1; i < n - 1; ++i) result.push_back(matrix[i][m - 1]);\nif (n > 1)\nfor (int i = m - 1; i >= 0; --i) result.push_back(matrix[n - 1][i]);\nif (m > 1)\nfor (int i = n - 2; i > 0; --i) result.push_back(matrix[i][0]);\nreturn result;\n}\n\nint main() {\nvector<vector<int>> matrix = {\n{1, 2, 3, 4}\" cpp example site:github.com OR site:stackoverflow.com OR site:geeksforgeeks.org OR site:tutorialspoint.com",
          "\"matrix size matrix\" cpp code example site:github.com OR site:stackoverflow.com OR site:geeksforgeeks.org OR site:tutorialspoint.com",
          "\"result push_back matrix\" cpp code example site:github.com OR site:stackoverflow.com OR site:geeksforgeeks.org OR site:tutorialspoint.com"
        ],
        "results": [
          {
            "title": "How to use Chat-GPT to solve Coding Problems?",
            "link": "https://www.geeksforgeeks.org/how-to-use-chat-gpt-to-solve-coding-problems/",
            "snippet": "Example: Convert the below code into Java. C++. C++. #include <bits ... result.push_back(matrix[top][i]);. } top++;. for ( int i = top; i ...",
            "query": "\"result push_back matrix\" cpp code example site:github.com OR site:stackoverflow.com OR site:geeksforgeeks.org OR site:tutorialspoint.com",
            "query_priority": 0.5,
            "initial_score": 0.0,
            "similarity_score": 0.49136376210722776,
            "is_plagiarism": true
          },
          {
            "title": "assign a double matrix to CvMat opencv - c++",
            "link": "https://stackoverflow.com/questions/9958397/assign-a-double-matrix-to-cvmat-opencv",
            "snippet": "I think you need to set these first: matrix size, matrix type. Example in C++: double d[2]; cv::Mat* cvdata = new cv::Mat(1, 2, CV_64F);",
            "query": "\"matrix size matrix\" cpp code example site:github.com OR site:stackoverflow.com OR site:geeksforgeeks.org OR site:tutorialspoint.com",
            "query_priority": 0.5,
            "initial_score": 0.0,
            "similarity_score": 0.4874988555534219,
            "is_plagiarism": true
          },
          {
            "title": "LeetCode/C++/054. Spiral Matrix.cpp at master",
            "link": "https://github.com/liuchuo/LeetCode/blob/master/C++/054.%20Spiral%20Matrix.cpp",
            "snippet": "For example, Given the following matrix: [ [ 1, 2, 3 ], [ 4, 5, 6 ] ... result.push_back(matrix[x][j]); for (int i = x + 1; i <= m - 1; i++) result ...",
            "query": "\"result push_back matrix\" cpp code example site:github.com OR site:stackoverflow.com OR site:geeksforgeeks.org OR site:tutorialspoint.com",
            "query_priority": 0.5,
            "initial_score": 0.0,
            "similarity_score": 0.47946858901949985,
            "is_plagiarism": true
          },
          {
            "title": "JAERO/JAERO/aerol.cpp at master \u00b7 jontio/JAERO",
            "link": "https://github.com/jontio/JAERO/blob/master/JAERO/aerol.cpp",
            "snippet": "... <matrix.size()); matrix[k]=block[entry]; k++; } } return matrix; } QVector<int> &AeroLInterleaver::deinterleave(QVector<int> &block) { assert(block.size ...",
            "query": "\"matrix size matrix\" cpp code example site:github.com OR site:stackoverflow.com OR site:geeksforgeeks.org OR site:tutorialspoint.com",
            "query_priority": 0.5,
            "initial_score": 0.0,
            "similarity_score": 0.44207000606260327,
            "is_plagiarism": true
          },
          {
            "title": "\"Unhandled exception\"/\"Access violation writing location\" error ...",
            "link": "https://stackoverflow.com/questions/2881454/unhandled-exception-access-violation-writing-location-error-with-referenced",
            "snippet": "... matrix size (matrix is square) c = new change *[count]; //resize pointers with matrix size for(i=0; i<count; i++) c[i] = new change[count]; file.clear ...",
            "query": "\"matrix size matrix\" cpp code example site:github.com OR site:stackoverflow.com OR site:geeksforgeeks.org OR site:tutorialspoint.com",
            "query_priority": 0.5,
            "initial_score": 0.0,
            "similarity_score": 0.37909668610780445,
            "is_plagiarism": true
          },
          {
            "title": "Design a simple C++ iterator for Matrix",
            "link": "https://stackoverflow.com/questions/56816493/design-a-simple-c-iterator-for-matrix",
            "snippet": "I also provide a complete and tested source code example. The source ... matrix size Matrix(size_t numberOfRows, size_t numberOfColumns); ...",
            "query": "\"matrix size matrix\" cpp code example site:github.com OR site:stackoverflow.com OR site:geeksforgeeks.org OR site:tutorialspoint.com",
            "query_priority": 0.5,
            "initial_score": 0.0,
            "similarity_score": 0.31515042280636557,
            "is_plagiarism": true
          },
          {
            "title": "c++ custom iterator for matrix class",
            "link": "https://stackoverflow.com/questions/41106753/c-custom-iterator-for-matrix-class",
            "snippet": "I also provide a complete and tested source code example. The source ... matrix size Matrix(size_t numberOfRows, size_t numberOfColumns); ...",
            "query": "\"matrix size matrix\" cpp code example site:github.com OR site:stackoverflow.com OR site:geeksforgeeks.org OR site:tutorialspoint.com",
            "query_priority": 0.5,
            "initial_score": 0.0,
            "similarity_score": 0.31515042280636557,
            "is_plagiarism": true
          },
          {
            "title": "Most efficient way to populate vector with indices ...",
            "link": "https://stackoverflow.com/questions/53461322/most-efficient-way-to-populate-vector-with-indices-corresponding-to-columns-of-a",
            "snippet": "... matrix size Matrix(size_t numberOfRows, size_t numberOfColumns); // Iterators for rows are simple, becuase we have vectors of columns. Use ...",
            "query": "\"matrix size matrix\" cpp code example site:github.com OR site:stackoverflow.com OR site:geeksforgeeks.org OR site:tutorialspoint.com",
            "query_priority": 0.5,
            "initial_score": 0.0,
            "similarity_score": 0.31515042280636557,
            "is_plagiarism": true
          },
          {
            "title": "cv::Mat Class Reference",
            "link": "https://docs.opencv.org/3.4/d3/d63/classcv_1_1Mat.html",
            "snippet": "This is an O(1) operation, regardless of the matrix size. The underlying data of the new matrix is shared with the original matrix. Here is the example of one ...",
            "query": "\"for (int i = 0; i < m; ++i) result.push_back(matrix[0][i]);\nfor (int i = 1; i < n - 1; ++i) result.push_back(matrix[i][m - 1]);\nif (n > 1)\nfor (int i = m - 1; i >= 0; --i) result.push_back(matrix[n - 1][i]);\nif (m > 1)\nfor (int i = n - 2; i > 0; --i) result.push_back(matrix[i][0]);\nreturn result;\n}\n\nint main() {\nvector<vector<int>> matrix = {\n{1, 2, 3, 4}\" cpp example  OR  OR  OR code example",
            "query_priority": 0.5,
            "initial_score": 0.0,
            "similarity_score": 0.3134004228063656,
            "is_plagiarism": true
          },
          {
            "title": "Vector push_back resulting in doubled int",
            "link": "https://cplusplus.com/forum/beginner/109739/",
            "snippet": "Hi everyone, I am having a problem. I am piping 10 ints into this program(from another program provided to me), and for some reason it is taking the 9th int ...",
            "query": "\"for (int i = 0; i < m; ++i) result.push_back(matrix[0][i]);\nfor (int i = 1; i < n - 1; ++i) result.push_back(matrix[i][m - 1]);\nif (n > 1)\nfor (int i = m - 1; i >= 0; --i) result.push_back(matrix[n - 1][i]);\nif (m > 1)\nfor (int i = n - 2; i > 0; --i) result.push_back(matrix[i][0]);\nreturn result;\n}\n\nint main() {\nvector<vector<int>> matrix = {\n{1, 2, 3, 4}\" cpp example  OR  OR  OR code example",
            "query_priority": 0.5,
            "initial_score": 0.0,
            "similarity_score": 0.3134004228063656,
            "is_plagiarism": true
          },
          {
            "title": "CSES DP section editorial",
            "link": "https://codeforces.com/blog/entry/70018",
            "snippet": "So we can locate x position by binary search (std::lower_bound in C++ directly gives position x+1). The final answer is the length of the dp array after ...",
            "query": "\"for (int i = 0; i < m; ++i) result.push_back(matrix[0][i]);\nfor (int i = 1; i < n - 1; ++i) result.push_back(matrix[i][m - 1]);\nif (n > 1)\nfor (int i = m - 1; i >= 0; --i) result.push_back(matrix[n - 1][i]);\nif (m > 1)\nfor (int i = n - 2; i > 0; --i) result.push_back(matrix[i][0]);\nreturn result;\n}\n\nint main() {\nvector<vector<int>> matrix = {\n{1, 2, 3, 4}\" cpp example  OR  OR  OR code example",
            "query_priority": 0.5,
            "initial_score": 0.0,
            "similarity_score": 0.3134004228063656,
            "is_plagiarism": true
          },
          {
            "title": "Fortran macro function for literal string?",
            "link": "https://stackoverflow.com/questions/31523615/fortran-macro-function-for-literal-string",
            "snippet": "For example: print*, 'Now giving information about Matrix1' call mysub ... matrix, size(matrix,1), size(matrix,2)) print*, 'About to do ...",
            "query": "\"matrix size matrix\" cpp code example site:github.com OR site:stackoverflow.com OR site:geeksforgeeks.org OR site:tutorialspoint.com",
            "query_priority": 0.5,
            "initial_score": 0.0,
            "similarity_score": 0.3134004228063656,
            "is_plagiarism": true
          },
          {
            "title": "davidm/lua-matrix",
            "link": "https://github.com/davidm/lua-matrix/blob/master/lua/matrix.lua",
            "snippet": "... matrix.size matrix.solve matrix.sqrt matrix.sub matrix.subm matrix.tostring matrix.transpose matrix.type See code and test_matrix.lua. ... See code and ...",
            "query": "\"matrix size matrix\" cpp code example site:github.com OR site:stackoverflow.com OR site:geeksforgeeks.org OR site:tutorialspoint.com",
            "query_priority": 0.5,
            "initial_score": 0.0,
            "similarity_score": 0.1802992358643061,
            "is_plagiarism": false
          },
          {
            "title": "ray2501/tcl-opencv: Tcl extension for OpenCV library",
            "link": "https://github.com/ray2501/tcl-opencv",
            "snippet": "See BUILDING.md to know how to build the extension. Implement commands. Matrix. MATRIX dims MATRIX size MATRIX rows MATRIX cols ...",
            "query": "\"matrix size matrix\" cpp code example site:github.com OR site:stackoverflow.com OR site:geeksforgeeks.org OR site:tutorialspoint.com",
            "query_priority": 0.5,
            "initial_score": 0.0,
            "similarity_score": 0.1494253700388731,
            "is_plagiarism": false
          },
          {
            "title": "leetcode/solution/0000-0099/0054.Spiral Matrix ...",
            "link": "https://github.com/doocs/leetcode/blob/main/solution/0000-0099/0054.Spiral%20Matrix/README_EN.md",
            "snippet": "Given an mxn matrix, return all elements of the matrix in spiral order. Example 1: Input: matrix = [[1,2,3],[4,5,6],[7,8,9]] Output: [1,2,3,6,9,8,7,4,5]",
            "query": "\"for (int i = 0; i < m; ++i) result.push_back(matrix[0][i]);\nfor (int i = 1; i < n - 1; ++i) result.push_back(matrix[i][m - 1]);\nif (n > 1)\nfor (int i = m - 1; i >= 0; --i) result.push_back(matrix[n - 1][i]);\nif (m > 1)\nfor (int i = n - 2; i > 0; --i) result.push_back(matrix[i][0]);\nreturn result;\n}\n\nint main() {\nvector<vector<int>> matrix = {\n{1, 2, 3, 4}\" cpp example  OR  OR  OR code example",
            "query_priority": 0.5,
            "initial_score": 0.0,
            "similarity_score": 0.10777623592574247,
            "is_plagiarism": false
          },
          {
            "title": "C++ Vectors: Error in push_back member function call",
            "link": "https://stackoverflow.com/questions/72471441/c-vectors-error-in-push-back-member-function-call",
            "snippet": "I am trying to create the transpose of a matrix - by traversing into 2-D vectors and assigning the values of indices accordingly.",
            "query": "\"for (int i = 0; i < m; ++i) result.push_back(matrix[0][i]);\nfor (int i = 1; i < n - 1; ++i) result.push_back(matrix[i][m - 1]);\nif (n > 1)\nfor (int i = m - 1; i >= 0; --i) result.push_back(matrix[n - 1][i]);\nif (m > 1)\nfor (int i = n - 2; i > 0; --i) result.push_back(matrix[i][0]);\nreturn result;\n}\n\nint main() {\nvector<vector<int>> matrix = {\n{1, 2, 3, 4}\" cpp example  OR  OR  OR code example",
            "query_priority": 0.5,
            "initial_score": 0.0,
            "similarity_score": 0.07470355731225298,
            "is_plagiarism": false
          },
          {
            "title": "C++ \"AddressSanitizer\" error involving a vector. What is ...",
            "link": "https://www.reddit.com/r/cpp_questions/comments/eeodtl/c_addresssanitizer_error_involving_a_vector_what/",
            "snippet": "I am doing a Leetcode problem that passes all testcases when the same logic is used using Java, but when I do it in C++ using a vector, I get an \" ...",
            "query": "\"for (int i = 0; i < m; ++i) result.push_back(matrix[0][i]);\nfor (int i = 1; i < n - 1; ++i) result.push_back(matrix[i][m - 1]);\nif (n > 1)\nfor (int i = m - 1; i >= 0; --i) result.push_back(matrix[n - 1][i]);\nif (m > 1)\nfor (int i = n - 2; i > 0; --i) result.push_back(matrix[i][0]);\nreturn result;\n}\n\nint main() {\nvector<vector<int>> matrix = {\n{1, 2, 3, 4}\" cpp example  OR  OR  OR code example",
            "query_priority": 0.5,
            "initial_score": 0.0,
            "similarity_score": 0.07470355731225298,
            "is_plagiarism": false
          },
          {
            "title": "LeetCode \u2014 Spiral Matrix. Problem statement",
            "link": "https://medium.com/nerd-for-tech/leetcode-spiral-matrix-60d7568b50ca",
            "snippet": "So the problem can be solved by dividing the matrix into boundaries. We need to use four loops that print the array element in the spiral ...",
            "query": "\"for (int i = 0; i < m; ++i) result.push_back(matrix[0][i]);\nfor (int i = 1; i < n - 1; ++i) result.push_back(matrix[i][m - 1]);\nif (n > 1)\nfor (int i = m - 1; i >= 0; --i) result.push_back(matrix[n - 1][i]);\nif (m > 1)\nfor (int i = n - 2; i > 0; --i) result.push_back(matrix[i][0]);\nreturn result;\n}\n\nint main() {\nvector<vector<int>> matrix = {\n{1, 2, 3, 4}\" cpp example  OR  OR  OR code example",
            "query_priority": 0.5,
            "initial_score": 0.0,
            "similarity_score": 0.07470355731225298,
            "is_plagiarism": false
          },
          {
            "title": "2D vector usage - C++ Forum",
            "link": "https://cplusplus.com/forum/beginner/121741/",
            "snippet": "I know there are multiple threads relating to the declaration and usage of 2D vectors, but I'm having trouble wrapping my head around how it ...",
            "query": "\"for (int i = 0; i < m; ++i) result.push_back(matrix[0][i]);\nfor (int i = 1; i < n - 1; ++i) result.push_back(matrix[i][m - 1]);\nif (n > 1)\nfor (int i = m - 1; i >= 0; --i) result.push_back(matrix[n - 1][i]);\nif (m > 1)\nfor (int i = n - 2; i > 0; --i) result.push_back(matrix[i][0]);\nreturn result;\n}\n\nint main() {\nvector<vector<int>> matrix = {\n{1, 2, 3, 4}\" cpp example  OR  OR  OR code example",
            "query_priority": 0.5,
            "initial_score": 0.0,
            "similarity_score": 0.07470355731225298,
            "is_plagiarism": false
          },
          {
            "title": "LeetCode_problems_solution/source-code/Spiral_Matrix. ...",
            "link": "https://github.com/kaidul/LeetCode_problems_solution/blob/master/source-code/Spiral_Matrix.cpp",
            "snippet": "Solutions to all problems of Leetcode online judge written in C++ and Java - LeetCode_problems_solution/source-code/Spiral_Matrix.cpp at master ...",
            "query": "\"for (int i = 0; i < m; ++i) result.push_back(matrix[0][i]);\nfor (int i = 1; i < n - 1; ++i) result.push_back(matrix[i][m - 1]);\nif (n > 1)\nfor (int i = m - 1; i >= 0; --i) result.push_back(matrix[n - 1][i]);\nif (m > 1)\nfor (int i = n - 2; i > 0; --i) result.push_back(matrix[i][0]);\nreturn result;\n}\n\nint main() {\nvector<vector<int>> matrix = {\n{1, 2, 3, 4}\" cpp example  OR  OR  OR code example",
            "query_priority": 0.5,
            "initial_score": 0.0,
            "similarity_score": 0.07470355731225298,
            "is_plagiarism": false
          },
          {
            "title": "Solution Guide - Developers Wiki",
            "link": "https://www.hackerearth.com/docs/wiki/developers/solution-guide/",
            "snippet": "You can see the practice problems list and select a problem from there. Then, you need to select the language from tabs and write your code in the editor.",
            "query": "\"for (int i = 0; i < m; ++i) result.push_back(matrix[0][i]);\nfor (int i = 1; i < n - 1; ++i) result.push_back(matrix[i][m - 1]);\nif (n > 1)\nfor (int i = m - 1; i >= 0; --i) result.push_back(matrix[n - 1][i]);\nif (m > 1)\nfor (int i = n - 2; i > 0; --i) result.push_back(matrix[i][0]);\nreturn result;\n}\n\nint main() {\nvector<vector<int>> matrix = {\n{1, 2, 3, 4}\" cpp example  OR  OR  OR code example",
            "query_priority": 0.5,
            "initial_score": 0.0,
            "similarity_score": 0.07470355731225298,
            "is_plagiarism": false
          }
        ],
        "total_results": 21,
        "plagiarism_detected": true,
        "plagiarism_results": [
          {
            "title": "How to use Chat-GPT to solve Coding Problems?",
            "link": "https://www.geeksforgeeks.org/how-to-use-chat-gpt-to-solve-coding-problems/",
            "snippet": "Example: Convert the below code into Java. C++. C++. #include <bits ... result.push_back(matrix[top][i]);. } top++;. for ( int i = top; i ...",
            "query": "\"result push_back matrix\" cpp code example site:github.com OR site:stackoverflow.com OR site:geeksforgeeks.org OR site:tutorialspoint.com",
            "query_priority": 0.5,
            "initial_score": 0.0,
            "similarity_score": 0.49136376210722776,
            "is_plagiarism": true
          },
          {
            "title": "assign a double matrix to CvMat opencv - c++",
            "link": "https://stackoverflow.com/questions/9958397/assign-a-double-matrix-to-cvmat-opencv",
            "snippet": "I think you need to set these first: matrix size, matrix type. Example in C++: double d[2]; cv::Mat* cvdata = new cv::Mat(1, 2, CV_64F);",
            "query": "\"matrix size matrix\" cpp code example site:github.com OR site:stackoverflow.com OR site:geeksforgeeks.org OR site:tutorialspoint.com",
            "query_priority": 0.5,
            "initial_score": 0.0,
            "similarity_score": 0.4874988555534219,
            "is_plagiarism": true
          },
          {
            "title": "LeetCode/C++/054. Spiral Matrix.cpp at master",
            "link": "https://github.com/liuchuo/LeetCode/blob/master/C++/054.%20Spiral%20Matrix.cpp",
            "snippet": "For example, Given the following matrix: [ [ 1, 2, 3 ], [ 4, 5, 6 ] ... result.push_back(matrix[x][j]); for (int i = x + 1; i <= m - 1; i++) result ...",
            "query": "\"result push_back matrix\" cpp code example site:github.com OR site:stackoverflow.com OR site:geeksforgeeks.org OR site:tutorialspoint.com",
            "query_priority": 0.5,
            "initial_score": 0.0,
            "similarity_score": 0.47946858901949985,
            "is_plagiarism": true
          },
          {
            "title": "JAERO/JAERO/aerol.cpp at master \u00b7 jontio/JAERO",
            "link": "https://github.com/jontio/JAERO/blob/master/JAERO/aerol.cpp",
            "snippet": "... <matrix.size()); matrix[k]=block[entry]; k++; } } return matrix; } QVector<int> &AeroLInterleaver::deinterleave(QVector<int> &block) { assert(block.size ...",
            "query": "\"matrix size matrix\" cpp code example site:github.com OR site:stackoverflow.com OR site:geeksforgeeks.org OR site:tutorialspoint.com",
            "query_priority": 0.5,
            "initial_score": 0.0,
            "similarity_score": 0.44207000606260327,
            "is_plagiarism": true
          },
          {
            "title": "\"Unhandled exception\"/\"Access violation writing location\" error ...",
            "link": "https://stackoverflow.com/questions/2881454/unhandled-exception-access-violation-writing-location-error-with-referenced",
            "snippet": "... matrix size (matrix is square) c = new change *[count]; //resize pointers with matrix size for(i=0; i<count; i++) c[i] = new change[count]; file.clear ...",
            "query": "\"matrix size matrix\" cpp code example site:github.com OR site:stackoverflow.com OR site:geeksforgeeks.org OR site:tutorialspoint.com",
            "query_priority": 0.5,
            "initial_score": 0.0,
            "similarity_score": 0.37909668610780445,
            "is_plagiarism": true
          }
        ],
        "similarity_threshold": 0.3,
        "matching_sources": [
          "https://www.geeksforgeeks.org/how-to-use-chat-gpt-to-solve-coding-problems/",
          "https://stackoverflow.com/questions/9958397/assign-a-double-matrix-to-cvmat-opencv",
          "https://github.com/liuchuo/LeetCode/blob/master/C++/054.%20Spiral%20Matrix.cpp",
          "https://github.com/jontio/JAERO/blob/master/JAERO/aerol.cpp",
          "https://stackoverflow.com/questions/2881454/unhandled-exception-access-violation-writing-location-error-with-referenced"
        ]
      },
      "DOC1SAM_sol2.txt": {
        "file": "/Users/guptasahaj01/Downloads/code_checker/Processing/core_backend/sessions/session_e9a631be802648d7a51a6b72d284ab5e/results/organized/solution2/DOC1SAM_sol2.txt",
        "language": "cpp",
        "timestamp": "2025-04-14T16:07:17.476134",
        "queries_used": [
          "\"for (int i = 0; i < m; i++) res.push_back(matrix[0][i]);\nfor (int i = 1; i < n; i++) res.push_back(matrix[i][m - 1]);\nif (n > 1)\nfor (int i = m - 2; i >= 0; i--) res.push_back(matrix[n - 1][i]);\nif (m > 1)\nfor (int i = n - 2; i > 0; i--) res.push_back(matrix[i][0]);\nreturn res;\n}\n\nint main() {\nvector<vector<int>> matrix = {\n{1, 2, 3}\" cpp example site:github.com OR site:stackoverflow.com OR site:geeksforgeeks.org OR site:tutorialspoint.com",
          "\"matrix size matrix\" cpp code example site:github.com OR site:stackoverflow.com OR site:geeksforgeeks.org OR site:tutorialspoint.com",
          "\"result boundaryTraversal matrix\" cpp code example site:github.com OR site:stackoverflow.com OR site:geeksforgeeks.org OR site:tutorialspoint.com"
        ],
        "results": [
          {
            "title": "assign a double matrix to CvMat opencv - c++",
            "link": "https://stackoverflow.com/questions/9958397/assign-a-double-matrix-to-cvmat-opencv",
            "snippet": "I think you need to set these first: matrix size, matrix type. Example in C++: double d[2]; cv::Mat* cvdata = new cv::Mat(1, 2, CV_64F);",
            "query": "\"matrix size matrix\" cpp code example site:github.com OR site:stackoverflow.com OR site:geeksforgeeks.org OR site:tutorialspoint.com",
            "query_priority": 0.5,
            "initial_score": 0.0,
            "similarity_score": 0.49108174325395665,
            "is_plagiarism": true
          },
          {
            "title": "Boundary elements of a Matrix",
            "link": "https://www.geeksforgeeks.org/boundary-elements-matrix/",
            "snippet": "vector< int > result = boundaryTraversal(matrix, n, m);. // Print the non-boundary elements. cout << \"Boundary Traversal: \" ;. for ( int i = 0 ...",
            "query": "\"result boundaryTraversal matrix\" cpp code example site:github.com OR site:stackoverflow.com OR site:geeksforgeeks.org OR site:tutorialspoint.com",
            "query_priority": 0.5,
            "initial_score": 0.0,
            "similarity_score": 0.46567795637855414,
            "is_plagiarism": true
          },
          {
            "title": "JAERO/JAERO/aerol.cpp at master \u00b7 jontio/JAERO",
            "link": "https://github.com/jontio/JAERO/blob/master/JAERO/aerol.cpp",
            "snippet": "... <matrix.size()); matrix[k]=block[entry]; k++; } } return matrix; } QVector<int> &AeroLInterleaver::deinterleave(QVector<int> &block) { assert(block.size ...",
            "query": "\"matrix size matrix\" cpp code example site:github.com OR site:stackoverflow.com OR site:geeksforgeeks.org OR site:tutorialspoint.com",
            "query_priority": 0.5,
            "initial_score": 0.0,
            "similarity_score": 0.44600915842329314,
            "is_plagiarism": true
          },
          {
            "title": "\"Unhandled exception\"/\"Access violation writing location\" error ...",
            "link": "https://stackoverflow.com/questions/2881454/unhandled-exception-access-violation-writing-location-error-with-referenced",
            "snippet": "... matrix size (matrix is square) c = new change *[count]; //resize pointers with matrix size for(i=0; i<count; i++) c[i] = new change[count]; file.clear ...",
            "query": "\"matrix size matrix\" cpp code example site:github.com OR site:stackoverflow.com OR site:geeksforgeeks.org OR site:tutorialspoint.com",
            "query_priority": 0.5,
            "initial_score": 0.0,
            "similarity_score": 0.3826795738083392,
            "is_plagiarism": true
          },
          {
            "title": "Design a simple C++ iterator for Matrix",
            "link": "https://stackoverflow.com/questions/56816493/design-a-simple-c-iterator-for-matrix",
            "snippet": "I also provide a complete and tested source code example. The source ... matrix size Matrix(size_t numberOfRows, size_t numberOfColumns); ...",
            "query": "\"matrix size matrix\" cpp code example site:github.com OR site:stackoverflow.com OR site:geeksforgeeks.org OR site:tutorialspoint.com",
            "query_priority": 0.5,
            "initial_score": 0.0,
            "similarity_score": 0.31873331050690035,
            "is_plagiarism": true
          },
          {
            "title": "c++ custom iterator for matrix class",
            "link": "https://stackoverflow.com/questions/41106753/c-custom-iterator-for-matrix-class",
            "snippet": "I also provide a complete and tested source code example. The source ... matrix size Matrix(size_t numberOfRows, size_t numberOfColumns); ...",
            "query": "\"matrix size matrix\" cpp code example site:github.com OR site:stackoverflow.com OR site:geeksforgeeks.org OR site:tutorialspoint.com",
            "query_priority": 0.5,
            "initial_score": 0.0,
            "similarity_score": 0.31873331050690035,
            "is_plagiarism": true
          },
          {
            "title": "Most efficient way to populate vector with indices ...",
            "link": "https://stackoverflow.com/questions/53461322/most-efficient-way-to-populate-vector-with-indices-corresponding-to-columns-of-a",
            "snippet": "... matrix size Matrix(size_t numberOfRows, size_t numberOfColumns); // Iterators for rows are simple, becuase we have vectors of columns. Use ...",
            "query": "\"matrix size matrix\" cpp code example site:github.com OR site:stackoverflow.com OR site:geeksforgeeks.org OR site:tutorialspoint.com",
            "query_priority": 0.5,
            "initial_score": 0.0,
            "similarity_score": 0.31873331050690035,
            "is_plagiarism": true
          },
          {
            "title": "Fortran macro function for literal string?",
            "link": "https://stackoverflow.com/questions/31523615/fortran-macro-function-for-literal-string",
            "snippet": "For example: print*, 'Now giving information about Matrix1' call mysub ... matrix, size(matrix,1), size(matrix,2)) print*, 'About to do ...",
            "query": "\"matrix size matrix\" cpp code example site:github.com OR site:stackoverflow.com OR site:geeksforgeeks.org OR site:tutorialspoint.com",
            "query_priority": 0.5,
            "initial_score": 0.0,
            "similarity_score": 0.3169833105069003,
            "is_plagiarism": true
          },
          {
            "title": "davidm/lua-matrix",
            "link": "https://github.com/davidm/lua-matrix/blob/master/lua/matrix.lua",
            "snippet": "... matrix.size matrix.solve matrix.sqrt matrix.sub matrix.subm matrix.tostring matrix.transpose matrix.type See code and test_matrix.lua. ... See code and ...",
            "query": "\"matrix size matrix\" cpp code example site:github.com OR site:stackoverflow.com OR site:geeksforgeeks.org OR site:tutorialspoint.com",
            "query_priority": 0.5,
            "initial_score": 0.0,
            "similarity_score": 0.1886505225235278,
            "is_plagiarism": false
          },
          {
            "title": "ray2501/tcl-opencv: Tcl extension for OpenCV library",
            "link": "https://github.com/ray2501/tcl-opencv",
            "snippet": "See BUILDING.md to know how to build the extension. Implement commands. Matrix. MATRIX dims MATRIX size MATRIX rows MATRIX cols ...",
            "query": "\"matrix size matrix\" cpp code example site:github.com OR site:stackoverflow.com OR site:geeksforgeeks.org OR site:tutorialspoint.com",
            "query_priority": 0.5,
            "initial_score": 0.0,
            "similarity_score": 0.15634660901902098,
            "is_plagiarism": false
          }
        ],
        "total_results": 10,
        "plagiarism_detected": true,
        "plagiarism_results": [
          {
            "title": "assign a double matrix to CvMat opencv - c++",
            "link": "https://stackoverflow.com/questions/9958397/assign-a-double-matrix-to-cvmat-opencv",
            "snippet": "I think you need to set these first: matrix size, matrix type. Example in C++: double d[2]; cv::Mat* cvdata = new cv::Mat(1, 2, CV_64F);",
            "query": "\"matrix size matrix\" cpp code example site:github.com OR site:stackoverflow.com OR site:geeksforgeeks.org OR site:tutorialspoint.com",
            "query_priority": 0.5,
            "initial_score": 0.0,
            "similarity_score": 0.49108174325395665,
            "is_plagiarism": true
          },
          {
            "title": "Boundary elements of a Matrix",
            "link": "https://www.geeksforgeeks.org/boundary-elements-matrix/",
            "snippet": "vector< int > result = boundaryTraversal(matrix, n, m);. // Print the non-boundary elements. cout << \"Boundary Traversal: \" ;. for ( int i = 0 ...",
            "query": "\"result boundaryTraversal matrix\" cpp code example site:github.com OR site:stackoverflow.com OR site:geeksforgeeks.org OR site:tutorialspoint.com",
            "query_priority": 0.5,
            "initial_score": 0.0,
            "similarity_score": 0.46567795637855414,
            "is_plagiarism": true
          },
          {
            "title": "JAERO/JAERO/aerol.cpp at master \u00b7 jontio/JAERO",
            "link": "https://github.com/jontio/JAERO/blob/master/JAERO/aerol.cpp",
            "snippet": "... <matrix.size()); matrix[k]=block[entry]; k++; } } return matrix; } QVector<int> &AeroLInterleaver::deinterleave(QVector<int> &block) { assert(block.size ...",
            "query": "\"matrix size matrix\" cpp code example site:github.com OR site:stackoverflow.com OR site:geeksforgeeks.org OR site:tutorialspoint.com",
            "query_priority": 0.5,
            "initial_score": 0.0,
            "similarity_score": 0.44600915842329314,
            "is_plagiarism": true
          },
          {
            "title": "\"Unhandled exception\"/\"Access violation writing location\" error ...",
            "link": "https://stackoverflow.com/questions/2881454/unhandled-exception-access-violation-writing-location-error-with-referenced",
            "snippet": "... matrix size (matrix is square) c = new change *[count]; //resize pointers with matrix size for(i=0; i<count; i++) c[i] = new change[count]; file.clear ...",
            "query": "\"matrix size matrix\" cpp code example site:github.com OR site:stackoverflow.com OR site:geeksforgeeks.org OR site:tutorialspoint.com",
            "query_priority": 0.5,
            "initial_score": 0.0,
            "similarity_score": 0.3826795738083392,
            "is_plagiarism": true
          },
          {
            "title": "Design a simple C++ iterator for Matrix",
            "link": "https://stackoverflow.com/questions/56816493/design-a-simple-c-iterator-for-matrix",
            "snippet": "I also provide a complete and tested source code example. The source ... matrix size Matrix(size_t numberOfRows, size_t numberOfColumns); ...",
            "query": "\"matrix size matrix\" cpp code example site:github.com OR site:stackoverflow.com OR site:geeksforgeeks.org OR site:tutorialspoint.com",
            "query_priority": 0.5,
            "initial_score": 0.0,
            "similarity_score": 0.31873331050690035,
            "is_plagiarism": true
          }
        ],
        "similarity_threshold": 0.3,
        "matching_sources": [
          "https://stackoverflow.com/questions/9958397/assign-a-double-matrix-to-cvmat-opencv",
          "https://www.geeksforgeeks.org/boundary-elements-matrix/",
          "https://github.com/jontio/JAERO/blob/master/JAERO/aerol.cpp",
          "https://stackoverflow.com/questions/2881454/unhandled-exception-access-violation-writing-location-error-with-referenced",
          "https://stackoverflow.com/questions/56816493/design-a-simple-c-iterator-for-matrix"
        ]
      },
      "DOC8SAM_sol2.txt": {
        "file": "/Users/guptasahaj01/Downloads/code_checker/Processing/core_backend/sessions/session_e9a631be802648d7a51a6b72d284ab5e/results/organized/solution2/DOC8SAM_sol2.txt",
        "language": "cpp",
        "timestamp": "2025-04-14T16:07:24.974487",
        "queries_used": [
          "\"for (int j = 0; j < m; ++j) push(0, j);\nfor (int i = 1; i < n; ++i) push(i, m - 1);\nif (n > 1)\nfor (int j = m - 2; j >= 0; --j) push(n - 1, j);\nif (m > 1)\nfor (int i = n - 2; i > 0; --i) push(i, 0);\nreturn res;\n}\n\nint main() {\nvector<vector<int>> matrix = {\n{1, 2, 3, 4}\" cpp example site:github.com OR site:stackoverflow.com OR site:geeksforgeeks.org OR site:tutorialspoint.com",
          "\"matrix size matrix\" cpp code example site:github.com OR site:stackoverflow.com OR site:geeksforgeeks.org OR site:tutorialspoint.com",
          "\"result boundaryTraversal matrix\" cpp code example site:github.com OR site:stackoverflow.com OR site:geeksforgeeks.org OR site:tutorialspoint.com"
        ],
        "results": [
          {
            "title": "Boundary elements of a Matrix",
            "link": "https://www.geeksforgeeks.org/boundary-elements-matrix/",
            "snippet": "vector< int > result = boundaryTraversal(matrix, n, m);. // Print the non-boundary elements. cout << \"Boundary Traversal: \" ;. for ( int i = 0 ...",
            "query": "\"result boundaryTraversal matrix\" cpp code example site:github.com OR site:stackoverflow.com OR site:geeksforgeeks.org OR site:tutorialspoint.com",
            "query_priority": 0.5,
            "initial_score": 0.0,
            "similarity_score": 0.46900472674385074,
            "is_plagiarism": true
          },
          {
            "title": "assign a double matrix to CvMat opencv - c++",
            "link": "https://stackoverflow.com/questions/9958397/assign-a-double-matrix-to-cvmat-opencv",
            "snippet": "I think you need to set these first: matrix size, matrix type. Example in C++: double d[2]; cv::Mat* cvdata = new cv::Mat(1, 2, CV_64F);",
            "query": "\"matrix size matrix\" cpp code example site:github.com OR site:stackoverflow.com OR site:geeksforgeeks.org OR site:tutorialspoint.com",
            "query_priority": 0.5,
            "initial_score": 0.0,
            "similarity_score": 0.4562851339001558,
            "is_plagiarism": true
          },
          {
            "title": "JAERO/JAERO/aerol.cpp at master \u00b7 jontio/JAERO",
            "link": "https://github.com/jontio/JAERO/blob/master/JAERO/aerol.cpp",
            "snippet": "... <matrix.size()); matrix[k]=block[entry]; k++; } } return matrix; } QVector<int> &AeroLInterleaver::deinterleave(QVector<int> &block) { assert(block.size ...",
            "query": "\"matrix size matrix\" cpp code example site:github.com OR site:stackoverflow.com OR site:geeksforgeeks.org OR site:tutorialspoint.com",
            "query_priority": 0.5,
            "initial_score": 0.0,
            "similarity_score": 0.39355591023335257,
            "is_plagiarism": true
          },
          {
            "title": "\"Unhandled exception\"/\"Access violation writing location\" error ...",
            "link": "https://stackoverflow.com/questions/2881454/unhandled-exception-access-violation-writing-location-error-with-referenced",
            "snippet": "... matrix size (matrix is square) c = new change *[count]; //resize pointers with matrix size for(i=0; i<count; i++) c[i] = new change[count]; file.clear ...",
            "query": "\"matrix size matrix\" cpp code example site:github.com OR site:stackoverflow.com OR site:geeksforgeeks.org OR site:tutorialspoint.com",
            "query_priority": 0.5,
            "initial_score": 0.0,
            "similarity_score": 0.38477771358359314,
            "is_plagiarism": true
          },
          {
            "title": "Design a simple C++ iterator for Matrix",
            "link": "https://stackoverflow.com/questions/56816493/design-a-simple-c-iterator-for-matrix",
            "snippet": "I also provide a complete and tested source code example. The source ... matrix size Matrix(size_t numberOfRows, size_t numberOfColumns); ...",
            "query": "\"matrix size matrix\" cpp code example site:github.com OR site:stackoverflow.com OR site:geeksforgeeks.org OR site:tutorialspoint.com",
            "query_priority": 0.5,
            "initial_score": 0.0,
            "similarity_score": 0.3163740897531966,
            "is_plagiarism": true
          },
          {
            "title": "c++ custom iterator for matrix class",
            "link": "https://stackoverflow.com/questions/41106753/c-custom-iterator-for-matrix-class",
            "snippet": "I also provide a complete and tested source code example. The source ... matrix size Matrix(size_t numberOfRows, size_t numberOfColumns); ...",
            "query": "\"matrix size matrix\" cpp code example site:github.com OR site:stackoverflow.com OR site:geeksforgeeks.org OR site:tutorialspoint.com",
            "query_priority": 0.5,
            "initial_score": 0.0,
            "similarity_score": 0.3163740897531966,
            "is_plagiarism": true
          },
          {
            "title": "Most efficient way to populate vector with indices ...",
            "link": "https://stackoverflow.com/questions/53461322/most-efficient-way-to-populate-vector-with-indices-corresponding-to-columns-of-a",
            "snippet": "... matrix size Matrix(size_t numberOfRows, size_t numberOfColumns); // Iterators for rows are simple, becuase we have vectors of columns. Use ...",
            "query": "\"matrix size matrix\" cpp code example site:github.com OR site:stackoverflow.com OR site:geeksforgeeks.org OR site:tutorialspoint.com",
            "query_priority": 0.5,
            "initial_score": 0.0,
            "similarity_score": 0.3163740897531966,
            "is_plagiarism": true
          },
          {
            "title": "Fortran macro function for literal string?",
            "link": "https://stackoverflow.com/questions/31523615/fortran-macro-function-for-literal-string",
            "snippet": "For example: print*, 'Now giving information about Matrix1' call mysub ... matrix, size(matrix,1), size(matrix,2)) print*, 'About to do ...",
            "query": "\"matrix size matrix\" cpp code example site:github.com OR site:stackoverflow.com OR site:geeksforgeeks.org OR site:tutorialspoint.com",
            "query_priority": 0.5,
            "initial_score": 0.0,
            "similarity_score": 0.3147831806622875,
            "is_plagiarism": true
          },
          {
            "title": "davidm/lua-matrix",
            "link": "https://github.com/davidm/lua-matrix/blob/master/lua/matrix.lua",
            "snippet": "... matrix.size matrix.solve matrix.sqrt matrix.sub matrix.subm matrix.tostring matrix.transpose matrix.type See code and test_matrix.lua. ... See code and ...",
            "query": "\"matrix size matrix\" cpp code example site:github.com OR site:stackoverflow.com OR site:geeksforgeeks.org OR site:tutorialspoint.com",
            "query_priority": 0.5,
            "initial_score": 0.0,
            "similarity_score": 0.13490773499227496,
            "is_plagiarism": false
          },
          {
            "title": "ray2501/tcl-opencv: Tcl extension for OpenCV library",
            "link": "https://github.com/ray2501/tcl-opencv",
            "snippet": "See BUILDING.md to know how to build the extension. Implement commands. Matrix. MATRIX dims MATRIX size MATRIX rows MATRIX cols ...",
            "query": "\"matrix size matrix\" cpp code example site:github.com OR site:stackoverflow.com OR site:geeksforgeeks.org OR site:tutorialspoint.com",
            "query_priority": 0.5,
            "initial_score": 0.0,
            "similarity_score": 0.11399885052158473,
            "is_plagiarism": false
          }
        ],
        "total_results": 10,
        "plagiarism_detected": true,
        "plagiarism_results": [
          {
            "title": "Boundary elements of a Matrix",
            "link": "https://www.geeksforgeeks.org/boundary-elements-matrix/",
            "snippet": "vector< int > result = boundaryTraversal(matrix, n, m);. // Print the non-boundary elements. cout << \"Boundary Traversal: \" ;. for ( int i = 0 ...",
            "query": "\"result boundaryTraversal matrix\" cpp code example site:github.com OR site:stackoverflow.com OR site:geeksforgeeks.org OR site:tutorialspoint.com",
            "query_priority": 0.5,
            "initial_score": 0.0,
            "similarity_score": 0.46900472674385074,
            "is_plagiarism": true
          },
          {
            "title": "assign a double matrix to CvMat opencv - c++",
            "link": "https://stackoverflow.com/questions/9958397/assign-a-double-matrix-to-cvmat-opencv",
            "snippet": "I think you need to set these first: matrix size, matrix type. Example in C++: double d[2]; cv::Mat* cvdata = new cv::Mat(1, 2, CV_64F);",
            "query": "\"matrix size matrix\" cpp code example site:github.com OR site:stackoverflow.com OR site:geeksforgeeks.org OR site:tutorialspoint.com",
            "query_priority": 0.5,
            "initial_score": 0.0,
            "similarity_score": 0.4562851339001558,
            "is_plagiarism": true
          },
          {
            "title": "JAERO/JAERO/aerol.cpp at master \u00b7 jontio/JAERO",
            "link": "https://github.com/jontio/JAERO/blob/master/JAERO/aerol.cpp",
            "snippet": "... <matrix.size()); matrix[k]=block[entry]; k++; } } return matrix; } QVector<int> &AeroLInterleaver::deinterleave(QVector<int> &block) { assert(block.size ...",
            "query": "\"matrix size matrix\" cpp code example site:github.com OR site:stackoverflow.com OR site:geeksforgeeks.org OR site:tutorialspoint.com",
            "query_priority": 0.5,
            "initial_score": 0.0,
            "similarity_score": 0.39355591023335257,
            "is_plagiarism": true
          },
          {
            "title": "\"Unhandled exception\"/\"Access violation writing location\" error ...",
            "link": "https://stackoverflow.com/questions/2881454/unhandled-exception-access-violation-writing-location-error-with-referenced",
            "snippet": "... matrix size (matrix is square) c = new change *[count]; //resize pointers with matrix size for(i=0; i<count; i++) c[i] = new change[count]; file.clear ...",
            "query": "\"matrix size matrix\" cpp code example site:github.com OR site:stackoverflow.com OR site:geeksforgeeks.org OR site:tutorialspoint.com",
            "query_priority": 0.5,
            "initial_score": 0.0,
            "similarity_score": 0.38477771358359314,
            "is_plagiarism": true
          },
          {
            "title": "Design a simple C++ iterator for Matrix",
            "link": "https://stackoverflow.com/questions/56816493/design-a-simple-c-iterator-for-matrix",
            "snippet": "I also provide a complete and tested source code example. The source ... matrix size Matrix(size_t numberOfRows, size_t numberOfColumns); ...",
            "query": "\"matrix size matrix\" cpp code example site:github.com OR site:stackoverflow.com OR site:geeksforgeeks.org OR site:tutorialspoint.com",
            "query_priority": 0.5,
            "initial_score": 0.0,
            "similarity_score": 0.3163740897531966,
            "is_plagiarism": true
          }
        ],
        "similarity_threshold": 0.3,
        "matching_sources": [
          "https://www.geeksforgeeks.org/boundary-elements-matrix/",
          "https://stackoverflow.com/questions/9958397/assign-a-double-matrix-to-cvmat-opencv",
          "https://github.com/jontio/JAERO/blob/master/JAERO/aerol.cpp",
          "https://stackoverflow.com/questions/2881454/unhandled-exception-access-violation-writing-location-error-with-referenced",
          "https://stackoverflow.com/questions/56816493/design-a-simple-c-iterator-for-matrix"
        ]
      }
    },
    "solution3": {
      "DOC6SAM_sol3.txt": {
        "file": "/Users/guptasahaj01/Downloads/code_checker/Processing/core_backend/sessions/session_e9a631be802648d7a51a6b72d284ab5e/results/organized/solution3/DOC6SAM_sol3.txt",
        "language": "cpp",
        "timestamp": "2025-04-14T16:07:44.032914",
        "queries_used": [
          "\"evaluateExpression\" function cpp example site:github.com OR site:stackoverflow.com OR site:geeksforgeeks.org OR site:tutorialspoint.com",
          "\"for (int i = 0; i < expression.size(); i++) {\nchar c = expression[i];\nif (isdigit(c)) {\ncurrentNum = currentNum * 10 + (c - '0');\n}\" cpp example site:github.com OR site:stackoverflow.com OR site:geeksforgeeks.org OR site:tutorialspoint.com",
          "\"while (!numStack.empty()) {\nsum += numStack.top();\nnumStack.pop();\n}\" cpp example site:github.com OR site:stackoverflow.com OR site:geeksforgeeks.org OR site:tutorialspoint.com"
        ],
        "results": [
          {
            "title": "MyCuteGuineaPig/Leetcode",
            "link": "https://github.com/MyCuteGuineaPig/Leetcode",
            "snippet": "... while(cur || !stk.empty()){ if(cur){ stk.push(cur); sum -= cur->val; cur = cur->left; }else{ cur = stk.top(); if(!cur->right && !cur->left && sum == 0) ...",
            "query": "\"while (!numStack.empty()) {\nsum += numStack.top();\nnumStack.pop();\n}\" cpp example site:github.com OR site:stackoverflow.com OR site:geeksforgeeks.org OR site:tutorialspoint.com",
            "query_priority": 0.6,
            "initial_score": 0.0,
            "similarity_score": 0.49262924219459814,
            "is_plagiarism": true
          },
          {
            "title": "assert macro that prints the values which are passed in",
            "link": "https://stackoverflow.com/questions/31593604/assert-macro-that-prints-the-values-which-are-passed-in",
            "snippet": "... evaluateExpression( char *format, va_list args ) { int x = va_arg( args, int ); int y = va_arg( args, int ); printf( \"evaluating \\\"%s\\\" with ...",
            "query": "\"evaluateExpression\" function cpp example site:github.com OR site:stackoverflow.com OR site:geeksforgeeks.org OR site:tutorialspoint.com",
            "query_priority": 0.7,
            "initial_score": 0.0,
            "similarity_score": 0.4655428826916068,
            "is_plagiarism": true
          },
          {
            "title": "Evaluate infix string expression consisting of only addition ...",
            "link": "https://stackoverflow.com/questions/63063876/evaluate-infix-string-expression-consisting-of-only-addition-and-multiplication",
            "snippet": "int evaluateExpression(string s) { stack<int> operandStack; stack<char> operatorStack; string token = \"\"; for(char &c : s) { if(c ...",
            "query": "\"evaluateExpression\" function cpp example site:github.com OR site:stackoverflow.com OR site:geeksforgeeks.org OR site:tutorialspoint.com",
            "query_priority": 0.7,
            "initial_score": 0.0,
            "similarity_score": 0.39989289758997326,
            "is_plagiarism": true
          },
          {
            "title": "How to evaluate a math expression given in string form?",
            "link": "https://stackoverflow.com/questions/3422673/how-to-evaluate-a-math-expression-given-in-string-form",
            "snippet": "... expression (an abstract syntax tree) ... expression, Double expectedResult) { assertEquals(expectedResult,evaluateExpression(expression)); }.",
            "query": "\"evaluateExpression\" function cpp example site:github.com OR site:stackoverflow.com OR site:geeksforgeeks.org OR site:tutorialspoint.com",
            "query_priority": 0.7,
            "initial_score": 0.0,
            "similarity_score": 0.31515263287080036,
            "is_plagiarism": true
          },
          {
            "title": "C++: Easiest way to access main variable from function?",
            "link": "https://stackoverflow.com/questions/9668985/c-easiest-way-to-access-main-variable-from-function",
            "snippet": "... evaluateExpression(string expression) { // sample expression : (* (/ a 1) (+ b 2)) if (expression.substr(0,2)==\"(+\") {cout << \"add found ...",
            "query": "\"evaluateExpression\" function cpp example site:github.com OR site:stackoverflow.com OR site:geeksforgeeks.org OR site:tutorialspoint.com",
            "query_priority": 0.7,
            "initial_score": 0.0,
            "similarity_score": 0.3014060106570728,
            "is_plagiarism": true
          },
          {
            "title": "Evaluate Expression LLDB Python C++ Type Formatter",
            "link": "https://stackoverflow.com/questions/70416372/evaluate-expression-lldb-python-c-type-formatter",
            "snippet": "EvaluateExpression(\".index()\").GetValueAsUnsigned() print(a) print(b). b always results in no value, a is fine. python \u00b7 c++ \u00b7 formatting \u00b7 lldb.",
            "query": "\"evaluateExpression\" function cpp example site:github.com OR site:stackoverflow.com OR site:geeksforgeeks.org OR site:tutorialspoint.com",
            "query_priority": 0.7,
            "initial_score": 0.0,
            "similarity_score": 0.2975171217681839,
            "is_plagiarism": false
          },
          {
            "title": "c++: LLDB + Python - how to print a std::string in the ...",
            "link": "https://stackoverflow.com/questions/39401848/c-lldb-python-how-to-print-a-stdstring-in-the-python-script",
            "snippet": "... EvaluateExpression(\"buffer.c_str()\").GetValueAsUnsigned(), 0xffffff ... Calling C++ function which accepts and returns std::string from Python ...",
            "query": "\"evaluateExpression\" function cpp example site:github.com OR site:stackoverflow.com OR site:geeksforgeeks.org OR site:tutorialspoint.com",
            "query_priority": 0.7,
            "initial_score": 0.0,
            "similarity_score": 0.2975171217681839,
            "is_plagiarism": false
          },
          {
            "title": "lldb: custom summary for a vector's elements (c++)",
            "link": "https://stackoverflow.com/questions/25665838/lldb-custom-summary-for-a-vectors-elements-c",
            "snippet": "Indeed, in the EvaluateExpression, we use \"name\" returned by GetName(). it's working correctly for a single String because GetName() returns ...",
            "query": "\"evaluateExpression\" function cpp example site:github.com OR site:stackoverflow.com OR site:geeksforgeeks.org OR site:tutorialspoint.com",
            "query_priority": 0.7,
            "initial_score": 0.0,
            "similarity_score": 0.2975171217681839,
            "is_plagiarism": false
          },
          {
            "title": "how to evaluate an Expression inside ExpressionVisitor?",
            "link": "https://stackoverflow.com/questions/8764662/how-to-evaluate-an-expression-inside-expressionvisitor",
            "snippet": "protected static object EvaluateExpression(Expression expression, ParameterExpression parameterX) { var lambda = Expression.Lambda(expression ...",
            "query": "\"evaluateExpression\" function cpp example site:github.com OR site:stackoverflow.com OR site:geeksforgeeks.org OR site:tutorialspoint.com",
            "query_priority": 0.7,
            "initial_score": 0.0,
            "similarity_score": 0.2762559674207843,
            "is_plagiarism": false
          },
          {
            "title": "get the sum of stack<int> in c++ without destroying stack",
            "link": "https://stackoverflow.com/questions/48665770/get-the-sum-of-stackint-in-c-without-destroying-stack",
            "snippet": "You can't iterate over stack so there isn't an easy way. You can use dequeue<int> or stack<int> to insert each top element.",
            "query": "\"while (!numStack.empty()) {\nsum += numStack.top();\nnumStack.pop();\n}\" cpp example site:github.com OR site:stackoverflow.com OR site:geeksforgeeks.org OR site:tutorialspoint.com",
            "query_priority": 0.6,
            "initial_score": 0.0,
            "similarity_score": 0.0695868101410771,
            "is_plagiarism": false
          },
          {
            "title": "Henry-Xing/LeecodeNoteFor2023",
            "link": "https://github.com/Henry-Xing/LeecodeNoteFor2023",
            "snippet": "CPP \u4e24\u79cd\u65b9\u6cd5\uff0c\u7b2c\u4e00\u79cd\u65b9\u6cd5\u4ea4\u6362\u6cd5\uff0c\u56e0\u4e3a\u6bcf\u4e2a\u5143\u7d20\u90fd\u5c5e\u4e8e1~n\uff0c \u90a3\u4e48\u5f53\u524d\u5143\u7d20nums[i]\u7684\u4f4d\u7f6e\u5e94\u8be5\u662fnums[i] - 1, \u6240\u4ee5\u4ea4\u6362nums[nums[i] - 1]\u548cnums[i]\uff0c\u6700\u540e\u518d\u53bb\u904d\u5386\u4e00\u6b21\uff0c\u5982\u679c\u51fa\u73b0 ...",
            "query": "\"while (!numStack.empty()) {\nsum += numStack.top();\nnumStack.pop();\n}\" cpp example site:github.com OR site:stackoverflow.com OR site:geeksforgeeks.org OR site:tutorialspoint.com",
            "query_priority": 0.6,
            "initial_score": 0.0,
            "similarity_score": 0.05090157171380316,
            "is_plagiarism": false
          },
          {
            "title": "ExpressionEvaluator/evaluator.cpp at master",
            "link": "https://github.com/jongilm/ExpressionEvaluator/blob/master/evaluator.cpp",
            "snippet": "// Each recursed call will return when a close brace is encountered. value1 = EvaluateExpression(&pExpr->substr(i),&iNumberOfCharactersProcessed);. #ifdef ...",
            "query": "\"evaluateExpression\" function cpp example site:github.com OR site:stackoverflow.com OR site:geeksforgeeks.org OR site:tutorialspoint.com",
            "query_priority": 0.7,
            "initial_score": 0.0,
            "similarity_score": 0.049999999999999996,
            "is_plagiarism": false
          },
          {
            "title": "Cannot retrieve data values from array quadraticExpression",
            "link": "https://stackoverflow.com/questions/48471548/cannot-retrieve-data-values-from-array-quadraticexpression",
            "snippet": "And here is the .cpp tester file #include <iostream> #include \"QuadraticExpression.h\" using namespace std; void evaluateExpression(const ...",
            "query": "\"evaluateExpression\" function cpp example site:github.com OR site:stackoverflow.com OR site:geeksforgeeks.org OR site:tutorialspoint.com",
            "query_priority": 0.7,
            "initial_score": 0.0,
            "similarity_score": 0.049999999999999996,
            "is_plagiarism": false
          },
          {
            "title": "CodeSummary.md - cookieisaac/leetcode",
            "link": "https://github.com/cookieisaac/leetcode/blob/master/CodeSummary.md",
            "snippet": "Coding interview preparation based on Leetcode. Contribute to cookieisaac/leetcode development by creating an account on GitHub.",
            "query": "\"while (!numStack.empty()) {\nsum += numStack.top();\nnumStack.pop();\n}\" cpp example site:github.com OR site:stackoverflow.com OR site:geeksforgeeks.org OR site:tutorialspoint.com",
            "query_priority": 0.6,
            "initial_score": 0.0,
            "similarity_score": 0.049999999999999996,
            "is_plagiarism": false
          },
          {
            "title": "ShiyuLiuColumbia.github.io/content.json at master \u00b7 ...",
            "link": "https://github.com/ShiyuLiuColumbia/ShiyuLiuColumbia.github.io/blob/master/content.json",
            "snippet": "... When I developing this test report module, I also discovered some addtional tasks. For example, when I write the share to user component of web page which ...",
            "query": "\"while (!numStack.empty()) {\nsum += numStack.top();\nnumStack.pop();\n}\" cpp example site:github.com OR site:stackoverflow.com OR site:geeksforgeeks.org OR site:tutorialspoint.com",
            "query_priority": 0.6,
            "initial_score": 0.0,
            "similarity_score": 0.049999999999999996,
            "is_plagiarism": false
          }
        ],
        "total_results": 15,
        "plagiarism_detected": true,
        "plagiarism_results": [
          {
            "title": "MyCuteGuineaPig/Leetcode",
            "link": "https://github.com/MyCuteGuineaPig/Leetcode",
            "snippet": "... while(cur || !stk.empty()){ if(cur){ stk.push(cur); sum -= cur->val; cur = cur->left; }else{ cur = stk.top(); if(!cur->right && !cur->left && sum == 0) ...",
            "query": "\"while (!numStack.empty()) {\nsum += numStack.top();\nnumStack.pop();\n}\" cpp example site:github.com OR site:stackoverflow.com OR site:geeksforgeeks.org OR site:tutorialspoint.com",
            "query_priority": 0.6,
            "initial_score": 0.0,
            "similarity_score": 0.49262924219459814,
            "is_plagiarism": true
          },
          {
            "title": "assert macro that prints the values which are passed in",
            "link": "https://stackoverflow.com/questions/31593604/assert-macro-that-prints-the-values-which-are-passed-in",
            "snippet": "... evaluateExpression( char *format, va_list args ) { int x = va_arg( args, int ); int y = va_arg( args, int ); printf( \"evaluating \\\"%s\\\" with ...",
            "query": "\"evaluateExpression\" function cpp example site:github.com OR site:stackoverflow.com OR site:geeksforgeeks.org OR site:tutorialspoint.com",
            "query_priority": 0.7,
            "initial_score": 0.0,
            "similarity_score": 0.4655428826916068,
            "is_plagiarism": true
          },
          {
            "title": "Evaluate infix string expression consisting of only addition ...",
            "link": "https://stackoverflow.com/questions/63063876/evaluate-infix-string-expression-consisting-of-only-addition-and-multiplication",
            "snippet": "int evaluateExpression(string s) { stack<int> operandStack; stack<char> operatorStack; string token = \"\"; for(char &c : s) { if(c ...",
            "query": "\"evaluateExpression\" function cpp example site:github.com OR site:stackoverflow.com OR site:geeksforgeeks.org OR site:tutorialspoint.com",
            "query_priority": 0.7,
            "initial_score": 0.0,
            "similarity_score": 0.39989289758997326,
            "is_plagiarism": true
          },
          {
            "title": "How to evaluate a math expression given in string form?",
            "link": "https://stackoverflow.com/questions/3422673/how-to-evaluate-a-math-expression-given-in-string-form",
            "snippet": "... expression (an abstract syntax tree) ... expression, Double expectedResult) { assertEquals(expectedResult,evaluateExpression(expression)); }.",
            "query": "\"evaluateExpression\" function cpp example site:github.com OR site:stackoverflow.com OR site:geeksforgeeks.org OR site:tutorialspoint.com",
            "query_priority": 0.7,
            "initial_score": 0.0,
            "similarity_score": 0.31515263287080036,
            "is_plagiarism": true
          },
          {
            "title": "C++: Easiest way to access main variable from function?",
            "link": "https://stackoverflow.com/questions/9668985/c-easiest-way-to-access-main-variable-from-function",
            "snippet": "... evaluateExpression(string expression) { // sample expression : (* (/ a 1) (+ b 2)) if (expression.substr(0,2)==\"(+\") {cout << \"add found ...",
            "query": "\"evaluateExpression\" function cpp example site:github.com OR site:stackoverflow.com OR site:geeksforgeeks.org OR site:tutorialspoint.com",
            "query_priority": 0.7,
            "initial_score": 0.0,
            "similarity_score": 0.3014060106570728,
            "is_plagiarism": true
          }
        ],
        "similarity_threshold": 0.3,
        "matching_sources": [
          "https://github.com/MyCuteGuineaPig/Leetcode",
          "https://stackoverflow.com/questions/31593604/assert-macro-that-prints-the-values-which-are-passed-in",
          "https://stackoverflow.com/questions/63063876/evaluate-infix-string-expression-consisting-of-only-addition-and-multiplication",
          "https://stackoverflow.com/questions/3422673/how-to-evaluate-a-math-expression-given-in-string-form",
          "https://stackoverflow.com/questions/9668985/c-easiest-way-to-access-main-variable-from-function"
        ]
      },
      "DOC3SAM_sol3.txt": {
        "file": "/Users/guptasahaj01/Downloads/code_checker/Processing/core_backend/sessions/session_e9a631be802648d7a51a6b72d284ab5e/results/organized/solution3/DOC3SAM_sol3.txt",
        "language": "cpp",
        "timestamp": "2025-04-14T16:07:50.291618",
        "queries_used": [
          "\"evaluateExpression\" function cpp example site:github.com OR site:stackoverflow.com OR site:geeksforgeeks.org OR site:tutorialspoint.com",
          "\"for (int i = 0; i < expression.size(); i++) {\nchar currentChar = expression[i];\nif (isdigit(currentChar)) {\ncurrentNumber = currentNumber * 10 + (currentChar - '0');\n}\" cpp example site:github.com OR site:stackoverflow.com OR site:geeksforgeeks.org OR site:tutorialspoint.com",
          "\"while (!numberStack.empty()) {\ntemp += numberStack.top();\nnumberStack.pop();\n}\" cpp example site:github.com OR site:stackoverflow.com OR site:geeksforgeeks.org OR site:tutorialspoint.com"
        ],
        "results": [
          {
            "title": "assert macro that prints the values which are passed in",
            "link": "https://stackoverflow.com/questions/31593604/assert-macro-that-prints-the-values-which-are-passed-in",
            "snippet": "... evaluateExpression( char *format, va_list args ) { int x = va_arg( args, int ); int y = va_arg( args, int ); printf( \"evaluating \\\"%s\\\" with ...",
            "query": "\"evaluateExpression\" function cpp example site:github.com OR site:stackoverflow.com OR site:geeksforgeeks.org OR site:tutorialspoint.com",
            "query_priority": 0.7,
            "initial_score": 0.0,
            "similarity_score": 0.4576176346332723,
            "is_plagiarism": true
          },
          {
            "title": "Evaluate infix string expression consisting of only addition ...",
            "link": "https://stackoverflow.com/questions/63063876/evaluate-infix-string-expression-consisting-of-only-addition-and-multiplication",
            "snippet": "int evaluateExpression(string s) { stack<int> operandStack; stack<char> operatorStack; string token = \"\"; for(char &c : s) { if(c ...",
            "query": "\"evaluateExpression\" function cpp example site:github.com OR site:stackoverflow.com OR site:geeksforgeeks.org OR site:tutorialspoint.com",
            "query_priority": 0.7,
            "initial_score": 0.0,
            "similarity_score": 0.38882861206620967,
            "is_plagiarism": true
          },
          {
            "title": "How to evaluate a math expression given in string form?",
            "link": "https://stackoverflow.com/questions/3422673/how-to-evaluate-a-math-expression-given-in-string-form",
            "snippet": "... expression (an abstract syntax tree) ... expression, Double expectedResult) { assertEquals(expectedResult,evaluateExpression(expression)); }.",
            "query": "\"evaluateExpression\" function cpp example site:github.com OR site:stackoverflow.com OR site:geeksforgeeks.org OR site:tutorialspoint.com",
            "query_priority": 0.7,
            "initial_score": 0.0,
            "similarity_score": 0.320590205053631,
            "is_plagiarism": true
          },
          {
            "title": "C++: Easiest way to access main variable from function?",
            "link": "https://stackoverflow.com/questions/9668985/c-easiest-way-to-access-main-variable-from-function",
            "snippet": "... evaluateExpression(string expression) { // sample expression : (* (/ a 1) (+ b 2)) if (expression.substr(0,2)==\"(+\") {cout << \"add found ...",
            "query": "\"evaluateExpression\" function cpp example site:github.com OR site:stackoverflow.com OR site:geeksforgeeks.org OR site:tutorialspoint.com",
            "query_priority": 0.7,
            "initial_score": 0.0,
            "similarity_score": 0.3077766687030705,
            "is_plagiarism": true
          },
          {
            "title": "Evaluate Expression LLDB Python C++ Type Formatter",
            "link": "https://stackoverflow.com/questions/70416372/evaluate-expression-lldb-python-c-type-formatter",
            "snippet": "EvaluateExpression(\".index()\").GetValueAsUnsigned() print(a) print(b). b always results in no value, a is fine. python \u00b7 c++ \u00b7 formatting \u00b7 lldb.",
            "query": "\"evaluateExpression\" function cpp example site:github.com OR site:stackoverflow.com OR site:geeksforgeeks.org OR site:tutorialspoint.com",
            "query_priority": 0.7,
            "initial_score": 0.0,
            "similarity_score": 0.30486000203640384,
            "is_plagiarism": true
          },
          {
            "title": "c++: LLDB + Python - how to print a std::string in the ...",
            "link": "https://stackoverflow.com/questions/39401848/c-lldb-python-how-to-print-a-stdstring-in-the-python-script",
            "snippet": "... EvaluateExpression(\"buffer.c_str()\").GetValueAsUnsigned(), 0xffffff ... Calling C++ function which accepts and returns std::string from Python ...",
            "query": "\"evaluateExpression\" function cpp example site:github.com OR site:stackoverflow.com OR site:geeksforgeeks.org OR site:tutorialspoint.com",
            "query_priority": 0.7,
            "initial_score": 0.0,
            "similarity_score": 0.30486000203640384,
            "is_plagiarism": true
          },
          {
            "title": "lldb: custom summary for a vector's elements (c++)",
            "link": "https://stackoverflow.com/questions/25665838/lldb-custom-summary-for-a-vectors-elements-c",
            "snippet": "Indeed, in the EvaluateExpression, we use \"name\" returned by GetName(). it's working correctly for a single String because GetName() returns ...",
            "query": "\"evaluateExpression\" function cpp example site:github.com OR site:stackoverflow.com OR site:geeksforgeeks.org OR site:tutorialspoint.com",
            "query_priority": 0.7,
            "initial_score": 0.0,
            "similarity_score": 0.30486000203640384,
            "is_plagiarism": true
          },
          {
            "title": "how to evaluate an Expression inside ExpressionVisitor?",
            "link": "https://stackoverflow.com/questions/8764662/how-to-evaluate-an-expression-inside-expressionvisitor",
            "snippet": "protected static object EvaluateExpression(Expression expression, ParameterExpression parameterX) { var lambda = Expression.Lambda(expression ...",
            "query": "\"evaluateExpression\" function cpp example site:github.com OR site:stackoverflow.com OR site:geeksforgeeks.org OR site:tutorialspoint.com",
            "query_priority": 0.7,
            "initial_score": 0.0,
            "similarity_score": 0.27696188883506856,
            "is_plagiarism": false
          },
          {
            "title": "ExpressionEvaluator/evaluator.cpp at master",
            "link": "https://github.com/jongilm/ExpressionEvaluator/blob/master/evaluator.cpp",
            "snippet": "// Each recursed call will return when a close brace is encountered. value1 = EvaluateExpression(&pExpr->substr(i),&iNumberOfCharactersProcessed);. #ifdef ...",
            "query": "\"evaluateExpression\" function cpp example site:github.com OR site:stackoverflow.com OR site:geeksforgeeks.org OR site:tutorialspoint.com",
            "query_priority": 0.7,
            "initial_score": 0.0,
            "similarity_score": 0.049999999999999996,
            "is_plagiarism": false
          },
          {
            "title": "Cannot retrieve data values from array quadraticExpression",
            "link": "https://stackoverflow.com/questions/48471548/cannot-retrieve-data-values-from-array-quadraticexpression",
            "snippet": "And here is the .cpp tester file #include <iostream> #include \"QuadraticExpression.h\" using namespace std; void evaluateExpression(const ...",
            "query": "\"evaluateExpression\" function cpp example site:github.com OR site:stackoverflow.com OR site:geeksforgeeks.org OR site:tutorialspoint.com",
            "query_priority": 0.7,
            "initial_score": 0.0,
            "similarity_score": 0.049999999999999996,
            "is_plagiarism": false
          }
        ],
        "total_results": 10,
        "plagiarism_detected": true,
        "plagiarism_results": [
          {
            "title": "assert macro that prints the values which are passed in",
            "link": "https://stackoverflow.com/questions/31593604/assert-macro-that-prints-the-values-which-are-passed-in",
            "snippet": "... evaluateExpression( char *format, va_list args ) { int x = va_arg( args, int ); int y = va_arg( args, int ); printf( \"evaluating \\\"%s\\\" with ...",
            "query": "\"evaluateExpression\" function cpp example site:github.com OR site:stackoverflow.com OR site:geeksforgeeks.org OR site:tutorialspoint.com",
            "query_priority": 0.7,
            "initial_score": 0.0,
            "similarity_score": 0.4576176346332723,
            "is_plagiarism": true
          },
          {
            "title": "Evaluate infix string expression consisting of only addition ...",
            "link": "https://stackoverflow.com/questions/63063876/evaluate-infix-string-expression-consisting-of-only-addition-and-multiplication",
            "snippet": "int evaluateExpression(string s) { stack<int> operandStack; stack<char> operatorStack; string token = \"\"; for(char &c : s) { if(c ...",
            "query": "\"evaluateExpression\" function cpp example site:github.com OR site:stackoverflow.com OR site:geeksforgeeks.org OR site:tutorialspoint.com",
            "query_priority": 0.7,
            "initial_score": 0.0,
            "similarity_score": 0.38882861206620967,
            "is_plagiarism": true
          },
          {
            "title": "How to evaluate a math expression given in string form?",
            "link": "https://stackoverflow.com/questions/3422673/how-to-evaluate-a-math-expression-given-in-string-form",
            "snippet": "... expression (an abstract syntax tree) ... expression, Double expectedResult) { assertEquals(expectedResult,evaluateExpression(expression)); }.",
            "query": "\"evaluateExpression\" function cpp example site:github.com OR site:stackoverflow.com OR site:geeksforgeeks.org OR site:tutorialspoint.com",
            "query_priority": 0.7,
            "initial_score": 0.0,
            "similarity_score": 0.320590205053631,
            "is_plagiarism": true
          },
          {
            "title": "C++: Easiest way to access main variable from function?",
            "link": "https://stackoverflow.com/questions/9668985/c-easiest-way-to-access-main-variable-from-function",
            "snippet": "... evaluateExpression(string expression) { // sample expression : (* (/ a 1) (+ b 2)) if (expression.substr(0,2)==\"(+\") {cout << \"add found ...",
            "query": "\"evaluateExpression\" function cpp example site:github.com OR site:stackoverflow.com OR site:geeksforgeeks.org OR site:tutorialspoint.com",
            "query_priority": 0.7,
            "initial_score": 0.0,
            "similarity_score": 0.3077766687030705,
            "is_plagiarism": true
          },
          {
            "title": "Evaluate Expression LLDB Python C++ Type Formatter",
            "link": "https://stackoverflow.com/questions/70416372/evaluate-expression-lldb-python-c-type-formatter",
            "snippet": "EvaluateExpression(\".index()\").GetValueAsUnsigned() print(a) print(b). b always results in no value, a is fine. python \u00b7 c++ \u00b7 formatting \u00b7 lldb.",
            "query": "\"evaluateExpression\" function cpp example site:github.com OR site:stackoverflow.com OR site:geeksforgeeks.org OR site:tutorialspoint.com",
            "query_priority": 0.7,
            "initial_score": 0.0,
            "similarity_score": 0.30486000203640384,
            "is_plagiarism": true
          }
        ],
        "similarity_threshold": 0.3,
        "matching_sources": [
          "https://stackoverflow.com/questions/31593604/assert-macro-that-prints-the-values-which-are-passed-in",
          "https://stackoverflow.com/questions/63063876/evaluate-infix-string-expression-consisting-of-only-addition-and-multiplication",
          "https://stackoverflow.com/questions/3422673/how-to-evaluate-a-math-expression-given-in-string-form",
          "https://stackoverflow.com/questions/9668985/c-easiest-way-to-access-main-variable-from-function",
          "https://stackoverflow.com/questions/70416372/evaluate-expression-lldb-python-c-type-formatter"
        ]
      },
      "DOC5SAM_sol3.txt": {
        "file": "/Users/guptasahaj01/Downloads/code_checker/Processing/core_backend/sessions/session_e9a631be802648d7a51a6b72d284ab5e/results/organized/solution3/DOC5SAM_sol3.txt",
        "language": "cpp",
        "timestamp": "2025-04-14T16:07:55.768769",
        "queries_used": [
          "\"evaluateExpression\" function cpp example site:github.com OR site:stackoverflow.com OR site:geeksforgeeks.org OR site:tutorialspoint.com",
          "\"for (int i = 0; i < expression.size(); i++) {\nchar c = expression[i];\nif (isdigit(c)) {\ncurrentNum = currentNum * 10 + (c - '0');\n}\" cpp example site:github.com OR site:stackoverflow.com OR site:geeksforgeeks.org OR site:tutorialspoint.com",
          "\"while (!numStack.empty()) {\ntempSum += numStack.top();\nnumStack.pop();\n}\" cpp example site:github.com OR site:stackoverflow.com OR site:geeksforgeeks.org OR site:tutorialspoint.com"
        ],
        "results": [
          {
            "title": "assert macro that prints the values which are passed in",
            "link": "https://stackoverflow.com/questions/31593604/assert-macro-that-prints-the-values-which-are-passed-in",
            "snippet": "... evaluateExpression( char *format, va_list args ) { int x = va_arg( args, int ); int y = va_arg( args, int ); printf( \"evaluating \\\"%s\\\" with ...",
            "query": "\"evaluateExpression\" function cpp example site:github.com OR site:stackoverflow.com OR site:geeksforgeeks.org OR site:tutorialspoint.com",
            "query_priority": 0.7,
            "initial_score": 0.0,
            "similarity_score": 0.47485700550230414,
            "is_plagiarism": true
          },
          {
            "title": "Evaluate infix string expression consisting of only addition ...",
            "link": "https://stackoverflow.com/questions/63063876/evaluate-infix-string-expression-consisting-of-only-addition-and-multiplication",
            "snippet": "int evaluateExpression(string s) { stack<int> operandStack; stack<char> operatorStack; string token = \"\"; for(char &c : s) { if(c ...",
            "query": "\"evaluateExpression\" function cpp example site:github.com OR site:stackoverflow.com OR site:geeksforgeeks.org OR site:tutorialspoint.com",
            "query_priority": 0.7,
            "initial_score": 0.0,
            "similarity_score": 0.41036563670468557,
            "is_plagiarism": true
          },
          {
            "title": "How to evaluate a math expression given in string form?",
            "link": "https://stackoverflow.com/questions/3422673/how-to-evaluate-a-math-expression-given-in-string-form",
            "snippet": "... expression (an abstract syntax tree) ... expression, Double expectedResult) { assertEquals(expectedResult,evaluateExpression(expression)); }.",
            "query": "\"evaluateExpression\" function cpp example site:github.com OR site:stackoverflow.com OR site:geeksforgeeks.org OR site:tutorialspoint.com",
            "query_priority": 0.7,
            "initial_score": 0.0,
            "similarity_score": 0.3090626432832313,
            "is_plagiarism": true
          },
          {
            "title": "C++: Easiest way to access main variable from function?",
            "link": "https://stackoverflow.com/questions/9668985/c-easiest-way-to-access-main-variable-from-function",
            "snippet": "... evaluateExpression(string expression) { // sample expression : (* (/ a 1) (+ b 2)) if (expression.substr(0,2)==\"(+\") {cout << \"add found ...",
            "query": "\"evaluateExpression\" function cpp example site:github.com OR site:stackoverflow.com OR site:geeksforgeeks.org OR site:tutorialspoint.com",
            "query_priority": 0.7,
            "initial_score": 0.0,
            "similarity_score": 0.29484715391992256,
            "is_plagiarism": false
          },
          {
            "title": "Evaluate Expression LLDB Python C++ Type Formatter",
            "link": "https://stackoverflow.com/questions/70416372/evaluate-expression-lldb-python-c-type-formatter",
            "snippet": "EvaluateExpression(\".index()\").GetValueAsUnsigned() print(a) print(b). b always results in no value, a is fine. python \u00b7 c++ \u00b7 formatting \u00b7 lldb.",
            "query": "\"evaluateExpression\" function cpp example site:github.com OR site:stackoverflow.com OR site:geeksforgeeks.org OR site:tutorialspoint.com",
            "query_priority": 0.7,
            "initial_score": 0.0,
            "similarity_score": 0.29047215391992254,
            "is_plagiarism": false
          },
          {
            "title": "c++: LLDB + Python - how to print a std::string in the ...",
            "link": "https://stackoverflow.com/questions/39401848/c-lldb-python-how-to-print-a-stdstring-in-the-python-script",
            "snippet": "... EvaluateExpression(\"buffer.c_str()\").GetValueAsUnsigned(), 0xffffff ... Calling C++ function which accepts and returns std::string from Python ...",
            "query": "\"evaluateExpression\" function cpp example site:github.com OR site:stackoverflow.com OR site:geeksforgeeks.org OR site:tutorialspoint.com",
            "query_priority": 0.7,
            "initial_score": 0.0,
            "similarity_score": 0.29047215391992254,
            "is_plagiarism": false
          },
          {
            "title": "lldb: custom summary for a vector's elements (c++)",
            "link": "https://stackoverflow.com/questions/25665838/lldb-custom-summary-for-a-vectors-elements-c",
            "snippet": "Indeed, in the EvaluateExpression, we use \"name\" returned by GetName(). it's working correctly for a single String because GetName() returns ...",
            "query": "\"evaluateExpression\" function cpp example site:github.com OR site:stackoverflow.com OR site:geeksforgeeks.org OR site:tutorialspoint.com",
            "query_priority": 0.7,
            "initial_score": 0.0,
            "similarity_score": 0.29047215391992254,
            "is_plagiarism": false
          },
          {
            "title": "how to evaluate an Expression inside ExpressionVisitor?",
            "link": "https://stackoverflow.com/questions/8764662/how-to-evaluate-an-expression-inside-expressionvisitor",
            "snippet": "protected static object EvaluateExpression(Expression expression, ParameterExpression parameterX) { var lambda = Expression.Lambda(expression ...",
            "query": "\"evaluateExpression\" function cpp example site:github.com OR site:stackoverflow.com OR site:geeksforgeeks.org OR site:tutorialspoint.com",
            "query_priority": 0.7,
            "initial_score": 0.0,
            "similarity_score": 0.26297866216178634,
            "is_plagiarism": false
          },
          {
            "title": "ExpressionEvaluator/evaluator.cpp at master",
            "link": "https://github.com/jongilm/ExpressionEvaluator/blob/master/evaluator.cpp",
            "snippet": "// Each recursed call will return when a close brace is encountered. value1 = EvaluateExpression(&pExpr->substr(i),&iNumberOfCharactersProcessed);. #ifdef ...",
            "query": "\"evaluateExpression\" function cpp example site:github.com OR site:stackoverflow.com OR site:geeksforgeeks.org OR site:tutorialspoint.com",
            "query_priority": 0.7,
            "initial_score": 0.0,
            "similarity_score": 0.049999999999999996,
            "is_plagiarism": false
          },
          {
            "title": "Cannot retrieve data values from array quadraticExpression",
            "link": "https://stackoverflow.com/questions/48471548/cannot-retrieve-data-values-from-array-quadraticexpression",
            "snippet": "And here is the .cpp tester file #include <iostream> #include \"QuadraticExpression.h\" using namespace std; void evaluateExpression(const ...",
            "query": "\"evaluateExpression\" function cpp example site:github.com OR site:stackoverflow.com OR site:geeksforgeeks.org OR site:tutorialspoint.com",
            "query_priority": 0.7,
            "initial_score": 0.0,
            "similarity_score": 0.049999999999999996,
            "is_plagiarism": false
          }
        ],
        "total_results": 10,
        "plagiarism_detected": true,
        "plagiarism_results": [
          {
            "title": "assert macro that prints the values which are passed in",
            "link": "https://stackoverflow.com/questions/31593604/assert-macro-that-prints-the-values-which-are-passed-in",
            "snippet": "... evaluateExpression( char *format, va_list args ) { int x = va_arg( args, int ); int y = va_arg( args, int ); printf( \"evaluating \\\"%s\\\" with ...",
            "query": "\"evaluateExpression\" function cpp example site:github.com OR site:stackoverflow.com OR site:geeksforgeeks.org OR site:tutorialspoint.com",
            "query_priority": 0.7,
            "initial_score": 0.0,
            "similarity_score": 0.47485700550230414,
            "is_plagiarism": true
          },
          {
            "title": "Evaluate infix string expression consisting of only addition ...",
            "link": "https://stackoverflow.com/questions/63063876/evaluate-infix-string-expression-consisting-of-only-addition-and-multiplication",
            "snippet": "int evaluateExpression(string s) { stack<int> operandStack; stack<char> operatorStack; string token = \"\"; for(char &c : s) { if(c ...",
            "query": "\"evaluateExpression\" function cpp example site:github.com OR site:stackoverflow.com OR site:geeksforgeeks.org OR site:tutorialspoint.com",
            "query_priority": 0.7,
            "initial_score": 0.0,
            "similarity_score": 0.41036563670468557,
            "is_plagiarism": true
          },
          {
            "title": "How to evaluate a math expression given in string form?",
            "link": "https://stackoverflow.com/questions/3422673/how-to-evaluate-a-math-expression-given-in-string-form",
            "snippet": "... expression (an abstract syntax tree) ... expression, Double expectedResult) { assertEquals(expectedResult,evaluateExpression(expression)); }.",
            "query": "\"evaluateExpression\" function cpp example site:github.com OR site:stackoverflow.com OR site:geeksforgeeks.org OR site:tutorialspoint.com",
            "query_priority": 0.7,
            "initial_score": 0.0,
            "similarity_score": 0.3090626432832313,
            "is_plagiarism": true
          }
        ],
        "similarity_threshold": 0.3,
        "matching_sources": [
          "https://stackoverflow.com/questions/31593604/assert-macro-that-prints-the-values-which-are-passed-in",
          "https://stackoverflow.com/questions/63063876/evaluate-infix-string-expression-consisting-of-only-addition-and-multiplication",
          "https://stackoverflow.com/questions/3422673/how-to-evaluate-a-math-expression-given-in-string-form"
        ]
      },
      "DOC2SAM_sol3.txt": {
        "file": "/Users/guptasahaj01/Downloads/code_checker/Processing/core_backend/sessions/session_e9a631be802648d7a51a6b72d284ab5e/results/organized/solution3/DOC2SAM_sol3.txt",
        "language": "cpp",
        "timestamp": "2025-04-14T16:08:00.915456",
        "queries_used": [
          "\"evaluateExpression\" function cpp example site:github.com OR site:stackoverflow.com OR site:geeksforgeeks.org OR site:tutorialspoint.com",
          "\"for (int i = 0; i < expression.size(); i++) {\nchar c = expression[i];\nif (isdigit(c)) {\ncurrentNumber = currentNumber * 10 + (c - '0');\n}\" cpp example site:github.com OR site:stackoverflow.com OR site:geeksforgeeks.org OR site:tutorialspoint.com",
          "\"while (!numbers.empty()) {\nsum += numbers.top();\nnumbers.pop();\n}\" cpp example site:github.com OR site:stackoverflow.com OR site:geeksforgeeks.org OR site:tutorialspoint.com"
        ],
        "results": [
          {
            "title": "assert macro that prints the values which are passed in",
            "link": "https://stackoverflow.com/questions/31593604/assert-macro-that-prints-the-values-which-are-passed-in",
            "snippet": "... evaluateExpression( char *format, va_list args ) { int x = va_arg( args, int ); int y = va_arg( args, int ); printf( \"evaluating \\\"%s\\\" with ...",
            "query": "\"evaluateExpression\" function cpp example site:github.com OR site:stackoverflow.com OR site:geeksforgeeks.org OR site:tutorialspoint.com",
            "query_priority": 0.7,
            "initial_score": 0.0,
            "similarity_score": 0.4733447893929818,
            "is_plagiarism": true
          },
          {
            "title": "Evaluate infix string expression consisting of only addition ...",
            "link": "https://stackoverflow.com/questions/63063876/evaluate-infix-string-expression-consisting-of-only-addition-and-multiplication",
            "snippet": "int evaluateExpression(string s) { stack<int> operandStack; stack<char> operatorStack; string token = \"\"; for(char &c : s) { if(c ...",
            "query": "\"evaluateExpression\" function cpp example site:github.com OR site:stackoverflow.com OR site:geeksforgeeks.org OR site:tutorialspoint.com",
            "query_priority": 0.7,
            "initial_score": 0.0,
            "similarity_score": 0.4046611098550774,
            "is_plagiarism": true
          },
          {
            "title": "How to evaluate a math expression given in string form?",
            "link": "https://stackoverflow.com/questions/3422673/how-to-evaluate-a-math-expression-given-in-string-form",
            "snippet": "... expression (an abstract syntax tree) ... expression, Double expectedResult) { assertEquals(expectedResult,evaluateExpression(expression)); }.",
            "query": "\"evaluateExpression\" function cpp example site:github.com OR site:stackoverflow.com OR site:geeksforgeeks.org OR site:tutorialspoint.com",
            "query_priority": 0.7,
            "initial_score": 0.0,
            "similarity_score": 0.3132911592560531,
            "is_plagiarism": true
          },
          {
            "title": "C++: Easiest way to access main variable from function?",
            "link": "https://stackoverflow.com/questions/9668985/c-easiest-way-to-access-main-variable-from-function",
            "snippet": "... evaluateExpression(string expression) { // sample expression : (* (/ a 1) (+ b 2)) if (expression.substr(0,2)==\"(+\") {cout << \"add found ...",
            "query": "\"evaluateExpression\" function cpp example site:github.com OR site:stackoverflow.com OR site:geeksforgeeks.org OR site:tutorialspoint.com",
            "query_priority": 0.7,
            "initial_score": 0.0,
            "similarity_score": 0.29884609336641954,
            "is_plagiarism": false
          },
          {
            "title": "Evaluate Expression LLDB Python C++ Type Formatter",
            "link": "https://stackoverflow.com/questions/70416372/evaluate-expression-lldb-python-c-type-formatter",
            "snippet": "EvaluateExpression(\".index()\").GetValueAsUnsigned() print(a) print(b). b always results in no value, a is fine. python \u00b7 c++ \u00b7 formatting \u00b7 lldb.",
            "query": "\"evaluateExpression\" function cpp example site:github.com OR site:stackoverflow.com OR site:geeksforgeeks.org OR site:tutorialspoint.com",
            "query_priority": 0.7,
            "initial_score": 0.0,
            "similarity_score": 0.2944710933664195,
            "is_plagiarism": false
          },
          {
            "title": "c++: LLDB + Python - how to print a std::string in the ...",
            "link": "https://stackoverflow.com/questions/39401848/c-lldb-python-how-to-print-a-stdstring-in-the-python-script",
            "snippet": "... EvaluateExpression(\"buffer.c_str()\").GetValueAsUnsigned(), 0xffffff ... Calling C++ function which accepts and returns std::string from Python ...",
            "query": "\"evaluateExpression\" function cpp example site:github.com OR site:stackoverflow.com OR site:geeksforgeeks.org OR site:tutorialspoint.com",
            "query_priority": 0.7,
            "initial_score": 0.0,
            "similarity_score": 0.2944710933664195,
            "is_plagiarism": false
          },
          {
            "title": "lldb: custom summary for a vector's elements (c++)",
            "link": "https://stackoverflow.com/questions/25665838/lldb-custom-summary-for-a-vectors-elements-c",
            "snippet": "Indeed, in the EvaluateExpression, we use \"name\" returned by GetName(). it's working correctly for a single String because GetName() returns ...",
            "query": "\"evaluateExpression\" function cpp example site:github.com OR site:stackoverflow.com OR site:geeksforgeeks.org OR site:tutorialspoint.com",
            "query_priority": 0.7,
            "initial_score": 0.0,
            "similarity_score": 0.2944710933664195,
            "is_plagiarism": false
          },
          {
            "title": "how to evaluate an Expression inside ExpressionVisitor?",
            "link": "https://stackoverflow.com/questions/8764662/how-to-evaluate-an-expression-inside-expressionvisitor",
            "snippet": "protected static object EvaluateExpression(Expression expression, ParameterExpression parameterX) { var lambda = Expression.Lambda(expression ...",
            "query": "\"evaluateExpression\" function cpp example site:github.com OR site:stackoverflow.com OR site:geeksforgeeks.org OR site:tutorialspoint.com",
            "query_priority": 0.7,
            "initial_score": 0.0,
            "similarity_score": 0.26622714268288306,
            "is_plagiarism": false
          },
          {
            "title": "ExpressionEvaluator/evaluator.cpp at master",
            "link": "https://github.com/jongilm/ExpressionEvaluator/blob/master/evaluator.cpp",
            "snippet": "// Each recursed call will return when a close brace is encountered. value1 = EvaluateExpression(&pExpr->substr(i),&iNumberOfCharactersProcessed);. #ifdef ...",
            "query": "\"evaluateExpression\" function cpp example site:github.com OR site:stackoverflow.com OR site:geeksforgeeks.org OR site:tutorialspoint.com",
            "query_priority": 0.7,
            "initial_score": 0.0,
            "similarity_score": 0.049999999999999996,
            "is_plagiarism": false
          },
          {
            "title": "Cannot retrieve data values from array quadraticExpression",
            "link": "https://stackoverflow.com/questions/48471548/cannot-retrieve-data-values-from-array-quadraticexpression",
            "snippet": "And here is the .cpp tester file #include <iostream> #include \"QuadraticExpression.h\" using namespace std; void evaluateExpression(const ...",
            "query": "\"evaluateExpression\" function cpp example site:github.com OR site:stackoverflow.com OR site:geeksforgeeks.org OR site:tutorialspoint.com",
            "query_priority": 0.7,
            "initial_score": 0.0,
            "similarity_score": 0.049999999999999996,
            "is_plagiarism": false
          }
        ],
        "total_results": 10,
        "plagiarism_detected": true,
        "plagiarism_results": [
          {
            "title": "assert macro that prints the values which are passed in",
            "link": "https://stackoverflow.com/questions/31593604/assert-macro-that-prints-the-values-which-are-passed-in",
            "snippet": "... evaluateExpression( char *format, va_list args ) { int x = va_arg( args, int ); int y = va_arg( args, int ); printf( \"evaluating \\\"%s\\\" with ...",
            "query": "\"evaluateExpression\" function cpp example site:github.com OR site:stackoverflow.com OR site:geeksforgeeks.org OR site:tutorialspoint.com",
            "query_priority": 0.7,
            "initial_score": 0.0,
            "similarity_score": 0.4733447893929818,
            "is_plagiarism": true
          },
          {
            "title": "Evaluate infix string expression consisting of only addition ...",
            "link": "https://stackoverflow.com/questions/63063876/evaluate-infix-string-expression-consisting-of-only-addition-and-multiplication",
            "snippet": "int evaluateExpression(string s) { stack<int> operandStack; stack<char> operatorStack; string token = \"\"; for(char &c : s) { if(c ...",
            "query": "\"evaluateExpression\" function cpp example site:github.com OR site:stackoverflow.com OR site:geeksforgeeks.org OR site:tutorialspoint.com",
            "query_priority": 0.7,
            "initial_score": 0.0,
            "similarity_score": 0.4046611098550774,
            "is_plagiarism": true
          },
          {
            "title": "How to evaluate a math expression given in string form?",
            "link": "https://stackoverflow.com/questions/3422673/how-to-evaluate-a-math-expression-given-in-string-form",
            "snippet": "... expression (an abstract syntax tree) ... expression, Double expectedResult) { assertEquals(expectedResult,evaluateExpression(expression)); }.",
            "query": "\"evaluateExpression\" function cpp example site:github.com OR site:stackoverflow.com OR site:geeksforgeeks.org OR site:tutorialspoint.com",
            "query_priority": 0.7,
            "initial_score": 0.0,
            "similarity_score": 0.3132911592560531,
            "is_plagiarism": true
          }
        ],
        "similarity_threshold": 0.3,
        "matching_sources": [
          "https://stackoverflow.com/questions/31593604/assert-macro-that-prints-the-values-which-are-passed-in",
          "https://stackoverflow.com/questions/63063876/evaluate-infix-string-expression-consisting-of-only-addition-and-multiplication",
          "https://stackoverflow.com/questions/3422673/how-to-evaluate-a-math-expression-given-in-string-form"
        ]
      },
      "DOC7SAM_sol3.txt": {
        "file": "/Users/guptasahaj01/Downloads/code_checker/Processing/core_backend/sessions/session_e9a631be802648d7a51a6b72d284ab5e/results/organized/solution3/DOC7SAM_sol3.txt",
        "language": "cpp",
        "timestamp": "2025-04-14T16:08:07.376279",
        "queries_used": [
          "\"evaluateExpression\" function cpp example site:github.com OR site:stackoverflow.com OR site:geeksforgeeks.org OR site:tutorialspoint.com",
          "\"for (int i = 0; i < expression.size(); i++) {\nchar currentChar = expression[i];\nif (isdigit(currentChar)) {\ncurrentNum = currentNum * 10 + (currentChar - '0');\n}\" cpp example site:github.com OR site:stackoverflow.com OR site:geeksforgeeks.org OR site:tutorialspoint.com",
          "\"while (!valueStack.empty()) {\ninsideParentheses += valueStack.top();\nvalueStack.pop();\n}\" cpp example site:github.com OR site:stackoverflow.com OR site:geeksforgeeks.org OR site:tutorialspoint.com"
        ],
        "results": [
          {
            "title": "assert macro that prints the values which are passed in",
            "link": "https://stackoverflow.com/questions/31593604/assert-macro-that-prints-the-values-which-are-passed-in",
            "snippet": "... evaluateExpression( char *format, va_list args ) { int x = va_arg( args, int ); int y = va_arg( args, int ); printf( \"evaluating \\\"%s\\\" with ...",
            "query": "\"evaluateExpression\" function cpp example site:github.com OR site:stackoverflow.com OR site:geeksforgeeks.org OR site:tutorialspoint.com",
            "query_priority": 0.7,
            "initial_score": 0.0,
            "similarity_score": 0.47367338291472694,
            "is_plagiarism": true
          },
          {
            "title": "Evaluate infix string expression consisting of only addition ...",
            "link": "https://stackoverflow.com/questions/63063876/evaluate-infix-string-expression-consisting-of-only-addition-and-multiplication",
            "snippet": "int evaluateExpression(string s) { stack<int> operandStack; stack<char> operatorStack; string token = \"\"; for(char &c : s) { if(c ...",
            "query": "\"evaluateExpression\" function cpp example site:github.com OR site:stackoverflow.com OR site:geeksforgeeks.org OR site:tutorialspoint.com",
            "query_priority": 0.7,
            "initial_score": 0.0,
            "similarity_score": 0.40891404897592804,
            "is_plagiarism": true
          },
          {
            "title": "How to evaluate a math expression given in string form?",
            "link": "https://stackoverflow.com/questions/3422673/how-to-evaluate-a-math-expression-given-in-string-form",
            "snippet": "... expression (an abstract syntax tree) ... expression, Double expectedResult) { assertEquals(expectedResult,evaluateExpression(expression)); }.",
            "query": "\"evaluateExpression\" function cpp example site:github.com OR site:stackoverflow.com OR site:geeksforgeeks.org OR site:tutorialspoint.com",
            "query_priority": 0.7,
            "initial_score": 0.0,
            "similarity_score": 0.30810976861497186,
            "is_plagiarism": true
          },
          {
            "title": "C++: Easiest way to access main variable from function?",
            "link": "https://stackoverflow.com/questions/9668985/c-easiest-way-to-access-main-variable-from-function",
            "snippet": "... evaluateExpression(string expression) { // sample expression : (* (/ a 1) (+ b 2)) if (expression.substr(0,2)==\"(+\") {cout << \"add found ...",
            "query": "\"evaluateExpression\" function cpp example site:github.com OR site:stackoverflow.com OR site:geeksforgeeks.org OR site:tutorialspoint.com",
            "query_priority": 0.7,
            "initial_score": 0.0,
            "similarity_score": 0.2940445305825363,
            "is_plagiarism": false
          },
          {
            "title": "Evaluate Expression LLDB Python C++ Type Formatter",
            "link": "https://stackoverflow.com/questions/70416372/evaluate-expression-lldb-python-c-type-formatter",
            "snippet": "EvaluateExpression(\".index()\").GetValueAsUnsigned() print(a) print(b). b always results in no value, a is fine. python \u00b7 c++ \u00b7 formatting \u00b7 lldb.",
            "query": "\"evaluateExpression\" function cpp example site:github.com OR site:stackoverflow.com OR site:geeksforgeeks.org OR site:tutorialspoint.com",
            "query_priority": 0.7,
            "initial_score": 0.0,
            "similarity_score": 0.2896695305825363,
            "is_plagiarism": false
          },
          {
            "title": "c++: LLDB + Python - how to print a std::string in the ...",
            "link": "https://stackoverflow.com/questions/39401848/c-lldb-python-how-to-print-a-stdstring-in-the-python-script",
            "snippet": "... EvaluateExpression(\"buffer.c_str()\").GetValueAsUnsigned(), 0xffffff ... Calling C++ function which accepts and returns std::string from Python ...",
            "query": "\"evaluateExpression\" function cpp example site:github.com OR site:stackoverflow.com OR site:geeksforgeeks.org OR site:tutorialspoint.com",
            "query_priority": 0.7,
            "initial_score": 0.0,
            "similarity_score": 0.2896695305825363,
            "is_plagiarism": false
          },
          {
            "title": "lldb: custom summary for a vector's elements (c++)",
            "link": "https://stackoverflow.com/questions/25665838/lldb-custom-summary-for-a-vectors-elements-c",
            "snippet": "Indeed, in the EvaluateExpression, we use \"name\" returned by GetName(). it's working correctly for a single String because GetName() returns ...",
            "query": "\"evaluateExpression\" function cpp example site:github.com OR site:stackoverflow.com OR site:geeksforgeeks.org OR site:tutorialspoint.com",
            "query_priority": 0.7,
            "initial_score": 0.0,
            "similarity_score": 0.2896695305825363,
            "is_plagiarism": false
          },
          {
            "title": "how to evaluate an Expression inside ExpressionVisitor?",
            "link": "https://stackoverflow.com/questions/8764662/how-to-evaluate-an-expression-inside-expressionvisitor",
            "snippet": "protected static object EvaluateExpression(Expression expression, ParameterExpression parameterX) { var lambda = Expression.Lambda(expression ...",
            "query": "\"evaluateExpression\" function cpp example site:github.com OR site:stackoverflow.com OR site:geeksforgeeks.org OR site:tutorialspoint.com",
            "query_priority": 0.7,
            "initial_score": 0.0,
            "similarity_score": 0.2622900280364059,
            "is_plagiarism": false
          },
          {
            "title": "ExpressionEvaluator/evaluator.cpp at master",
            "link": "https://github.com/jongilm/ExpressionEvaluator/blob/master/evaluator.cpp",
            "snippet": "// Each recursed call will return when a close brace is encountered. value1 = EvaluateExpression(&pExpr->substr(i),&iNumberOfCharactersProcessed);. #ifdef ...",
            "query": "\"evaluateExpression\" function cpp example site:github.com OR site:stackoverflow.com OR site:geeksforgeeks.org OR site:tutorialspoint.com",
            "query_priority": 0.7,
            "initial_score": 0.0,
            "similarity_score": 0.049999999999999996,
            "is_plagiarism": false
          },
          {
            "title": "Cannot retrieve data values from array quadraticExpression",
            "link": "https://stackoverflow.com/questions/48471548/cannot-retrieve-data-values-from-array-quadraticexpression",
            "snippet": "And here is the .cpp tester file #include <iostream> #include \"QuadraticExpression.h\" using namespace std; void evaluateExpression(const ...",
            "query": "\"evaluateExpression\" function cpp example site:github.com OR site:stackoverflow.com OR site:geeksforgeeks.org OR site:tutorialspoint.com",
            "query_priority": 0.7,
            "initial_score": 0.0,
            "similarity_score": 0.049999999999999996,
            "is_plagiarism": false
          }
        ],
        "total_results": 10,
        "plagiarism_detected": true,
        "plagiarism_results": [
          {
            "title": "assert macro that prints the values which are passed in",
            "link": "https://stackoverflow.com/questions/31593604/assert-macro-that-prints-the-values-which-are-passed-in",
            "snippet": "... evaluateExpression( char *format, va_list args ) { int x = va_arg( args, int ); int y = va_arg( args, int ); printf( \"evaluating \\\"%s\\\" with ...",
            "query": "\"evaluateExpression\" function cpp example site:github.com OR site:stackoverflow.com OR site:geeksforgeeks.org OR site:tutorialspoint.com",
            "query_priority": 0.7,
            "initial_score": 0.0,
            "similarity_score": 0.47367338291472694,
            "is_plagiarism": true
          },
          {
            "title": "Evaluate infix string expression consisting of only addition ...",
            "link": "https://stackoverflow.com/questions/63063876/evaluate-infix-string-expression-consisting-of-only-addition-and-multiplication",
            "snippet": "int evaluateExpression(string s) { stack<int> operandStack; stack<char> operatorStack; string token = \"\"; for(char &c : s) { if(c ...",
            "query": "\"evaluateExpression\" function cpp example site:github.com OR site:stackoverflow.com OR site:geeksforgeeks.org OR site:tutorialspoint.com",
            "query_priority": 0.7,
            "initial_score": 0.0,
            "similarity_score": 0.40891404897592804,
            "is_plagiarism": true
          },
          {
            "title": "How to evaluate a math expression given in string form?",
            "link": "https://stackoverflow.com/questions/3422673/how-to-evaluate-a-math-expression-given-in-string-form",
            "snippet": "... expression (an abstract syntax tree) ... expression, Double expectedResult) { assertEquals(expectedResult,evaluateExpression(expression)); }.",
            "query": "\"evaluateExpression\" function cpp example site:github.com OR site:stackoverflow.com OR site:geeksforgeeks.org OR site:tutorialspoint.com",
            "query_priority": 0.7,
            "initial_score": 0.0,
            "similarity_score": 0.30810976861497186,
            "is_plagiarism": true
          }
        ],
        "similarity_threshold": 0.3,
        "matching_sources": [
          "https://stackoverflow.com/questions/31593604/assert-macro-that-prints-the-values-which-are-passed-in",
          "https://stackoverflow.com/questions/63063876/evaluate-infix-string-expression-consisting-of-only-addition-and-multiplication",
          "https://stackoverflow.com/questions/3422673/how-to-evaluate-a-math-expression-given-in-string-form"
        ]
      },
      "DOC4SAM_sol3.txt": {
        "file": "/Users/guptasahaj01/Downloads/code_checker/Processing/core_backend/sessions/session_e9a631be802648d7a51a6b72d284ab5e/results/organized/solution3/DOC4SAM_sol3.txt",
        "language": "cpp",
        "timestamp": "2025-04-14T16:08:12.829035",
        "queries_used": [
          "\"evaluateExpression\" function cpp example site:github.com OR site:stackoverflow.com OR site:geeksforgeeks.org OR site:tutorialspoint.com",
          "\"for (int i = 0; i < expression.size(); ++i) {\nchar c = expression[i];\nif (isdigit(c)) {\nnum = num * 10 + (c - '0');\n}\" cpp example site:github.com OR site:stackoverflow.com OR site:geeksforgeeks.org OR site:tutorialspoint.com",
          "\"while (!values.empty()) {\nresultInParentheses += values.top();\nvalues.pop();\n}\" cpp example site:github.com OR site:stackoverflow.com OR site:geeksforgeeks.org OR site:tutorialspoint.com"
        ],
        "results": [
          {
            "title": "assert macro that prints the values which are passed in",
            "link": "https://stackoverflow.com/questions/31593604/assert-macro-that-prints-the-values-which-are-passed-in",
            "snippet": "... evaluateExpression( char *format, va_list args ) { int x = va_arg( args, int ); int y = va_arg( args, int ); printf( \"evaluating \\\"%s\\\" with ...",
            "query": "\"evaluateExpression\" function cpp example site:github.com OR site:stackoverflow.com OR site:geeksforgeeks.org OR site:tutorialspoint.com",
            "query_priority": 0.7,
            "initial_score": 0.0,
            "similarity_score": 0.46288570042016647,
            "is_plagiarism": true
          },
          {
            "title": "Evaluate infix string expression consisting of only addition ...",
            "link": "https://stackoverflow.com/questions/63063876/evaluate-infix-string-expression-consisting-of-only-addition-and-multiplication",
            "snippet": "int evaluateExpression(string s) { stack<int> operandStack; stack<char> operatorStack; string token = \"\"; for(char &c : s) { if(c ...",
            "query": "\"evaluateExpression\" function cpp example site:github.com OR site:stackoverflow.com OR site:geeksforgeeks.org OR site:tutorialspoint.com",
            "query_priority": 0.7,
            "initial_score": 0.0,
            "similarity_score": 0.39858836202866116,
            "is_plagiarism": true
          },
          {
            "title": "How to evaluate a math expression given in string form?",
            "link": "https://stackoverflow.com/questions/3422673/how-to-evaluate-a-math-expression-given-in-string-form",
            "snippet": "... expression (an abstract syntax tree) ... expression, Double expectedResult) { assertEquals(expectedResult,evaluateExpression(expression)); }.",
            "query": "\"evaluateExpression\" function cpp example site:github.com OR site:stackoverflow.com OR site:geeksforgeeks.org OR site:tutorialspoint.com",
            "query_priority": 0.7,
            "initial_score": 0.0,
            "similarity_score": 0.3060027332129333,
            "is_plagiarism": true
          },
          {
            "title": "C++: Easiest way to access main variable from function?",
            "link": "https://stackoverflow.com/questions/9668985/c-easiest-way-to-access-main-variable-from-function",
            "snippet": "... evaluateExpression(string expression) { // sample expression : (* (/ a 1) (+ b 2)) if (expression.substr(0,2)==\"(+\") {cout << \"add found ...",
            "query": "\"evaluateExpression\" function cpp example site:github.com OR site:stackoverflow.com OR site:geeksforgeeks.org OR site:tutorialspoint.com",
            "query_priority": 0.7,
            "initial_score": 0.0,
            "similarity_score": 0.29284501907464644,
            "is_plagiarism": false
          },
          {
            "title": "Evaluate Expression LLDB Python C++ Type Formatter",
            "link": "https://stackoverflow.com/questions/70416372/evaluate-expression-lldb-python-c-type-formatter",
            "snippet": "EvaluateExpression(\".index()\").GetValueAsUnsigned() print(a) print(b). b always results in no value, a is fine. python \u00b7 c++ \u00b7 formatting \u00b7 lldb.",
            "query": "\"evaluateExpression\" function cpp example site:github.com OR site:stackoverflow.com OR site:geeksforgeeks.org OR site:tutorialspoint.com",
            "query_priority": 0.7,
            "initial_score": 0.0,
            "similarity_score": 0.2889561301857575,
            "is_plagiarism": false
          },
          {
            "title": "c++: LLDB + Python - how to print a std::string in the ...",
            "link": "https://stackoverflow.com/questions/39401848/c-lldb-python-how-to-print-a-stdstring-in-the-python-script",
            "snippet": "... EvaluateExpression(\"buffer.c_str()\").GetValueAsUnsigned(), 0xffffff ... Calling C++ function which accepts and returns std::string from Python ...",
            "query": "\"evaluateExpression\" function cpp example site:github.com OR site:stackoverflow.com OR site:geeksforgeeks.org OR site:tutorialspoint.com",
            "query_priority": 0.7,
            "initial_score": 0.0,
            "similarity_score": 0.2889561301857575,
            "is_plagiarism": false
          },
          {
            "title": "lldb: custom summary for a vector's elements (c++)",
            "link": "https://stackoverflow.com/questions/25665838/lldb-custom-summary-for-a-vectors-elements-c",
            "snippet": "Indeed, in the EvaluateExpression, we use \"name\" returned by GetName(). it's working correctly for a single String because GetName() returns ...",
            "query": "\"evaluateExpression\" function cpp example site:github.com OR site:stackoverflow.com OR site:geeksforgeeks.org OR site:tutorialspoint.com",
            "query_priority": 0.7,
            "initial_score": 0.0,
            "similarity_score": 0.2889561301857575,
            "is_plagiarism": false
          },
          {
            "title": "how to evaluate an Expression inside ExpressionVisitor?",
            "link": "https://stackoverflow.com/questions/8764662/how-to-evaluate-an-expression-inside-expressionvisitor",
            "snippet": "protected static object EvaluateExpression(Expression expression, ParameterExpression parameterX) { var lambda = Expression.Lambda(expression ...",
            "query": "\"evaluateExpression\" function cpp example site:github.com OR site:stackoverflow.com OR site:geeksforgeeks.org OR site:tutorialspoint.com",
            "query_priority": 0.7,
            "initial_score": 0.0,
            "similarity_score": 0.2704408224030088,
            "is_plagiarism": false
          },
          {
            "title": "ExpressionEvaluator/evaluator.cpp at master",
            "link": "https://github.com/jongilm/ExpressionEvaluator/blob/master/evaluator.cpp",
            "snippet": "// Each recursed call will return when a close brace is encountered. value1 = EvaluateExpression(&pExpr->substr(i),&iNumberOfCharactersProcessed);. #ifdef ...",
            "query": "\"evaluateExpression\" function cpp example site:github.com OR site:stackoverflow.com OR site:geeksforgeeks.org OR site:tutorialspoint.com",
            "query_priority": 0.7,
            "initial_score": 0.0,
            "similarity_score": 0.049999999999999996,
            "is_plagiarism": false
          },
          {
            "title": "Cannot retrieve data values from array quadraticExpression",
            "link": "https://stackoverflow.com/questions/48471548/cannot-retrieve-data-values-from-array-quadraticexpression",
            "snippet": "And here is the .cpp tester file #include <iostream> #include \"QuadraticExpression.h\" using namespace std; void evaluateExpression(const ...",
            "query": "\"evaluateExpression\" function cpp example site:github.com OR site:stackoverflow.com OR site:geeksforgeeks.org OR site:tutorialspoint.com",
            "query_priority": 0.7,
            "initial_score": 0.0,
            "similarity_score": 0.049999999999999996,
            "is_plagiarism": false
          }
        ],
        "total_results": 10,
        "plagiarism_detected": true,
        "plagiarism_results": [
          {
            "title": "assert macro that prints the values which are passed in",
            "link": "https://stackoverflow.com/questions/31593604/assert-macro-that-prints-the-values-which-are-passed-in",
            "snippet": "... evaluateExpression( char *format, va_list args ) { int x = va_arg( args, int ); int y = va_arg( args, int ); printf( \"evaluating \\\"%s\\\" with ...",
            "query": "\"evaluateExpression\" function cpp example site:github.com OR site:stackoverflow.com OR site:geeksforgeeks.org OR site:tutorialspoint.com",
            "query_priority": 0.7,
            "initial_score": 0.0,
            "similarity_score": 0.46288570042016647,
            "is_plagiarism": true
          },
          {
            "title": "Evaluate infix string expression consisting of only addition ...",
            "link": "https://stackoverflow.com/questions/63063876/evaluate-infix-string-expression-consisting-of-only-addition-and-multiplication",
            "snippet": "int evaluateExpression(string s) { stack<int> operandStack; stack<char> operatorStack; string token = \"\"; for(char &c : s) { if(c ...",
            "query": "\"evaluateExpression\" function cpp example site:github.com OR site:stackoverflow.com OR site:geeksforgeeks.org OR site:tutorialspoint.com",
            "query_priority": 0.7,
            "initial_score": 0.0,
            "similarity_score": 0.39858836202866116,
            "is_plagiarism": true
          },
          {
            "title": "How to evaluate a math expression given in string form?",
            "link": "https://stackoverflow.com/questions/3422673/how-to-evaluate-a-math-expression-given-in-string-form",
            "snippet": "... expression (an abstract syntax tree) ... expression, Double expectedResult) { assertEquals(expectedResult,evaluateExpression(expression)); }.",
            "query": "\"evaluateExpression\" function cpp example site:github.com OR site:stackoverflow.com OR site:geeksforgeeks.org OR site:tutorialspoint.com",
            "query_priority": 0.7,
            "initial_score": 0.0,
            "similarity_score": 0.3060027332129333,
            "is_plagiarism": true
          }
        ],
        "similarity_threshold": 0.3,
        "matching_sources": [
          "https://stackoverflow.com/questions/31593604/assert-macro-that-prints-the-values-which-are-passed-in",
          "https://stackoverflow.com/questions/63063876/evaluate-infix-string-expression-consisting-of-only-addition-and-multiplication",
          "https://stackoverflow.com/questions/3422673/how-to-evaluate-a-math-expression-given-in-string-form"
        ]
      },
      "DOC1SAM_sol3.txt": {
        "file": "/Users/guptasahaj01/Downloads/code_checker/Processing/core_backend/sessions/session_e9a631be802648d7a51a6b72d284ab5e/results/organized/solution3/DOC1SAM_sol3.txt",
        "language": "cpp",
        "timestamp": "2025-04-14T16:08:19.461173",
        "queries_used": [
          "\"evaluateExpression\" function cpp example site:github.com OR site:stackoverflow.com OR site:geeksforgeeks.org OR site:tutorialspoint.com",
          "\"for (int i = 0; i < expression.size(); ++i) {\nchar c = expression[i];\nif (isdigit(c)) {\nnum = num * 10 + (c - '0');\n}\" cpp example site:github.com OR site:stackoverflow.com OR site:geeksforgeeks.org OR site:tutorialspoint.com",
          "\"while (!nums.empty()) {\ntemp += nums.top();\nnums.pop();\n}\" cpp example site:github.com OR site:stackoverflow.com OR site:geeksforgeeks.org OR site:tutorialspoint.com"
        ],
        "results": [
          {
            "title": "assert macro that prints the values which are passed in",
            "link": "https://stackoverflow.com/questions/31593604/assert-macro-that-prints-the-values-which-are-passed-in",
            "snippet": "... evaluateExpression( char *format, va_list args ) { int x = va_arg( args, int ); int y = va_arg( args, int ); printf( \"evaluating \\\"%s\\\" with ...",
            "query": "\"evaluateExpression\" function cpp example site:github.com OR site:stackoverflow.com OR site:geeksforgeeks.org OR site:tutorialspoint.com",
            "query_priority": 0.7,
            "initial_score": 0.0,
            "similarity_score": 0.47277342697451036,
            "is_plagiarism": true
          },
          {
            "title": "Evaluate infix string expression consisting of only addition ...",
            "link": "https://stackoverflow.com/questions/63063876/evaluate-infix-string-expression-consisting-of-only-addition-and-multiplication",
            "snippet": "int evaluateExpression(string s) { stack<int> operandStack; stack<char> operatorStack; string token = \"\"; for(char &c : s) { if(c ...",
            "query": "\"evaluateExpression\" function cpp example site:github.com OR site:stackoverflow.com OR site:geeksforgeeks.org OR site:tutorialspoint.com",
            "query_priority": 0.7,
            "initial_score": 0.0,
            "similarity_score": 0.4040696323915851,
            "is_plagiarism": true
          },
          {
            "title": "How to evaluate a math expression given in string form?",
            "link": "https://stackoverflow.com/questions/3422673/how-to-evaluate-a-math-expression-given-in-string-form",
            "snippet": "... expression (an abstract syntax tree) ... expression, Double expectedResult) { assertEquals(expectedResult,evaluateExpression(expression)); }.",
            "query": "\"evaluateExpression\" function cpp example site:github.com OR site:stackoverflow.com OR site:geeksforgeeks.org OR site:tutorialspoint.com",
            "query_priority": 0.7,
            "initial_score": 0.0,
            "similarity_score": 0.312664503634965,
            "is_plagiarism": true
          },
          {
            "title": "C++: Easiest way to access main variable from function?",
            "link": "https://stackoverflow.com/questions/9668985/c-easiest-way-to-access-main-variable-from-function",
            "snippet": "... evaluateExpression(string expression) { // sample expression : (* (/ a 1) (+ b 2)) if (expression.substr(0,2)==\"(+\") {cout << \"add found ...",
            "query": "\"evaluateExpression\" function cpp example site:github.com OR site:stackoverflow.com OR site:geeksforgeeks.org OR site:tutorialspoint.com",
            "query_priority": 0.7,
            "initial_score": 0.0,
            "similarity_score": 0.29850295611151756,
            "is_plagiarism": false
          },
          {
            "title": "Evaluate Expression LLDB Python C++ Type Formatter",
            "link": "https://stackoverflow.com/questions/70416372/evaluate-expression-lldb-python-c-type-formatter",
            "snippet": "EvaluateExpression(\".index()\").GetValueAsUnsigned() print(a) print(b). b always results in no value, a is fine. python \u00b7 c++ \u00b7 formatting \u00b7 lldb.",
            "query": "\"evaluateExpression\" function cpp example site:github.com OR site:stackoverflow.com OR site:geeksforgeeks.org OR site:tutorialspoint.com",
            "query_priority": 0.7,
            "initial_score": 0.0,
            "similarity_score": 0.2941279561115176,
            "is_plagiarism": false
          },
          {
            "title": "c++: LLDB + Python - how to print a std::string in the ...",
            "link": "https://stackoverflow.com/questions/39401848/c-lldb-python-how-to-print-a-stdstring-in-the-python-script",
            "snippet": "... EvaluateExpression(\"buffer.c_str()\").GetValueAsUnsigned(), 0xffffff ... Calling C++ function which accepts and returns std::string from Python ...",
            "query": "\"evaluateExpression\" function cpp example site:github.com OR site:stackoverflow.com OR site:geeksforgeeks.org OR site:tutorialspoint.com",
            "query_priority": 0.7,
            "initial_score": 0.0,
            "similarity_score": 0.2941279561115176,
            "is_plagiarism": false
          },
          {
            "title": "lldb: custom summary for a vector's elements (c++)",
            "link": "https://stackoverflow.com/questions/25665838/lldb-custom-summary-for-a-vectors-elements-c",
            "snippet": "Indeed, in the EvaluateExpression, we use \"name\" returned by GetName(). it's working correctly for a single String because GetName() returns ...",
            "query": "\"evaluateExpression\" function cpp example site:github.com OR site:stackoverflow.com OR site:geeksforgeeks.org OR site:tutorialspoint.com",
            "query_priority": 0.7,
            "initial_score": 0.0,
            "similarity_score": 0.2941279561115176,
            "is_plagiarism": false
          },
          {
            "title": "how to evaluate an Expression inside ExpressionVisitor?",
            "link": "https://stackoverflow.com/questions/8764662/how-to-evaluate-an-expression-inside-expressionvisitor",
            "snippet": "protected static object EvaluateExpression(Expression expression, ParameterExpression parameterX) { var lambda = Expression.Lambda(expression ...",
            "query": "\"evaluateExpression\" function cpp example site:github.com OR site:stackoverflow.com OR site:geeksforgeeks.org OR site:tutorialspoint.com",
            "query_priority": 0.7,
            "initial_score": 0.0,
            "similarity_score": 0.2657032118682119,
            "is_plagiarism": false
          },
          {
            "title": "ExpressionEvaluator/evaluator.cpp at master",
            "link": "https://github.com/jongilm/ExpressionEvaluator/blob/master/evaluator.cpp",
            "snippet": "// Each recursed call will return when a close brace is encountered. value1 = EvaluateExpression(&pExpr->substr(i),&iNumberOfCharactersProcessed);. #ifdef ...",
            "query": "\"evaluateExpression\" function cpp example site:github.com OR site:stackoverflow.com OR site:geeksforgeeks.org OR site:tutorialspoint.com",
            "query_priority": 0.7,
            "initial_score": 0.0,
            "similarity_score": 0.049999999999999996,
            "is_plagiarism": false
          },
          {
            "title": "Cannot retrieve data values from array quadraticExpression",
            "link": "https://stackoverflow.com/questions/48471548/cannot-retrieve-data-values-from-array-quadraticexpression",
            "snippet": "And here is the .cpp tester file #include <iostream> #include \"QuadraticExpression.h\" using namespace std; void evaluateExpression(const ...",
            "query": "\"evaluateExpression\" function cpp example site:github.com OR site:stackoverflow.com OR site:geeksforgeeks.org OR site:tutorialspoint.com",
            "query_priority": 0.7,
            "initial_score": 0.0,
            "similarity_score": 0.049999999999999996,
            "is_plagiarism": false
          }
        ],
        "total_results": 10,
        "plagiarism_detected": true,
        "plagiarism_results": [
          {
            "title": "assert macro that prints the values which are passed in",
            "link": "https://stackoverflow.com/questions/31593604/assert-macro-that-prints-the-values-which-are-passed-in",
            "snippet": "... evaluateExpression( char *format, va_list args ) { int x = va_arg( args, int ); int y = va_arg( args, int ); printf( \"evaluating \\\"%s\\\" with ...",
            "query": "\"evaluateExpression\" function cpp example site:github.com OR site:stackoverflow.com OR site:geeksforgeeks.org OR site:tutorialspoint.com",
            "query_priority": 0.7,
            "initial_score": 0.0,
            "similarity_score": 0.47277342697451036,
            "is_plagiarism": true
          },
          {
            "title": "Evaluate infix string expression consisting of only addition ...",
            "link": "https://stackoverflow.com/questions/63063876/evaluate-infix-string-expression-consisting-of-only-addition-and-multiplication",
            "snippet": "int evaluateExpression(string s) { stack<int> operandStack; stack<char> operatorStack; string token = \"\"; for(char &c : s) { if(c ...",
            "query": "\"evaluateExpression\" function cpp example site:github.com OR site:stackoverflow.com OR site:geeksforgeeks.org OR site:tutorialspoint.com",
            "query_priority": 0.7,
            "initial_score": 0.0,
            "similarity_score": 0.4040696323915851,
            "is_plagiarism": true
          },
          {
            "title": "How to evaluate a math expression given in string form?",
            "link": "https://stackoverflow.com/questions/3422673/how-to-evaluate-a-math-expression-given-in-string-form",
            "snippet": "... expression (an abstract syntax tree) ... expression, Double expectedResult) { assertEquals(expectedResult,evaluateExpression(expression)); }.",
            "query": "\"evaluateExpression\" function cpp example site:github.com OR site:stackoverflow.com OR site:geeksforgeeks.org OR site:tutorialspoint.com",
            "query_priority": 0.7,
            "initial_score": 0.0,
            "similarity_score": 0.312664503634965,
            "is_plagiarism": true
          }
        ],
        "similarity_threshold": 0.3,
        "matching_sources": [
          "https://stackoverflow.com/questions/31593604/assert-macro-that-prints-the-values-which-are-passed-in",
          "https://stackoverflow.com/questions/63063876/evaluate-infix-string-expression-consisting-of-only-addition-and-multiplication",
          "https://stackoverflow.com/questions/3422673/how-to-evaluate-a-math-expression-given-in-string-form"
        ]
      },
      "DOC8SAM_sol3.txt": {
        "file": "/Users/guptasahaj01/Downloads/code_checker/Processing/core_backend/sessions/session_e9a631be802648d7a51a6b72d284ab5e/results/organized/solution3/DOC8SAM_sol3.txt",
        "language": "cpp",
        "timestamp": "2025-04-14T16:08:22.188537",
        "queries_used": [
          "\"evaluateExpression\" function cpp example site:github.com OR site:stackoverflow.com OR site:geeksforgeeks.org OR site:tutorialspoint.com",
          "\"for (int i = 0; i < expression.size(); i++) {\nchar ch = expression[i];\nif (isdigit(ch)) {\nnum = num * 10 + (ch - '0');\n}\" cpp example site:github.com OR site:stackoverflow.com OR site:geeksforgeeks.org OR site:tutorialspoint.com",
          "\"while (nums.top() != -1) {\nsum += nums.top();\nnums.pop();\n}\" cpp example site:github.com OR site:stackoverflow.com OR site:geeksforgeeks.org OR site:tutorialspoint.com"
        ],
        "results": [
          {
            "title": "assert macro that prints the values which are passed in",
            "link": "https://stackoverflow.com/questions/31593604/assert-macro-that-prints-the-values-which-are-passed-in",
            "snippet": "... evaluateExpression( char *format, va_list args ) { int x = va_arg( args, int ); int y = va_arg( args, int ); printf( \"evaluating \\\"%s\\\" with ...",
            "query": "\"evaluateExpression\" function cpp example site:github.com OR site:stackoverflow.com OR site:geeksforgeeks.org OR site:tutorialspoint.com",
            "query_priority": 0.7,
            "initial_score": 0.0,
            "similarity_score": 0.4661173699388279,
            "is_plagiarism": true
          },
          {
            "title": "Evaluate infix string expression consisting of only addition ...",
            "link": "https://stackoverflow.com/questions/63063876/evaluate-infix-string-expression-consisting-of-only-addition-and-multiplication",
            "snippet": "int evaluateExpression(string s) { stack<int> operandStack; stack<char> operatorStack; string token = \"\"; for(char &c : s) { if(c ...",
            "query": "\"evaluateExpression\" function cpp example site:github.com OR site:stackoverflow.com OR site:geeksforgeeks.org OR site:tutorialspoint.com",
            "query_priority": 0.7,
            "initial_score": 0.0,
            "similarity_score": 0.3988098938714899,
            "is_plagiarism": true
          },
          {
            "title": "How to evaluate a math expression given in string form?",
            "link": "https://stackoverflow.com/questions/3422673/how-to-evaluate-a-math-expression-given-in-string-form",
            "snippet": "... expression (an abstract syntax tree) ... expression, Double expectedResult) { assertEquals(expectedResult,evaluateExpression(expression)); }.",
            "query": "\"evaluateExpression\" function cpp example site:github.com OR site:stackoverflow.com OR site:geeksforgeeks.org OR site:tutorialspoint.com",
            "query_priority": 0.7,
            "initial_score": 0.0,
            "similarity_score": 0.32179541889723484,
            "is_plagiarism": true
          },
          {
            "title": "C++: Easiest way to access main variable from function?",
            "link": "https://stackoverflow.com/questions/9668985/c-easiest-way-to-access-main-variable-from-function",
            "snippet": "... evaluateExpression(string expression) { // sample expression : (* (/ a 1) (+ b 2)) if (expression.substr(0,2)==\"(+\") {cout << \"add found ...",
            "query": "\"evaluateExpression\" function cpp example site:github.com OR site:stackoverflow.com OR site:geeksforgeeks.org OR site:tutorialspoint.com",
            "query_priority": 0.7,
            "initial_score": 0.0,
            "similarity_score": 0.3079835779005804,
            "is_plagiarism": true
          },
          {
            "title": "Evaluate Expression LLDB Python C++ Type Formatter",
            "link": "https://stackoverflow.com/questions/70416372/evaluate-expression-lldb-python-c-type-formatter",
            "snippet": "EvaluateExpression(\".index()\").GetValueAsUnsigned() print(a) print(b). b always results in no value, a is fine. python \u00b7 c++ \u00b7 formatting \u00b7 lldb.",
            "query": "\"evaluateExpression\" function cpp example site:github.com OR site:stackoverflow.com OR site:geeksforgeeks.org OR site:tutorialspoint.com",
            "query_priority": 0.7,
            "initial_score": 0.0,
            "similarity_score": 0.30409468901169145,
            "is_plagiarism": true
          },
          {
            "title": "c++: LLDB + Python - how to print a std::string in the ...",
            "link": "https://stackoverflow.com/questions/39401848/c-lldb-python-how-to-print-a-stdstring-in-the-python-script",
            "snippet": "... EvaluateExpression(\"buffer.c_str()\").GetValueAsUnsigned(), 0xffffff ... Calling C++ function which accepts and returns std::string from Python ...",
            "query": "\"evaluateExpression\" function cpp example site:github.com OR site:stackoverflow.com OR site:geeksforgeeks.org OR site:tutorialspoint.com",
            "query_priority": 0.7,
            "initial_score": 0.0,
            "similarity_score": 0.30409468901169145,
            "is_plagiarism": true
          },
          {
            "title": "lldb: custom summary for a vector's elements (c++)",
            "link": "https://stackoverflow.com/questions/25665838/lldb-custom-summary-for-a-vectors-elements-c",
            "snippet": "Indeed, in the EvaluateExpression, we use \"name\" returned by GetName(). it's working correctly for a single String because GetName() returns ...",
            "query": "\"evaluateExpression\" function cpp example site:github.com OR site:stackoverflow.com OR site:geeksforgeeks.org OR site:tutorialspoint.com",
            "query_priority": 0.7,
            "initial_score": 0.0,
            "similarity_score": 0.30409468901169145,
            "is_plagiarism": true
          },
          {
            "title": "how to evaluate an Expression inside ExpressionVisitor?",
            "link": "https://stackoverflow.com/questions/8764662/how-to-evaluate-an-expression-inside-expressionvisitor",
            "snippet": "protected static object EvaluateExpression(Expression expression, ParameterExpression parameterX) { var lambda = Expression.Lambda(expression ...",
            "query": "\"evaluateExpression\" function cpp example site:github.com OR site:stackoverflow.com OR site:geeksforgeeks.org OR site:tutorialspoint.com",
            "query_priority": 0.7,
            "initial_score": 0.0,
            "similarity_score": 0.2798174625042794,
            "is_plagiarism": false
          },
          {
            "title": "ExpressionEvaluator/evaluator.cpp at master",
            "link": "https://github.com/jongilm/ExpressionEvaluator/blob/master/evaluator.cpp",
            "snippet": "// Each recursed call will return when a close brace is encountered. value1 = EvaluateExpression(&pExpr->substr(i),&iNumberOfCharactersProcessed);. #ifdef ...",
            "query": "\"evaluateExpression\" function cpp example site:github.com OR site:stackoverflow.com OR site:geeksforgeeks.org OR site:tutorialspoint.com",
            "query_priority": 0.7,
            "initial_score": 0.0,
            "similarity_score": 0.049999999999999996,
            "is_plagiarism": false
          },
          {
            "title": "Cannot retrieve data values from array quadraticExpression",
            "link": "https://stackoverflow.com/questions/48471548/cannot-retrieve-data-values-from-array-quadraticexpression",
            "snippet": "And here is the .cpp tester file #include <iostream> #include \"QuadraticExpression.h\" using namespace std; void evaluateExpression(const ...",
            "query": "\"evaluateExpression\" function cpp example site:github.com OR site:stackoverflow.com OR site:geeksforgeeks.org OR site:tutorialspoint.com",
            "query_priority": 0.7,
            "initial_score": 0.0,
            "similarity_score": 0.049999999999999996,
            "is_plagiarism": false
          }
        ],
        "total_results": 10,
        "plagiarism_detected": true,
        "plagiarism_results": [
          {
            "title": "assert macro that prints the values which are passed in",
            "link": "https://stackoverflow.com/questions/31593604/assert-macro-that-prints-the-values-which-are-passed-in",
            "snippet": "... evaluateExpression( char *format, va_list args ) { int x = va_arg( args, int ); int y = va_arg( args, int ); printf( \"evaluating \\\"%s\\\" with ...",
            "query": "\"evaluateExpression\" function cpp example site:github.com OR site:stackoverflow.com OR site:geeksforgeeks.org OR site:tutorialspoint.com",
            "query_priority": 0.7,
            "initial_score": 0.0,
            "similarity_score": 0.4661173699388279,
            "is_plagiarism": true
          },
          {
            "title": "Evaluate infix string expression consisting of only addition ...",
            "link": "https://stackoverflow.com/questions/63063876/evaluate-infix-string-expression-consisting-of-only-addition-and-multiplication",
            "snippet": "int evaluateExpression(string s) { stack<int> operandStack; stack<char> operatorStack; string token = \"\"; for(char &c : s) { if(c ...",
            "query": "\"evaluateExpression\" function cpp example site:github.com OR site:stackoverflow.com OR site:geeksforgeeks.org OR site:tutorialspoint.com",
            "query_priority": 0.7,
            "initial_score": 0.0,
            "similarity_score": 0.3988098938714899,
            "is_plagiarism": true
          },
          {
            "title": "How to evaluate a math expression given in string form?",
            "link": "https://stackoverflow.com/questions/3422673/how-to-evaluate-a-math-expression-given-in-string-form",
            "snippet": "... expression (an abstract syntax tree) ... expression, Double expectedResult) { assertEquals(expectedResult,evaluateExpression(expression)); }.",
            "query": "\"evaluateExpression\" function cpp example site:github.com OR site:stackoverflow.com OR site:geeksforgeeks.org OR site:tutorialspoint.com",
            "query_priority": 0.7,
            "initial_score": 0.0,
            "similarity_score": 0.32179541889723484,
            "is_plagiarism": true
          },
          {
            "title": "C++: Easiest way to access main variable from function?",
            "link": "https://stackoverflow.com/questions/9668985/c-easiest-way-to-access-main-variable-from-function",
            "snippet": "... evaluateExpression(string expression) { // sample expression : (* (/ a 1) (+ b 2)) if (expression.substr(0,2)==\"(+\") {cout << \"add found ...",
            "query": "\"evaluateExpression\" function cpp example site:github.com OR site:stackoverflow.com OR site:geeksforgeeks.org OR site:tutorialspoint.com",
            "query_priority": 0.7,
            "initial_score": 0.0,
            "similarity_score": 0.3079835779005804,
            "is_plagiarism": true
          },
          {
            "title": "Evaluate Expression LLDB Python C++ Type Formatter",
            "link": "https://stackoverflow.com/questions/70416372/evaluate-expression-lldb-python-c-type-formatter",
            "snippet": "EvaluateExpression(\".index()\").GetValueAsUnsigned() print(a) print(b). b always results in no value, a is fine. python \u00b7 c++ \u00b7 formatting \u00b7 lldb.",
            "query": "\"evaluateExpression\" function cpp example site:github.com OR site:stackoverflow.com OR site:geeksforgeeks.org OR site:tutorialspoint.com",
            "query_priority": 0.7,
            "initial_score": 0.0,
            "similarity_score": 0.30409468901169145,
            "is_plagiarism": true
          }
        ],
        "similarity_threshold": 0.3,
        "matching_sources": [
          "https://stackoverflow.com/questions/31593604/assert-macro-that-prints-the-values-which-are-passed-in",
          "https://stackoverflow.com/questions/63063876/evaluate-infix-string-expression-consisting-of-only-addition-and-multiplication",
          "https://stackoverflow.com/questions/3422673/how-to-evaluate-a-math-expression-given-in-string-form",
          "https://stackoverflow.com/questions/9668985/c-easiest-way-to-access-main-variable-from-function",
          "https://stackoverflow.com/questions/70416372/evaluate-expression-lldb-python-c-type-formatter"
        ]
      }
    },
    "solution4": {
      "DOC3SAM_sol4.txt": {
        "file": "/Users/guptasahaj01/Downloads/code_checker/Processing/core_backend/sessions/session_e9a631be802648d7a51a6b72d284ab5e/results/organized/solution4/DOC3SAM_sol4.txt",
        "language": "cpp",
        "timestamp": "2025-04-14T16:08:23.490139",
        "queries_used": [
          "\"canCoverNPWithPlots\" function cpp example site:github.com OR site:stackoverflow.com OR site:geeksforgeeks.org OR site:tutorialspoint.com",
          "\"for (int mask = 0; mask < (1 << n); ++mask) {\nfor (int i = 0; i < npVertices.size(); ++i) {\nif (dp[mask][i]) {\nfor (int j = 0; j < n; ++j) {\nif (!(mask & (1 << j))) {\n// Update dp[mask | (1 << j)][newIndex]\n}\" cpp example site:github.com OR site:stackoverflow.com OR site:geeksforgeeks.org OR site:tutorialspoint.com"
        ],
        "results": [],
        "total_results": 0,
        "plagiarism_detected": false,
        "plagiarism_results": [],
        "similarity_threshold": 0.3,
        "matching_sources": []
      },
      "DOC6SAM_sol4.txt": {
        "file": "/Users/guptasahaj01/Downloads/code_checker/Processing/core_backend/sessions/session_e9a631be802648d7a51a6b72d284ab5e/results/organized/solution4/DOC6SAM_sol4.txt",
        "language": "cpp",
        "timestamp": "2025-04-14T16:08:24.720325",
        "queries_used": [
          "\"canCoverNPWithPlots\" function cpp example site:github.com OR site:stackoverflow.com OR site:geeksforgeeks.org OR site:tutorialspoint.com",
          "\"compute\" algorithm cpp implementation site:github.com OR site:stackoverflow.com OR site:geeksforgeeks.org OR site:tutorialspoint.com",
          "\"bool canCoverNPWithPlots(vector<pair<int, int>>& npVertices, vector<pair<pair<int, int>, pair<int,\nint>>>& plots)\" cpp example site:github.com OR site:stackoverflow.com OR site:geeksforgeeks.org OR site:tutorialspoint.com"
        ],
        "results": [],
        "total_results": 0,
        "plagiarism_detected": false,
        "plagiarism_results": [],
        "similarity_threshold": 0.3,
        "matching_sources": []
      },
      "DOC5SAM_sol4.txt": {
        "file": "/Users/guptasahaj01/Downloads/code_checker/Processing/core_backend/sessions/session_e9a631be802648d7a51a6b72d284ab5e/results/organized/solution4/DOC5SAM_sol4.txt",
        "language": "cpp",
        "timestamp": "2025-04-14T16:08:25.218765",
        "queries_used": [
          "\"canCoverNPWithPlots\" function cpp example site:github.com OR site:stackoverflow.com OR site:geeksforgeeks.org OR site:tutorialspoint.com",
          "\"bool canCoverNPWithPlots(vector<pair<int, int>>& npVertices, vector<pair<pair<int, int>, pair<int,\nint>>>& plots)\" cpp example site:github.com OR site:stackoverflow.com OR site:geeksforgeeks.org OR site:tutorialspoint.com",
          "\"bool canCoverNPWithPlots(vector<pair<int, int>>& npVertices, vector<pair<pair<int, int>, pair<int, int>>>& plots) { // Build quadtree from npVertices // Recursively divide NP and attempt to cover each quadrant return false; // Placeholder }\" cpp example site:github.com OR site:stackoverflow.com OR site:geeksforgeeks.org OR site:tutorialspoint.com"
        ],
        "results": [],
        "total_results": 0,
        "plagiarism_detected": false,
        "plagiarism_results": [],
        "similarity_threshold": 0.3,
        "matching_sources": []
      },
      "DOC7SAM_sol4.txt": {
        "file": "/Users/guptasahaj01/Downloads/code_checker/Processing/core_backend/sessions/session_e9a631be802648d7a51a6b72d284ab5e/results/organized/solution4/DOC7SAM_sol4.txt",
        "language": "cpp",
        "timestamp": "2025-04-14T16:08:25.856720",
        "queries_used": [
          "\"canCoverNPWithPlots\" function cpp example site:github.com OR site:stackoverflow.com OR site:geeksforgeeks.org OR site:tutorialspoint.com",
          "\"bool canCoverNPWithPlots(vector<pair<int, int>>& npVertices, vector<pair<pair<int, int>, pair<int,\nint>>>& plots)\" cpp example site:github.com OR site:stackoverflow.com OR site:geeksforgeeks.org OR site:tutorialspoint.com",
          "\"bool canCoverNPWithPlots(vector<pair<int, int>>& npVertices, vector<pair<pair<int, int>, pair<int, int>>>& plots) { // Formulate ILP to minimize uncovered area // Solve ILP using a solver return false; // Placeholder }\" cpp example site:github.com OR site:stackoverflow.com OR site:geeksforgeeks.org OR site:tutorialspoint.com"
        ],
        "results": [],
        "total_results": 0,
        "plagiarism_detected": false,
        "plagiarism_results": [],
        "similarity_threshold": 0.3,
        "matching_sources": []
      },
      "DOC2SAM_sol4.txt": {
        "file": "/Users/guptasahaj01/Downloads/code_checker/Processing/core_backend/sessions/session_e9a631be802648d7a51a6b72d284ab5e/results/organized/solution4/DOC2SAM_sol4.txt",
        "language": "cpp",
        "timestamp": "2025-04-14T16:08:26.461233",
        "queries_used": [
          "\"canCoverNPWithPlots\" function cpp example site:github.com OR site:stackoverflow.com OR site:geeksforgeeks.org OR site:tutorialspoint.com",
          "\"backtrack\" function cpp example site:github.com OR site:stackoverflow.com OR site:geeksforgeeks.org OR site:tutorialspoint.com",
          "\"backtrack\" function cpp example site:github.com OR site:stackoverflow.com OR site:geeksforgeeks.org OR site:tutorialspoint.com"
        ],
        "results": [],
        "total_results": 0,
        "plagiarism_detected": false,
        "plagiarism_results": [],
        "similarity_threshold": 0.3,
        "matching_sources": []
      },
      "DOC1SAM_sol4.txt": {
        "file": "/Users/guptasahaj01/Downloads/code_checker/Processing/core_backend/sessions/session_e9a631be802648d7a51a6b72d284ab5e/results/organized/solution4/DOC1SAM_sol4.txt",
        "language": "cpp",
        "timestamp": "2025-04-14T16:08:27.790328",
        "queries_used": [
          "\"canCoverNPWithPlots\" function cpp example site:github.com OR site:stackoverflow.com OR site:geeksforgeeks.org OR site:tutorialspoint.com",
          "\"isExactCover\" function cpp example site:github.com OR site:stackoverflow.com OR site:geeksforgeeks.org OR site:tutorialspoint.com",
          "\"for (int mask = 1; mask < (1 << n); ++mask) {\nvector<pair<int, int>> coveredArea;\nfor (int i = 0; i < n; ++i) {\nif (mask & (1 << i)) {\n// Add plot[i] to coveredArea\ncoveredArea.push_back(plots[i].first);\ncoveredArea.push_back(plots[i].second);\n}\" cpp example site:github.com OR site:stackoverflow.com OR site:geeksforgeeks.org OR site:tutorialspoint.com"
        ],
        "results": [],
        "total_results": 0,
        "plagiarism_detected": false,
        "plagiarism_results": [],
        "similarity_threshold": 0.3,
        "matching_sources": []
      },
      "DOC8SAM_sol4.txt": {
        "file": "/Users/guptasahaj01/Downloads/code_checker/Processing/core_backend/sessions/session_e9a631be802648d7a51a6b72d284ab5e/results/organized/solution4/DOC8SAM_sol4.txt",
        "language": "cpp",
        "timestamp": "2025-04-14T16:08:28.567969",
        "queries_used": [
          "\"canCoverNPWithPlots\" function cpp example site:github.com OR site:stackoverflow.com OR site:geeksforgeeks.org OR site:tutorialspoint.com",
          "\"bool canCoverNPWithPlots(vector<pair<int, int>>& npVertices, vector<pair<pair<int, int>, pair<int,\nint>>>& plots)\" cpp example site:github.com OR site:stackoverflow.com OR site:geeksforgeeks.org OR site:tutorialspoint.com",
          "\"bool canCoverNPWithPlots(vector<pair<int, int>>& npVertices, vector<pair<pair<int, int>, pair<int, int>>>& plots) { // Randomly select subsets of plots and check coverage return false; // Placeholder }\" cpp example site:github.com OR site:stackoverflow.com OR site:geeksforgeeks.org OR site:tutorialspoint.com"
        ],
        "results": [],
        "total_results": 0,
        "plagiarism_detected": false,
        "plagiarism_results": [],
        "similarity_threshold": 0.3,
        "matching_sources": []
      },
      "DOC4SAM_sol4.txt": {
        "file": "/Users/guptasahaj01/Downloads/code_checker/Processing/core_backend/sessions/session_e9a631be802648d7a51a6b72d284ab5e/results/organized/solution4/DOC4SAM_sol4.txt",
        "language": "cpp",
        "timestamp": "2025-04-14T16:08:30.021822",
        "queries_used": [
          "\"canCoverNPWithPlots\" function cpp example site:github.com OR site:stackoverflow.com OR site:geeksforgeeks.org OR site:tutorialspoint.com",
          "\"sort(plots.begin()\" cpp example site:github.com OR site:stackoverflow.com OR site:geeksforgeeks.org OR site:tutorialspoint.com",
          "\"for (const auto& plot : plots) {\n// Try to add plot to coveredArea\nif (isExactCover(npVertices, coveredArea)) {\nreturn true;\n}\" cpp example site:github.com OR site:stackoverflow.com OR site:geeksforgeeks.org OR site:tutorialspoint.com"
        ],
        "results": [],
        "total_results": 0,
        "plagiarism_detected": false,
        "plagiarism_results": [],
        "similarity_threshold": 0.3,
        "matching_sources": []
      }
    }
  }
}