int binarySearch(int arr[], int size, int target) {
int left = 0;
int right = size - 1;
while (left <= right) {
int mid = left + (right - left) / 2;
if (arr[mid] == target) {
return mid;
}
if (arr[mid] < target) {
left = mid + 1;
} else {
right = mid - 1;
}
}
return -1;
}

int main() {
int arr[] = {2, 5, 8, 12, 16, 23, 38, 45, 56, 72, 91};
int size = sizeof(arr) / sizeof(arr[0]);
cout << "Binary Search Test:" << endl;
cout << "Array: ";
for (int i = 0; i < size; ++i) {
cout << arr[i] << " ";
}
cout << endl;
int target1 = 23;
int result1 = binarySearch(arr, size, target1);
cout << "Searching for " << target1 << ": ";
if (result1 != -1) {
cout << "Found at index " << result1 << endl;
} else {
cout << "Not found" << endl;
}
int target2 = 42;
int result2 = binarySearch(arr, size, target2);
cout << "Searching for " << target2 << ": ";
if (result2 != -1) {
cout << "Found at index " << result2 << endl;
} else {
cout << "Not found" << endl;
}
return 0;
}