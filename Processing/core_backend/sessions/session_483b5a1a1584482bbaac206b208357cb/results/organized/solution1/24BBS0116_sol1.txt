struct Node {
int data;
struct Node *next;
}

void enqueue() {
int element;
if ((front == 0 && rear == MAX - 1) || (rear + 1) % MAX == front) {
printf("Queue Overflow\n");
} else {
scanf("%d", &element);
if (front == -1) front = 0;
rear = (rear + 1) % MAX;
queue[rear] = element;
}
}

void insertAtBeginning(int value) {
struct Node *new_node = (struct Node *)malloc(sizeof(struct Node));
new_node->data = value;
new_node->next = head;
head = new_node;
}

void dequeue() {
if (front == -1) {
printf("Queue Underflow\n");
} else {
if (front == rear) {
front = -1;
rear = -1;
} else {
front = (front + 1) % MAX;
}
}
}

void display() {
if (front == -1) {
printf("Queue is empty\n");
} else {
int i = front;
while (i != rear) {
printf("%d ", queue[i]);
i = (i + 1) % MAX;
}
printf("%d\n", queue[rear]);
}
}

int main() {
int choice;
while (1) {
scanf("%d", &choice);
switch (choice) {
case 1: enqueue(); break;
case 2: dequeue(); break;
case 3: display(); break;
case 4: exit(0);
}
}
return 0;
}